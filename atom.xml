<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mk-mode BLOG]]></title>
  <link href="http://komasaru.github.io/atom.xml" rel="self"/>
  <link href="http://komasaru.github.io/"/>
  <updated>2015-09-01T00:09:17+09:00</updated>
  <id>http://komasaru.github.io/</id>
  <author>
    <name><![CDATA[mk-mode.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2015年08月 - OS・ブラウザ別アクセス状況！【自動集計】]]></title>
    <link href="http://komasaru.github.io/blog/2015/09/01/blog-access/"/>
    <updated>2015-09-01T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/09/01/blog-access</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>09月になりましたので、先月08月分の当ブログアクセス状況を公開します。</p>

<!--more-->


<h4>1. アクセスをOS別に集計</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td class="blog-access-pv">16,753</td>
    <td class="blog-access-rate">58.5524</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td class="blog-access-pv">9,973</td>
    <td class="blog-access-rate">34.8560</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td class="blog-access-pv">867</td>
    <td class="blog-access-rate">3.0302</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td class="blog-access-pv">761</td>
    <td class="blog-access-rate">2.6597</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">110</td>
    <td class="blog-access-rate">0.3845</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td class="blog-access-pv">78</td>
    <td class="blog-access-rate">0.2726</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td class="blog-access-pv">37</td>
    <td class="blog-access-rate">0.1293</td>
  </tr>
  <tr>
    <td>Android</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0280</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0245</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0210</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0175</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td class="blog-access-pv">3</td>
    <td class="blog-access-rate">0.0105</td>
  </tr>
  <tr>
    <td>Debian GNU/Linux</td>
    <td class="blog-access-pv">3</td>
    <td class="blog-access-rate">0.0105</td>
  </tr>
  <tr>
    <td>NetBSD</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0035</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">28,612</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>2. アクセスをOS・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td>X</td>
    <td class="blog-access-pv">16,751</td>
    <td class="blog-access-rate">58.5454</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>NT</td>
    <td class="blog-access-pv">8,184</td>
    <td class="blog-access-rate">28.6034</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7</td>
    <td class="blog-access-pv">883</td>
    <td class="blog-access-rate">3.0861</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">851</td>
    <td class="blog-access-rate">2.9743</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">758</td>
    <td class="blog-access-rate">2.6492</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7 64 bit</td>
    <td class="blog-access-pv">462</td>
    <td class="blog-access-rate">1.6147</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>XP</td>
    <td class="blog-access-pv">280</td>
    <td class="blog-access-rate">0.9786</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista</td>
    <td class="blog-access-pv">118</td>
    <td class="blog-access-rate">0.4124</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td>unknown</td>
    <td class="blog-access-pv">110</td>
    <td class="blog-access-rate">0.3845</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">77</td>
    <td class="blog-access-rate">0.2691</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>unknown</td>
    <td class="blog-access-pv">33</td>
    <td class="blog-access-rate">0.1153</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8 64 bit</td>
    <td class="blog-access-pv">33</td>
    <td class="blog-access-rate">0.1153</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td></td>
    <td class="blog-access-pv">10</td>
    <td class="blog-access-rate">0.0350</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>64 bit</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0210</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista 64 bit</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0210</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Server 2003</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0210</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td>unknown</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0140</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td>3.6.24-3.el6 64 bit</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0140</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>64 bit</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0140</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td>4_3_5</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0140</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">28,612</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>3. アクセスをブラウザ別に集計</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td class="blog-access-pv">16,267</td>
    <td class="blog-access-rate">56.8538</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td class="blog-access-pv">6,938</td>
    <td class="blog-access-rate">24.2486</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td class="blog-access-pv">3,045</td>
    <td class="blog-access-rate">10.6424</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td class="blog-access-pv">1,943</td>
    <td class="blog-access-rate">6.7909</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td class="blog-access-pv">226</td>
    <td class="blog-access-rate">0.7899</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td class="blog-access-pv">97</td>
    <td class="blog-access-rate">0.3390</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td class="blog-access-pv">46</td>
    <td class="blog-access-rate">0.1608</td>
  </tr>
  <tr>
    <td>Chrome</td>
    <td class="blog-access-pv">16</td>
    <td class="blog-access-rate">0.0559</td>
  </tr>
  <tr>
    <td>Mozilla SeaMonkey</td>
    <td class="blog-access-pv">9</td>
    <td class="blog-access-rate">0.0315</td>
  </tr>
  <tr>
    <td>Epiphany</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0245</td>
  </tr>
  <tr>
    <td>Unknown</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0175</td>
  </tr>
  <tr>
    <td>iPod</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0140</td>
  </tr>
  <tr>
    <td>PHP</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0070</td>
  </tr>
  <tr>
    <td>Konqueror</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0070</td>
  </tr>
  <tr>
    <td>iPhone</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0070</td>
  </tr>
  <tr>
    <td>Chromium</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0035</td>
  </tr>
  <tr>
    <td>Sleipnir</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0035</td>
  </tr>
  <tr>
    <td>SRWare Iron</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0035</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">28,612</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>4. アクセスをブラウザ・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.36</td>
    <td class="blog-access-pv">12,364</td>
    <td class="blog-access-rate">43.2126</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>39.0</td>
    <td class="blog-access-pv">4,251</td>
    <td class="blog-access-rate">14.8574</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td>11.0</td>
    <td class="blog-access-pv">3,043</td>
    <td class="blog-access-rate">10.6354</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>9537.53</td>
    <td class="blog-access-pv">1,927</td>
    <td class="blog-access-rate">6.7349</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>40.0</td>
    <td class="blog-access-pv">1,318</td>
    <td class="blog-access-rate">4.6065</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.1.4</td>
    <td class="blog-access-pv">804</td>
    <td class="blog-access-rate">2.8100</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>8.0</td>
    <td class="blog-access-pv">796</td>
    <td class="blog-access-rate">2.7820</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.7.12</td>
    <td class="blog-access-pv">587</td>
    <td class="blog-access-rate">2.0516</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>38.0</td>
    <td class="blog-access-pv">558</td>
    <td class="blog-access-rate">1.9502</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>10.0</td>
    <td class="blog-access-pv">447</td>
    <td class="blog-access-rate">1.5623</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>9.0</td>
    <td class="blog-access-pv">443</td>
    <td class="blog-access-rate">1.5483</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>7.0</td>
    <td class="blog-access-pv">256</td>
    <td class="blog-access-rate">0.8947</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>31.0</td>
    <td class="blog-access-pv">225</td>
    <td class="blog-access-rate">0.7864</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>534.30</td>
    <td class="blog-access-pv">176</td>
    <td class="blog-access-rate">0.6151</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>41.0</td>
    <td class="blog-access-pv">127</td>
    <td class="blog-access-rate">0.4439</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>31.8.0</td>
    <td class="blog-access-pv">105</td>
    <td class="blog-access-rate">0.3670</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td>9.80</td>
    <td class="blog-access-pv">97</td>
    <td class="blog-access-rate">0.3390</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>37.0</td>
    <td class="blog-access-pv">71</td>
    <td class="blog-access-rate">0.2481</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.85.16</td>
    <td class="blog-access-pv">71</td>
    <td class="blog-access-rate">0.2481</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.8.9</td>
    <td class="blog-access-pv">58</td>
    <td class="blog-access-rate">0.2027</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">28,612</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - dRuby でジョブキューサーバ構築！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/29/ruby-job-queue-server-construction-by-druby/"/>
    <updated>2015-08-29T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/29/ruby-job-queue-server-construction-by-druby</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>前回に引き続き、Ruby の分散オブジェクトプログラミングするためのライブラリ dRuby についての内容です。</p>

<p>今回は、 dRuby を利用してジョブキューサーバ＆クライアントを構築してみました。</p>

<p>要は、キューに順次プッシュした内容をクライアント側から順次ポップする仕組みのことです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>Ruby 2.2.3-p173 での作業を想定。</li>
<li>本来は複数のマシンで実行することが多いと思うが、今回は１つのマシンでテストする。</li>
<li>dRuby の簡単な使用例は「<a href="http://komasaru.github.io/2015/08/25/ruby-distributed-processing-by-druby" title="Ruby - dRuby で分散処理！">Ruby - dRuby で分散処理！</a>」を参照。</li>
</ul>


<h3>1. サーバ側スクリプトの作成例</h3>

<p>Queue オブジェクトを生成して待ち受けるのみの簡単なスクリプト。</p>

<figure class='code'><figcaption><span>queue_server.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># codeing: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;drb/drb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">q</span> <span class="o">=</span> <span class="no">Queue</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span><span class="p">(</span><span class="s2">&quot;druby://localhost:8787&quot;</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="ss">safe_level</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="no">DRb</span><span class="o">.</span><span class="n">thread</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>start_service</code> の <code>safe_level</code> を <code>1</code> に設定しているのは、 <code>instance_eval</code> による危険性を防ぐための処置。</li>
</ul>


<h3>2. クライアント側 Pop スクリプトの作成例</h3>

<p>キューサーバから順次ポップして5秒後にコンソール出力するのみの簡単なスクリプト。（キューに溜め込まれるデータは時刻文字列を想定している）</p>

<figure class='code'><figcaption><span>pop_client.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;drb/drb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new_with_uri</span><span class="p">(</span><span class="s2">&quot;druby://localhost:8787&quot;</span><span class="p">)</span>
</span><span class='line'><span class="kp">loop</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="n">tm</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'>  <span class="nb">sleep</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Received at </span><span class="si">#{</span><span class="n">tm</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. クライアント側 Push スクリプトの作成例</h3>

<p>キューサーバへ現在時刻の文字列をプッシュするのみの簡単なスクリプト。</p>

<figure class='code'><figcaption><span>push_client.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;drb/drb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new_with_uri</span><span class="p">(</span><span class="s2">&quot;druby://localhost:8787&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">tm</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">push</span> <span class="n">tm</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Sended at </span><span class="si">#{</span><span class="n">tm</span><span class="si">}</span><span class="s2">.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. 動作確認</h3>

<p>まず、１つ目の端末を立ち上げて、サーバ側スクリプトを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./queue_server.rb
</span></code></pre></td></tr></table></div></figure>


<p>次に、２つ目の端末を立ち上げて、クライアント側 Pop スクリプトを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./pop_client.rb
</span></code></pre></td></tr></table></div></figure>


<p>最後に、３つ目の端末を立ち上げて、クライアント側 Push スクリプトを何度も連続して実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./push_client.rb
</span><span class='line'>Sended at 2015-07-28 23:34:02.
</span><span class='line'>$ ./push_client.rb
</span><span class='line'>Sended at 2015-07-28 23:34:03.
</span><span class='line'>$ ./push_client.rb
</span><span class='line'>Sended at 2015-07-28 23:34:03.
</span><span class='line'>$ ./push_client.rb
</span><span class='line'>Sended at 2015-07-28 23:34:04.
</span><span class='line'>$ ./push_client.rb
</span><span class='line'>Sended at 2015-07-28 23:34:04.
</span></code></pre></td></tr></table></div></figure>


<p>すると、２つ目の Pop クライアントの端末に５秒間隔で出力がなされるはずである。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./pop_client.rb
</span><span class='line'>Received at 2015-07-28 23:34:02.
</span><span class='line'>Received at 2015-07-28 23:34:03.
</span><span class='line'>Received at 2015-07-28 23:34:03.
</span><span class='line'>Received at 2015-07-28 23:34:04.
</span><span class='line'>Received at 2015-07-28 23:34:04.
</span></code></pre></td></tr></table></div></figure>


<h3>5. 注意</h3>

<ul>
<li>dRuby で構築したサーバをインターネットで外部に公開すべきではない。</li>
<li>ローカルで使用する際もセキュリティ面に注意する。</li>
</ul>


<h3>6. 参考サイト</h3>

<ul>
<li><a href="http://docs.ruby-lang.org/ja/2.2.0/library/drb.html" title="library drb(Ruby2.2.0)">library drb(Ruby2.2.0)</a></li>
</ul>


<hr />

<p>当方、一度に並列で処理をされては困るような場合に、この仕組みを応用して順次処理を行うようにしています。<br/>
（インターネット上からデータが配信されたら処理を行うようなシステムの場合に、データが集中的に配信されてもマシンに負荷をかけないようにするため）</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - dRuby で分散処理！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/25/ruby-distributed-processing-by-druby/"/>
    <updated>2015-08-25T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/25/ruby-distributed-processing-by-druby</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>dRuby とは、 Ruby で分散オブジェクトプログラミングするためのライブラリです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>Ruby 2.2.3-p173 での作業を想定。</li>
<li>本来は複数のマシンで実行することが多いと思うが、今回は１つのマシンでテストする。</li>
<li>特に別途インストールの必要なライブラリ等はない。</li>
</ul>


<h3>1. サーバ側スクリプトの作成例</h3>

<p>日付・時刻の文字列を返すだけの簡単な例。</p>

<figure class='code'><figcaption><span>druby_server.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;drb/drb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 通信を待ち受ける URI</span>
</span><span class='line'><span class="no">URI</span><span class="o">=</span><span class="s2">&quot;druby://localhost:8787&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DrubyServer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_cur_time</span>
</span><span class='line'>    <span class="n">cur_time</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y年%m月%d日 %H時%M分%S秒&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">msg</span> <span class="o">=</span> <span class="s2">&quot;ただいま </span><span class="si">#{</span><span class="n">cur_time</span><span class="si">}</span><span class="s2"> です。&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">msg</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">msg</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># リクエストを受け付けるオブジェクト</span>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">DrubyServer</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="c1"># サーバの起動</span>
</span><span class='line'><span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span><span class="p">(</span><span class="no">URI</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="ss">safe_level</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1"># DRb スレッド終了の待ち受け</span>
</span><span class='line'><span class="no">DRb</span><span class="o">.</span><span class="n">thread</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>start_service</code> の <code>safe_level</code> を <code>1</code> に設定しているのは、 <code>instance_eval</code> による危険性を防ぐための処置。</li>
</ul>


<h3>2. クライアント側スクリプトの作成例</h3>

<p>サーバのメソットを呼び出す簡単な例。</p>

<figure class='code'><figcaption><span>druby_client.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;drb/drb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 接続先 URI</span>
</span><span class='line'><span class="no">URI</span><span class="o">=</span><span class="s2">&quot;druby://localhost:8787&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># リモートオブジェクトの取得</span>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new_with_uri</span><span class="p">(</span><span class="no">URI</span><span class="p">)</span>
</span><span class='line'><span class="c1"># リモートメソッドの呼び出し</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">obj</span><span class="o">.</span><span class="n">get_cur_time</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. 動作確認</h3>

<p>まず、１つ目の端末を立ち上げて、サーバ側スクリプトを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./druby_server.rb
</span></code></pre></td></tr></table></div></figure>


<p>そして、もう１つ端末を立ち上げて、クライアント側スクリプトを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./druby_client.rb
</span><span class='line'>ただいま 2015年07月22日 24時31分16秒 です。
</span><span class='line'>$ ./druby_client.rb
</span><span class='line'>ただいま 2015年07月22日 24時32分30秒 です。
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側スクリプトを実行する度にサーバ側で処理した結果が出力されるはずである。<br/>
また、この時サーバ側の端末にも同じ出力がされるはずである。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./druby_server.rb
</span><span class='line'>ただいま 2015年07月22日 24時31分16秒 です。
</span><span class='line'>ただいま 2015年07月22日 24時32分30秒 です。
</span></code></pre></td></tr></table></div></figure>


<h3>4. 注意</h3>

<ul>
<li>dRuby で構築したサーバをインターネットで外部に公開すべきではない。</li>
<li>ローカルで使用する際もセキュリティ面に注意する。</li>
</ul>


<h3>5. 参考サイト</h3>

<ul>
<li><a href="http://docs.ruby-lang.org/ja/2.2.0/library/drb.html" title="library drb (Ruby 2.2.0)">library drb (Ruby 2.2.0)</a></li>
</ul>


<hr />

<p>この dRuby による分散処理をいろいろ応用できそうです。</p>

<p>実際、目論んでいることもありますし。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB 10.0.x - Mroonga プラグインの有効化！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/21/mariadb-mroonga-installation/"/>
    <updated>2015-08-21T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/21/mariadb-mroonga-installation</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>全文検索エンジン Groonga をベースとした MySQL のストレージエンジン Mroonga を MariaDB で使用する方法についての簡単な記録です。</p>

<p>MariaDB 10.0.x では Mroonga のプラグインがバンドルされているので、 Mroonga を別途インストールする必要はありません。<br/>
プラグインを有効にすればすぐに使用できるようになります。（但し、バンドルされている Mroonga はバージョンが少し古いようなので、最新バージョンを使用したければ別途インストールする必要があります）</p>

<p>（Groonga, Mroonga については不勉強で疎いため、乱文ご容赦ください）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>MariaDB 10.0.21 (on Linux Mint 17.2) での作業を想定。</li>
</ul>


<h3>1. プラグインの有効化</h3>

<p>以下の SQL を実行して、プラグインを有効にする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; INSTALL PLUGIN Mroonga SONAME &#39;ha_mroonga.so&#39;;
</span><span class='line'>&gt; CREATE FUNCTION last_insert_grn_id RETURNS INTEGER SONAME &#39;ha_mroonga.so&#39;;
</span><span class='line'>&gt; CREATE FUNCTION mroonga_snippet RETURNS STRING SONAME &#39;ha_mroonga.so&#39;;
</span><span class='line'>&gt; CREATE FUNCTION mroonga_command RETURNS STRING SONAME &#39;ha_mroonga.so&#39;;
</span><span class='line'>&gt; CREATE FUNCTION mroonga_escape RETURNS STRING SONAME &#39;ha_mroonga.so&#39;;
</span></code></pre></td></tr></table></div></figure>


<h3>2. プラグイン有効化の確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW ENGINES;
</span><span class='line'>+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+
</span><span class='line'>| Engine             | Support | Comment                                                                    | Transactions | XA   | Savepoints |
</span><span class='line'>+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+
</span><span class='line'>| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables                  | NO           | NO   | NO         |
</span><span class='line'>| CSV                | YES     | CSV storage engine                                                         | NO           | NO   | NO         |
</span><span class='line'>| PERFORMANCE_SCHEMA | YES     | Performance Schema                                                         | NO           | NO   | NO         |
</span><span class='line'>| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears)             | NO           | NO   | NO         |
</span><span class='line'>| MyISAM             | YES     | MyISAM storage engine                                                      | NO           | NO   | NO         |
</span><span class='line'>| MRG_MyISAM         | YES     | Collection of identical MyISAM tables                                      | NO           | NO   | NO         |
</span><span class='line'>| Mroonga            | YES     | CJK-ready fulltext search, column store                                    | NO           | NO   | NO         |
</span><span class='line'>| FEDERATED          | YES     | FederatedX pluggable storage engine                                        | YES          | NO   | YES        |
</span><span class='line'>| InnoDB             | DEFAULT | Percona-XtraDB, Supports transactions, row-level locking, and foreign keys | YES          | YES  | YES        |
</span><span class='line'>| Aria               | YES     | Crash-safe tables with MyISAM heritage                                     | NO           | NO   | NO         |
</span><span class='line'>| ARCHIVE            | YES     | Archive storage engine                                                     | NO           | NO   | NO         |
</span><span class='line'>+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+
</span><span class='line'>11 rows in set (0.00 sec)
</span></code></pre></td></tr></table></div></figure>


<h3>3. テーブルの作成方法</h3>

<p>以下は、ストレージモードでテーブルを作成する場合で、 <code>col_name_2</code> に全文検索インデックスを張る例（トークナイザはデフォルトの &ldquo;TokenBigram"）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; CREATE TABLE table_name(
</span><span class='line'>&gt;   id INT PRIMARY KEY AUTO_INCREMENT,
</span><span class='line'>&gt;   col_name_1 VARCHAR(255),
</span><span class='line'>&gt;   col_name_2 VARCHAR(255),
</span><span class='line'>&gt;   FULLTEXT INDEX (col_name_2)
</span><span class='line'>&gt; ) ENGINE = Mroonga DEFAULT CHARSET utf8;
</span></code></pre></td></tr></table></div></figure>


<p>以下は、ラッパーモード（元のストレージエンジンは InnoDB）でテーブルを作成する場合で、 <code>col_name_2</code> に全文検索インデックスを張る例（トークナイザはデフォルトの &ldquo;TokenBigram"）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; CREATE TABLE table_name (
</span><span class='line'>&gt;   id INT PRIMARY KEY AUTO_INCREMENT,
</span><span class='line'>&gt;   col_name_1 VARCHAR(255),
</span><span class='line'>&gt;   col_name_2 VARCHAR(255),
</span><span class='line'>&gt;   FULLTEXT INDEX (col_name_2)
</span><span class='line'>&gt; ) ENGINE = Mroonga COMMENT = &#39;engine &quot;InnoDB&quot;&#39; DEFAULT CHARSET utf8;
</span></code></pre></td></tr></table></div></figure>


<p>※但し、 MariaDB では <code>FULLTEXT INDEX</code> で設定しても <code>FULLTEXT KEY</code> で登録される。</p>

<p>ちなみに、テーブルデフォルトのトークナイザを MeCab に変更したい場合は以下のようにする。（設定ファイルで指定することも可能）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; ) ENGINE = Mroonga COMMENT=&#39;default_tokenizer &quot;TokenMecab&quot;&#39; DEFAULT CHARSET utf8;
</span></code></pre></td></tr></table></div></figure>


<p>FULLTEXT INDEX のパーサのみ変更したい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;   FULLTEXT INDEX (col_name_2) COMMENT=&#39;parser &quot;TokenMecab&quot;&#39;
</span></code></pre></td></tr></table></div></figure>


<h3>4. 検索例</h3>

<p>以下は、テーブル table_name の col_name_2 に「松江」を含み「出雲」を含まないレコードを検索する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span><span class="p">,</span> <span class="k">MATCH</span> <span class="p">(</span><span class="n">col_name_2</span><span class="p">)</span> <span class="n">AGAINST</span><span class="p">(</span><span class="ss">&quot;+松江 -出雲&quot;</span> <span class="k">IN</span> <span class="nb">BOOLEAN</span> <span class="k">MODE</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span>   <span class="k">FROM</span> <span class="k">table_name</span>
</span><span class='line'><span class="o">&gt;</span>  <span class="k">WHERE</span> <span class="k">MATCH</span> <span class="p">(</span><span class="n">col_name_2</span><span class="p">)</span> <span class="n">AGAINST</span><span class="p">(</span><span class="ss">&quot;+松江 -出雲&quot;</span> <span class="k">IN</span> <span class="nb">BOOLEAN</span> <span class="k">MODE</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>SELECT</code> 句内の <code>MATCH ... AGAINST ...</code> は、検索スコア。</li>
<li><code>IN BOOLEAN MODE</code> は、マッチ率の概念を省いて、単純にかつ機械的に検索するモード。</li>
</ul>


<p>ちなみに、当方で 30 万件ほどレコードのあるテーブルで同様に検索してみた結果、 <code>WHERE</code> 句を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">WHERE</span> <span class="n">col_name_2</span> <span class="k">LIKE</span> <span class="s1">&#39;%松江%&#39;</span> <span class="k">AND</span> <span class="n">col_name_2</span> <span class="k">NOT</span> <span class="k">LIKE</span> <span class="s1">&#39;%出雲%&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>にして検索するより約 100 倍高速に検索できました。さらに、レコード約 1,300 万件では 約 500 倍高速に検索できました。<br/>
（テーブルレイアウト、レコード数等にもよるでしょうが）</p>

<h3>5. 参考サイト</h3>

<ul>
<li><a href="http://mroonga.org/ja/" title="Mroonga - MySQLで高速全文検索">Mroonga - MySQLで高速全文検索</a></li>
</ul>


<p>中でも、Mroonga プラグインの有効については以下を参照。</p>

<ul>
<li><a href="http://mroonga.org/ja/blog/2015/04/29/release.html" title="Mroonga - Mroonga 5.02リリース！">Mroonga - Mroonga 5.02リリース！</a></li>
</ul>


<hr />

<p>検索の高速化を図るには必須の機能でしょう。</p>

<p>当方も InnoDB で構築している既存の DB の高速化を図ってみたいところです。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - Rroonga で全文検索！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/17/ruby-rroonga-fulltext-searching/"/>
    <updated>2015-08-17T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/17/ruby-rroonga-fulltext-searching</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Ruby でカラムストア機能付き全文検索エンジン Groonga の機能を容易に使用できる Rroonga を使用してみました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>Ruby 2.2.2-p95 での作業を想定。</li>
<li>カラムストア機能付き全文検索エンジン Groonga がインストール済みであること。</li>
</ul>


<h3>1. Rroonga のインストール</h3>

<p>以下のようにしてインストールする。<br/>
（ちなみ、 Groonga 未インストールなら、ここでインストールされるはず。（当方 Groonga インストール済みなので、未確認））</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo gem install rroonga
</span></code></pre></td></tr></table></div></figure>


<h3>2. データベースの作成</h3>

<p>簡単な都道府県名データベースを作成してみる。</p>

<p>取り急ぎ対話形式で作業を行いたいので、 pry(or irb) に入る。（プロンプトを簡易表示。 <code>groonga</code> を <code>require</code> して）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ pry --simple-prompt -r groonga
</span></code></pre></td></tr></table></div></figure>


<p>まず、エンコーディングの設定を行う。（今回は Linux なので UTF-8 に設定）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; Groonga::Context.default_options = {:encoding =&gt; :utf8}
</span><span class='line'>=&gt; {:encoding=&gt;:utf8}
</span></code></pre></td></tr></table></div></figure>


<p>そして、データベースを作成する。（データベースファイル名を指定）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; Groonga::Database.create(:path =&gt; &quot;/path/to/prefs.db&quot;)
</span><span class='line'>=&gt; #&lt;Groonga::Database id: &lt;nil&gt;, name: (anonymous), path: &lt;/path/to/prefs.db&gt;, domain: (nil), range: (nil), flags: &lt;&gt;&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>3. テーブルの作成</h3>

<p>都道府県名テーブルを作成してみる。（テーブル名、テーブルタイプを指定）<br/>
（テーブルタイプには <code>hash</code>, <code>patricia_trie</code>, <code>double_array_trie</code>, <code>array</code> が指定可能）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; Groonga::Schema.create_table(&quot;Prefs&quot;, :type =&gt; :hash) do |tbl|
</span><span class='line'> |   tbl.text(&quot;pref_name&quot;)
</span><span class='line'> | end
</span><span class='line'>=&gt; [#&lt;Groonga::Schema::TableDefinition:0x007f9fe62cef60
</span><span class='line'>  @definitions=
</span><span class='line'>   [#&lt;Groonga::Schema::ColumnDefinition:0x007f9fe62ce1f0
</span><span class='line'>     @name=&quot;pref_name&quot;,
</span><span class='line'>     @options={:persistent=&gt;true, :named_path=&gt;nil},
</span><span class='line'>     @type=&quot;Text&quot;&gt;],
</span><span class='line'>  @name=&quot;Prefs&quot;,
</span><span class='line'>  @options=
</span><span class='line'>   {:context=&gt;
</span><span class='line'>     #&lt;Groonga::Context encoding: &lt;:utf8&gt;, database: &lt;#&lt;Groonga::Database id: &lt;nil&gt;, name: (anonymous), path: &lt;/path/to/prefs.db&gt;, domain: (nil), range: (nil), flags: &lt;&gt;&gt;&gt;&gt;,
</span><span class='line'>    :type=&gt;:hash},
</span><span class='line'>  @table_type=Groonga::Hash&gt;]
</span></code></pre></td></tr></table></div></figure>


<p>テーブルが作成されたか確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs = Groonga[&quot;Prefs&quot;]
</span><span class='line'>=&gt; #&lt;Groonga::Hash id: &lt;256&gt;, name: &lt;Prefs&gt;, path: &lt;/path/to/prefs.db.0000100&gt;, domain: &lt;ShortText&gt;, range: (nil), flags: &lt;&gt;, size: &lt;0&gt;, encoding: &lt;:utf8&gt;, default_tokenizer: (nil), token_filters: [], normalizer: (nil)&gt;
</span><span class='line'>&gt;&gt; prefs.size
</span><span class='line'>=&gt; 0
</span></code></pre></td></tr></table></div></figure>


<h3>4. レコードの追加</h3>

<p>以下のようにして、テーブルにレコードを追加していく。（47都道府県分。別途作成しておいた配列をループさせて登録するのがよいだろう）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs.add(&quot;Hokkaido&quot;, :pref_name =&gt; &quot;北海道&quot;)
</span><span class='line'>=&gt; #&lt;Groonga::Record:0x007f9fe69e4480 ..., attributes: {&quot;_id&quot;=&gt;1, &quot;_key&quot;=&gt;&quot;Hokkaido&quot;, &quot;pref_name&quot;=&gt;&quot;北海道&quot;}&gt;
</span></code></pre></td></tr></table></div></figure>


<p>以下のような方法で追加することも可能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs.add(&quot;Aomoriken&quot;)
</span><span class='line'>=&gt; #&lt;Groonga::Record:0x007f9fe6755020 ..., attributes: {&quot;_id&quot;=&gt;3, &quot;_key&quot;=&gt;&quot;Aomoriken&quot;, &quot;pref_name&quot;=&gt;nil}&gt;
</span><span class='line'>&gt;&gt; prefs[&quot;Aomoriken&quot;].pref_name = &quot;青森県&quot;
</span><span class='line'>=&gt; &quot;青森県&quot;
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、削除するには以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs.delete(&quot;Aomoriken&quot;)
</span><span class='line'>=&gt; nil
</span></code></pre></td></tr></table></div></figure>


<h3>5. レコードの参照</h3>

<p>登録したレコードを参照してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs[&quot;Shimaneken&quot;]
</span><span class='line'>=&gt; #&lt;Groonga::Record:0x007f9fe671a1f0 ..., attributes: {&quot;_id&quot;=&gt;32, &quot;_key&quot;=&gt;&quot;Shimaneken&quot;, &quot;pref_name&quot;=&gt;&quot;島根県&quot;}&gt;
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs[&quot;Shimaneken&quot;].id
</span><span class='line'>=&gt; 32
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs[&quot;Shimaneken&quot;].key
</span><span class='line'>=&gt; &quot;Shimaneken&quot;
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs[&quot;Shimaneken&quot;].pref_name
</span><span class='line'>=&gt; &quot;島根県&quot;
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs.size
</span><span class='line'>=&gt; 47
</span></code></pre></td></tr></table></div></figure>


<h3>6. 全文検索用語彙テーブルの作成</h3>

<p>全文検索用語彙テーブルを作成する。（以下は、テーブルタイプを PatriciaTrie に、ノーマライザを大文字小文字の区別をしない NormalizerAuto に、デフォルトトークナイザを N-gram の一種バイグラムに設定する例）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; Groonga::Schema.create_table(&quot;Terms&quot;,
</span><span class='line'> |   :type =&gt; :patricia_trie,
</span><span class='line'> |   :normalizer =&gt; :NormalizerAuto,
</span><span class='line'> | :default_tokenizer =&gt; &quot;TokenBigram&quot;)
</span><span class='line'>=&gt; [#&lt;Groonga::Schema::TableDefinition:0x007f9fe6bb9cb0
</span><span class='line'>  @definitions=[],
</span><span class='line'>  @name=&quot;Terms&quot;,
</span><span class='line'>  @options=
</span><span class='line'>   {:context=&gt;
</span><span class='line'>     #&lt;Groonga::Context encoding: &lt;:utf8&gt;, database: &lt;#&lt;Groonga::Database id: &lt;nil&gt;, name: (anonymous), path: &lt;/path/to/prefs.db&gt;, domain: (nil), range: (nil), flags: &lt;&gt;&gt;&gt;&gt;,
</span><span class='line'>    :type=&gt;:patricia_trie,
</span><span class='line'>    :normalizer=&gt;:NormalizerAuto,
</span><span class='line'>    :default_tokenizer=&gt;&quot;TokenBigram&quot;},
</span><span class='line'>  @table_type=Groonga::PatriciaTrie&gt;]
</span></code></pre></td></tr></table></div></figure>


<h3>7. 全文検索用語彙テーブルのインデックス定義</h3>

<p>今回は都道府県名ローマ字で検索してみることにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; Groonga::Schema.change_table(&quot;Terms&quot;) do |tbl|
</span><span class='line'> |   tbl.index(&quot;Prefs.pref_name&quot;)
</span><span class='line'> | end
</span><span class='line'>=&gt; [#&lt;Groonga::Schema::TableDefinition:0x007f9fe6a823d8
</span><span class='line'>  @definitions=
</span><span class='line'>   [#&lt;Groonga::Schema::IndexColumnDefinition:0x007f9fe6a81d48
</span><span class='line'>     @name=nil,
</span><span class='line'>     @options={:persistent=&gt;true, :named_path=&gt;nil},
</span><span class='line'>     @target_columns=[&quot;pref_name&quot;],
</span><span class='line'>     @target_table=&quot;Prefs&quot;&gt;],
</span><span class='line'>  @name=&quot;Terms&quot;,
</span><span class='line'>  @options=
</span><span class='line'>   {:context=&gt;
</span><span class='line'>     #&lt;Groonga::Context encoding: &lt;:utf8&gt;, database: &lt;#&lt;Groonga::Database id: &lt;nil&gt;, name: (anonymous), path: &lt;/path/to/prefs.db&gt;, domain: (nil), range: (nil), flags: &lt;&gt;&gt;&gt;&gt;,
</span><span class='line'>    :change=&gt;true},
</span><span class='line'>  @table_type=Groonga::Array&gt;]
</span></code></pre></td></tr></table></div></figure>


<h3>8. 検索の確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt;&gt; prefs_shimane = prefs.select { |rec| rec.pref_name =~ &quot;島根県&quot; }    =&gt; #&lt;Groonga::Hash id: &lt;2147483655&gt;, name: (anonymous), path: (temporary), domain: &lt;Prefs&gt;, range: (nil), flags: &lt;WITH_SUBREC&gt;, size: &lt;1&gt;, encoding: &lt;:utf8&gt;, default_tokenizer: (nil), token_filters: [], normalizer: (nil)&gt;
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs_shimane.size
</span><span class='line'>=&gt; 1
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs_shimane.collect { |rec| rec.key.key }
</span><span class='line'>=&gt; [&quot;Shimaneken&quot;]
</span><span class='line'>
</span><span class='line'>&gt;&gt; prefs_shimane.collect { |rec| rec[&quot;_key&quot;] }
</span><span class='line'>=&gt; [&quot;Shimaneken&quot;]
</span></code></pre></td></tr></table></div></figure>


<h3>9. 参考サイト</h3>

<ul>
<li><a href="http://groonga.org/ja/" title="Groonga - カラムストア機能付き全文検索エンジン">Groonga - カラムストア機能付き全文検索エンジン</a></li>
<li><a href="http://ranguba.org/ja/" title="RubyでGroonga使って全文検索 - ラングバ">RubyでGroonga使って全文検索 - ラングバ</a></li>
</ul>


<hr />

<p>その他の詳細な使用方法は実際に Ruby コーディングしながら覚えることになるでしょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - gnuplot でグラフ描画！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/13/ruby-graph-drawing-by-gnuplot/"/>
    <updated>2015-08-13T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/13/ruby-graph-drawing-by-gnuplot</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Ruby で容易にグラフを描画できる RubyGems ライブラリ gnuplot を使用してみました。</p>

<p>RubyGems ライブラリ gnuplot は、2次元や3次元のグラフを描画するためのコマンドラインツール Gnuplot を Ruby で使用できるようにラップしたものです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.1(64bit) 一般ユーザでの作業を想定。</li>
<li>Ruby 2.2.2-p95 での作業を想定。</li>
<li>Gnuplot インストール済みであること。（<a href="http://komasaru.github.io/2015/07/30/linux-mint-installation-gnuplot/" title="Linux Mint - Gnuplot でグラフ描画！">Linux Mint - Gnuplot でグラフ描画！</a>）</li>
</ul>


<h3>1. RubyGems パッケージのインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo gem install gnuplot
</span></code></pre></td></tr></table></div></figure>


<h3>2. 動作確認</h3>

<h4>2-1. 作成例・１</h4>

<p>単純な<script type="math/tex">sin</script>曲線・<script type="math/tex">cos</script>曲線を描画する例。</p>

<figure class='code'><figcaption><span>gnuplot_1.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'><span class="c1"># Ruby script to draw a graph by gnuplot.(Ex.1)</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;gnuplot&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Gnuplot</span><span class="o">.</span><span class="n">open</span> <span class="k">do</span> <span class="o">|</span><span class="n">gp</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Gnuplot</span><span class="o">::</span><span class="no">Plot</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">gp</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">plot</span><span class="o">|</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">xrange</span> <span class="s2">&quot;[-10:10]&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">title</span>  <span class="s2">&quot;作成例１&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">xlabel</span> <span class="s2">&quot;x&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">ylabel</span> <span class="s2">&quot;y&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">grid</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="no">Gnuplot</span><span class="o">::</span><span class="no">DataSet</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;sin(x)&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ds</span><span class="o">|</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">with</span>      <span class="o">=</span> <span class="s2">&quot;lines&quot;</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">linewidth</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="no">Gnuplot</span><span class="o">::</span><span class="no">DataSet</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;cos(x)&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ds</span><span class="o">|</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">with</span>      <span class="o">=</span> <span class="s2">&quot;lines&quot;</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">linewidth</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/18575f0245952cae7d02" title="Gist - Ruby script to draw a graph by gnuplot.(Ex.1)">Gist - Ruby script to draw a graph by gnuplot.(Ex.1)</a></li>
</ul>


<p>そして、実行権限を付与して実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo chmod +x gnuplot_1.rb
</span><span class='line'>
</span><span class='line'>$ ./gnuplot_1.rb
</span></code></pre></td></tr></table></div></figure>


<p>Gnuplot ウィンドウが開き、グラフが描画される。</p>

<p><img src="http://komasaru.github.io/images/2015/08/13/GNUPLOT_1.png" title="GNUPLOT_1" alt="GNUPLOT_1" /></p>

<p>但し、環境によってはこのウィンドウを閉じようとしてもうまく閉じれないかもしれない。（termnal が &ldquo;wxt&rdquo; の場合。 terminal が &ldquo;x11&rdquo; 等なら閉じれるが、日本語は使用できない）<br/>
ちなみに、本家の gnuplot では、この問題は &ldquo;Close&rdquo; を &ldquo;exit&rdquo; でなく &ldquo;exit gnuplot&rdquo; にバインドすれば解決するようだが、今回の RubyGems ライブラリでは通用しない模様。（試行してみた結果）</p>

<h4>2-2. 作成例・２</h4>

<script type="math/tex">y=x^3 - 2x + 2 \ (x={-2.0,-1.9,\cdots,1.9,2.0})</script>


<p>のグラフを PNG ファイルに描画・出力する例。</p>

<figure class='code'><figcaption><span>gnuplot_2.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'><span class="c1"># Ruby script to draw a graph by gnuplot.(Ex.2)</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;gnuplot&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Gnuplot</span><span class="o">.</span><span class="n">open</span> <span class="k">do</span> <span class="o">|</span><span class="n">gp</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Gnuplot</span><span class="o">::</span><span class="no">Plot</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">gp</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">plot</span><span class="o">|</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">terminal</span> <span class="s2">&quot;png enhanced font &#39;IPA P ゴシック&#39; fontscale 1.2&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">output</span>   <span class="s2">&quot;gnuplot_2.png&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">title</span>    <span class="s2">&quot;作成例２&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">xlabel</span>   <span class="s2">&quot;x&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">ylabel</span>   <span class="s2">&quot;y=x^3-2x+2&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">grid</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">20</span><span class="o">.</span><span class="n">.</span><span class="mi">20</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span><span class="o">.</span><span class="n">to_f</span> <span class="o">/</span> <span class="mi">10</span><span class="o">.</span><span class="mi">0</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">**</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">v</span> <span class="o">+</span> <span class="mi">2</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="no">Gnuplot</span><span class="o">::</span><span class="no">DataSet</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ds</span><span class="o">|</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">with</span>      <span class="o">=</span> <span class="s2">&quot;linespoints&quot;</span>  <span class="c1"># 点のみなら &quot;points&quot;</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">linewidth</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">linecolor</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">notitle</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/27e65a70d4681dd73370" title="Gist - Ruby script to draw a graph by gnuplot.(Ex.2)">Gist - Ruby script to draw a graph by gnuplot.(Ex.2)</a></li>
</ul>


<p>そして、実行権限を付与して実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo chmod +x gnuplot_2.rb
</span><span class='line'>
</span><span class='line'>$ ./gnuplot_2.rb
</span></code></pre></td></tr></table></div></figure>


<p>&ldquo;gnuplot_2.png&rdquo; というファイルが出力される。</p>

<p><img src="http://komasaru.github.io/images/2015/08/13/GNUPLOT_2.png" title="GNUPLOT_2" alt="GNUPLOT_2" /></p>

<h4>2-3. 作成例・３</h4>

<script type="math/tex">z=sin(x)cos(x)</script>


<p>の三次元グラフを PNG ファイルに描画・出力する例。</p>

<figure class='code'><figcaption><span>gnuplot_3.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'><span class="c1"># Ruby script to draw a graph by gnuplot.(Ex.3)</span>
</span><span class='line'><span class="c1">#-----------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;gnuplot&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Gnuplot</span><span class="o">.</span><span class="n">open</span> <span class="k">do</span> <span class="o">|</span><span class="n">gp</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Gnuplot</span><span class="o">::</span><span class="no">SPlot</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">gp</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">plot</span><span class="o">|</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">terminal</span> <span class="s2">&quot;png enhanced font &#39;IPA P ゴシック&#39; fontscale 1.2&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">output</span>   <span class="s2">&quot;gnuplot_3.png&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">set</span>      <span class="s2">&quot;object 1 rect from screen 0,0 to screen 1,1 fc rgb &#39;#D0D0E0&#39; fillstyle solid 1.0 behind&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">title</span>    <span class="s2">&quot;作成例３&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">xrange</span>   <span class="s2">&quot;[-10:10]&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">yrange</span>   <span class="s2">&quot;[-10:10]&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">xlabel</span>   <span class="s2">&quot;x&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">ylabel</span>   <span class="s2">&quot;y&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">zlabel</span>   <span class="s2">&quot;z&quot;</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">pm3d</span>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">grid</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">plot</span><span class="o">.</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="no">Gnuplot</span><span class="o">::</span><span class="no">DataSet</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;sin(x)*cos(y)&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ds</span><span class="o">|</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">with</span>      <span class="o">=</span> <span class="s2">&quot;lines&quot;</span>
</span><span class='line'>      <span class="n">ds</span><span class="o">.</span><span class="n">linecolor</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/1395add506fd9a1a4bd6" title="Gist - Ruby script to draw a graph by gnuplot.(Ex.3)">Gist - Ruby script to draw a graph by gnuplot.(Ex.3)</a></li>
</ul>


<p>そして、実行権限を付与して実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo chmod +x gnuplot_3.rb
</span><span class='line'>
</span><span class='line'>$ ./gnuplot_3.rb
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://komasaru.github.io/images/2015/08/13/GNUPLOT_3.png" title="GNUPLOT_3" alt="GNUPLOT_3" /></p>

<h3>参考サイト</h3>

<ul>
<li><a href="http://www.gnuplot.info/" title="gnuplot">gnuplot</a></li>
<li><a href="https://rubygems.org/gems/gnuplot" title="gnuplot - RubyGems.org - your community gem host">gnuplot - RubyGems.org - your community gem host</a></li>
</ul>


<hr />

<p>Ruby で処理した得た数値をグラフ化することが多い場合は重宝するでしょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint - Groonga インストール（by ソースビルド）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/09/linux-mint-groonga-installation-by-src/"/>
    <updated>2015-08-09T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/09/linux-mint-groonga-installation-by-src</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>オープンソースのカラムストア機能付き全文検索エンジン <a href="http://groonga.org/ja/" title="Groonga - カラムストア機能付き全文検索エンジン">Groonga</a> を、ソースをビルドしてインストールする方法についての記録です。（最後に簡単な使用例も紹介）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>当記事執筆時点で最新の Groonga 5.0.5 をインストールする。</li>
<li>トークナイザは、デフォルトの N-gram 方式ではなく形態素解析器 MeCab を使用することを想定。</li>
<li>ここでは、全文検索がどういうものかという説明はしない。</li>
<li>以下の説明内で出力するデータは、可読性を考慮して整形している。</li>
</ul>


<h3>1. 依存パッケージのインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-get -y install wget tar build-essential \
</span><span class='line'>&gt; zlib1g-dev liblzo2-dev libmsgpack-dev \
</span><span class='line'>&gt; libzmq-dev libevent-dev libmecab-dev
</span></code></pre></td></tr></table></div></figure>


<h3>2. アーカーブソースの取得</h3>

<p>アーカイブファイルをダウンロード後、展開する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ wget http://packages.groonga.org/source/groonga/groonga-5.0.5.tar.gz
</span><span class='line'>$ tar zxvf groonga-5.0.5.tar.gz
</span></code></pre></td></tr></table></div></figure>


<h3>3. ビルド＆インストール</h3>

<p><code>configure</code>, <code>make</code>, <code>make install</code> する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ cd groonga-5.0.5
</span><span class='line'>$ ./configure
</span><span class='line'>$ make -j$(grep &#39;^processor&#39; /proc/cpuinfo | wc -l)
</span><span class='line'>$ sudo make install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>make</code> の <code>-j$(grep '^processor' /proc/cpuinfo | wc -l)</code> の部分はプロセッサ数が明確なら <code>-j4</code> のように指定してもよいし、速度を気にしないのなら単に <code>make</code> のみでもよい。</li>
<li><code>configure</code> オプションについては <a href="http://groonga.org/ja/docs/install/others.html#source-configure">configure</a> を参照。</li>
</ul>


<p>そして、インストールされたかバージョンを表示して確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ groonga --version
</span><span class='line'>groonga 5.0.5 [linux-gnu,x86_64,utf8,match-escalation-threshold=0,nfkc,mecab,msgpack,onigmo,zlib,epoll]
</span><span class='line'>
</span><span class='line'>configure options: &lt;&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>4. 動作確認</h3>

<p>簡単に動作確認してみる。（パスは適宜変更）<br/>
以下は、都道府県名のローマ字表記を <code>_key</code>、都道府県名の漢字表記を <code>name</code> として登録する例。（簡易都道府県名データベース）</p>

<h4>4-1. データベースの作成</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ mkdir ~/groonga-db
</span><span class='line'>$ groonga -n ~/groonga-db/test.db
</span></code></pre></td></tr></table></div></figure>


<p>データベース作成後は自動で対話モードに入るが、手動で対話モードへ入るには以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ groonga ~/groonga-db/test.db
</span></code></pre></td></tr></table></div></figure>


<h4>4-2. テーブルの作成</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; table_create --name Prefs --flags TABLE_HASH_KEY --key_type ShortText
</span><span class='line'>[
</span><span class='line'>  [0,1436411689.75983,0.0292973518371582],
</span><span class='line'>  true
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<h4>4-3. テーブルの表示</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; select --table Prefs
</span><span class='line'>[
</span><span class='line'>  [0,1436411701.50367,0.000922203063964844],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [0],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<h4>4-4. カラムの作成</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; column_create --table Prefs --name name --type ShortText
</span><span class='line'>[
</span><span class='line'>  [0,1436411764.36768,0.0517301559448242],
</span><span class='line'>  true
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>&gt; select --table Prefs
</span><span class='line'>[
</span><span class='line'>  [0,1436411783.16738,0.000133037567138672],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [0],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;name&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<h4>4-5. データのロード</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; load --table Prefs
</span><span class='line'>[
</span><span class='line'>  {&quot;_key&quot;:&quot;Hokkaido&quot;,&quot;name&quot;:&quot;北海道&quot;},
</span><span class='line'>  {&quot;_key&quot;:&quot;Aomoriken&quot;,&quot;name&quot;:&quot;青森県&quot;},
</span><span class='line'>           :
</span><span class='line'>  ====&lt; 途中省略 &gt;====
</span><span class='line'>           :
</span><span class='line'>  {&quot;_key&quot;:&quot;Kagoshimaken&quot;,&quot;name&quot;:&quot;鹿児島県&quot;},
</span><span class='line'>  {&quot;_key&quot;:&quot;Okinawaken&quot;,&quot;name&quot;:&quot;沖縄県&quot;},
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、以下のようにコマンドラインから JSON 形式で作成したファイルを取り込んでもよい。</p>

<figure class='code'><figcaption><span>load.grn</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>load --table Prefs
</span><span class='line'>[
</span><span class='line'>  {&quot;_key&quot;:&quot;Hokkaido&quot;,&quot;name&quot;:&quot;北海道&quot;},
</span><span class='line'>  {&quot;_key&quot;:&quot;Aomoriken&quot;,&quot;name&quot;:&quot;青森県&quot;},
</span><span class='line'>           :
</span><span class='line'>  ====&lt; 途中省略 &gt;====
</span><span class='line'>           :
</span><span class='line'>  {&quot;_key&quot;:&quot;Kagoshimaken&quot;,&quot;name&quot;:&quot;鹿児島県&quot;},
</span><span class='line'>  {&quot;_key&quot;:&quot;Okinawaken&quot;,&quot;name&quot;:&quot;沖縄県&quot;},
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ groonga ~/groonga-db/test.db &lt; load.grn
</span><span class='line'>[[0,1436415458.66362,0.00340938568115234],47]
</span></code></pre></td></tr></table></div></figure>


<h4>4-6. レコードの取得</h4>

<figure class='code'><figcaption><span>"全レコードを取得（但し、先頭10件）"</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>select --table Prefs
</span><span class='line'>[
</span><span class='line'>  [0,1436415521.50463,0.00343823432922363],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [47],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;name&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ],
</span><span class='line'>      [1,&quot;Hokkaido&quot;,&quot;北海道&quot;],
</span><span class='line'>      [2,&quot;Aomoriken&quot;,&quot;青森県&quot;],
</span><span class='line'>      [3,&quot;Iwateken&quot;,&quot;岩手県&quot;],
</span><span class='line'>      [4,&quot;Miyagiken&quot;,&quot;宮城県&quot;],
</span><span class='line'>      [5,&quot;Akitaken&quot;,&quot;秋田県&quot;],
</span><span class='line'>      [6,&quot;Yamagataken&quot;,&quot;山形県&quot;],
</span><span class='line'>      [7,&quot;Fukushimaken&quot;,&quot;福島県&quot;],
</span><span class='line'>      [8,&quot;Ibarakiken&quot;,&quot;茨城県&quot;],
</span><span class='line'>      [9,&quot;Tochigiken&quot;,&quot;栃木県&quot;],
</span><span class='line'>      [10,&quot;Gunmaken&quot;,&quot;群馬県&quot;]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>"ID が 32 のレコードを取得"</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; select --table Prefs --query _id:32
</span><span class='line'>[
</span><span class='line'>  [0,1436415572.03281,0.0471560955047607],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [1],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;name&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ],
</span><span class='line'>      [32,&quot;Shimaneken&quot;,&quot;島根県&quot;]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>"KEY が shimaneken のレコードを取得"</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; select --table Prefs --query &#39;_key:&quot;Shimaneken&quot;&#39;
</span><span class='line'>[
</span><span class='line'>  [0,1436415572.03281,0.0471560955047607],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [1],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;name&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ],
</span><span class='line'>      [32,&quot;Shimaneken&quot;,&quot;島根県&quot;]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span></code></pre></td></tr></table></div></figure>


<h4>4-7. 全文検索用の語彙表の作成</h4>

<p>高速な全文検索を実現するためには転置インデックスが必要であるので、転置インデックスとして使用するテーブルを作成する。（トークナイザとして MeCab を使用する）</p>

<p>辞書テーブルの作成は以下のようにする。</p>

<figure class='code'><figcaption><span>辞書テーブルの作成</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; table_create --name Terms --flags TABLE_PAT_KEY|KEY_NORMALIZE --key_type ShortText --default_tokenizer TokenMecab
</span><span class='line'>[[0,1436416480.43314,0.0687055587768555],true]
</span></code></pre></td></tr></table></div></figure>


<p>辞書テーブルへのカラムの作成は以下のようにする。</p>

<figure class='code'><figcaption><span>辞書テーブルへのカラムの作成</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; column_create --table Terms --name pref_name --flags COLUMN_INDEX|WITH_POSITION --type Prefs --source name
</span><span class='line'>[[0,1436416570.78517,0.964933156967163],true]
</span></code></pre></td></tr></table></div></figure>


<p>辞書テーブルの確認は以下のようにする。</p>

<figure class='code'><figcaption><span>辞書テーブルの確認</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; select --table Terms
</span><span class='line'>[
</span><span class='line'>  [0,1436416592.4811,0.000155210494995117],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [50],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;pref_name&quot;,&quot;UInt32&quot;]
</span><span class='line'>      ],
</span><span class='line'>      [1,&quot;三重&quot;,1],
</span><span class='line'>      [2,&quot;京都&quot;,1],
</span><span class='line'>      [3,&quot;佐賀&quot;,1],
</span><span class='line'>      [4,&quot;兵庫&quot;,1],
</span><span class='line'>      [5,&quot;北海道&quot;,1],
</span><span class='line'>      [6,&quot;千葉&quot;,1],
</span><span class='line'>      [7,&quot;和歌山&quot;,1],
</span><span class='line'>      [8,&quot;埼玉&quot;,1],
</span><span class='line'>      [9,&quot;大分&quot;,1],
</span><span class='line'>      [10,&quot;大阪&quot;,1]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<p>テーブルの検索は以下のようにする。</p>

<figure class='code'><figcaption><span>テーブルの検索</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; select --table Prefs --query name:@府
</span><span class='line'>[
</span><span class='line'>  [0,1436416671.28152,0.000936269760131836],
</span><span class='line'>  [
</span><span class='line'>    [
</span><span class='line'>      [2],
</span><span class='line'>      [
</span><span class='line'>        [&quot;_id&quot;,&quot;UInt32&quot;],
</span><span class='line'>        [&quot;_key&quot;,&quot;ShortText&quot;],
</span><span class='line'>        [&quot;name&quot;,&quot;ShortText&quot;]
</span><span class='line'>      ],
</span><span class='line'>      [26,&quot;Kyotofu&quot;,&quot;京都府&quot;],
</span><span class='line'>      [27,&quot;Osakafu&quot;,&quot;大阪府&quot;]
</span><span class='line'>    ]
</span><span class='line'>  ]
</span><span class='line'>]
</span></code></pre></td></tr></table></div></figure>


<h4>4-8. 対話モードの終了</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; quit
</span></code></pre></td></tr></table></div></figure>


<h3>5. 参考サイト</h3>

<ul>
<li><a href="http://groonga.org/ja/" title="Groonga - カラムストア機能付き全文検索エンジン">Groonga - カラムストア機能付き全文検索エンジン</a></li>
</ul>


<hr />

<p>慣れないうちは Groonga を単体で扱うのは若干面倒に感じます。</p>

<p>当方は、Rroonga（Groonga の機能を Ruby から利用するためのライブラリ）や Mroonga（Groonga をベースとした MySQL のストレージエンジン）を使用することも考えています。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tmux - Window, Pane, Session 自動保存プラグイン！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/06/tmux-automatic-session-preservation/"/>
    <updated>2015-08-06T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/06/tmux-automatic-session-preservation</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>ターミナルマルチプレクサ（仮想端末マネージャ） tmux の Window, Pane, Session 等を保存（自動保存）するプラグインをインストールする方法についての記録です。</p>

<p>Window, Pane, Session 等を保存するプラグインは tmux-resurrect で、それを自動化するプラグインは tmux-continuum です。<br/>
また、プラグインの管理には tpm(Tmux Plugin Manager)を使用します。<br/>
（以前は tmux-resurrect を自動化するプラグインは tmux-resurrect-auto でしたが、現在は tmux-continuum に改名されています。tmux-resurrect-auto も使用できますが）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>tmux 2.1 での作業を想定。</li>
<li>Git がインストール済みであること。</li>
<li>tpm(Tmux Plugin Manager) で tmux プラグインを管理することを想定。<br/>
（tpm を使用せず手動でインストールすることも可能）</li>
</ul>


<h3>1. tpm のインストール</h3>

<p>tmux プラグインの管理に tpm(Tmux Plugin Manager) を使用するのでインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
</span></code></pre></td></tr></table></div></figure>


<h3>2. tmux.conf の編集</h3>

<p>&ldquo;~/.tmux.conf&rdquo; に以下の記述を追記する。</p>

<figure class='code'><figcaption><span>~/.tmux.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">set</span>-option -g @tpm_plugins <span class="s1">&#39;  \</span>
</span><span class='line'><span class="s1">  tmux-plugins/tpm            \</span>
</span><span class='line'><span class="s1">  tmux-plugins/tmux-resurrect \</span>
</span><span class='line'><span class="s1">  tmux-plugins/tmux-continuum \</span>
</span><span class='line'><span class="s1">&#39;</span>
</span><span class='line'><span class="nb">set</span>-option -g @continuum-save-interval <span class="s1">&#39;60&#39;</span>
</span><span class='line'><span class="nb">set</span>-option -g @resurrect-processes <span class="s1">&#39;ssh -p 9999 hoge&#39;</span>
</span><span class='line'><span class="nb">set</span>-option -g @resurrect-strategy-vim <span class="s1">&#39;session&#39;</span>
</span><span class='line'>
</span><span class='line'>run-shell <span class="s1">&#39;~/.tmux/plugins/tpm/tpm&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>set-option</code> は <code>set</code> で代用可。</li>
<li><code>set-option -g @continuum-save-interval</code> でセッションを自動保存する間隔を指定する。<br/>
 非指定時のデフォルトは <code>15</code> 分。 <code>0</code> で自動保存の無効化。</li>
<li><code>set-option -g @resurrect-processes</code> で保存したいセッションを指定する。<br/>
（上記の例は &ldquo;hoge&rdquo; ホストへポート 9999 で SSH 接続したセッションを保存する例）</li>
<li><code>set-option -g @resurrect-strategy-vim 'session'</code> で Vim のセッションを保存する。</li>
</ul>


<h3>3. プラグインのインストール</h3>

<p>tmux 上で Prefix 押下後に <code>I</code> を押下する。（<code>i</code> ではなく <code>I</code>）</p>

<h3>4. 動作確認</h3>

<p>Prefix + CTRL-s で Window, Pane, Session 等の状態を保存、Prefix + CTLR-r でWindow, Pane, Session 等の状態を復元できるので、「保存→マシン再行動→復元」と試してみる。</p>

<p>tmux-continuum はデフォルトでは 60 分間隔で状態を保存するようなので、その辺りの動作も確認しておく。</p>

<p>ちなみに、状態は &ldquo;~/.tmux/resurrect&rdquo; ディレクトリ配下にテキストファイルで保存される。</p>

<hr />

<p>これで、マシンを起動する度に Window, Pane, Session 等を手動で復元する手間が省けます。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint - tmux 2.1 のインストール（by ソースビルド）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/03/linux-mint-tmux-installation-by-src/"/>
    <updated>2015-08-03T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/03/linux-mint-tmux-installation-by-src</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>ターミナルマルチプレクサ（仮想端末マネージャ）である tmux(Terminal MUltipleXer) の最新版を Linux Mint へインストールする方法についての記録です。</p>

<p>これまで Apt パッケージでインストールした tmux 1.8 を使用していました。<br/>
しかし、使用したいプラグインが tmux 1.9 未満ではインストールできないため、最新版の 2.1 をソースビルドでインストールすることとしました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>Git でソースを取得するため Git がインストール済みであること。</li>
<li>当記事執筆時点で最新の tmux 2.1 をインストールする。</li>
<li>Apt でインストールしていた tmux 1.8 はアンインストールしておく。</li>
</ul>


<h3>1. libevent-dev のインストール</h3>

<p>libevent-dev 2.x のパッケージが必要なので未インストールならインストールする。<br/>
（以前は Apt では 2.x はインストールできずソースをビルドしてインストールする必要があったが、今は Apt で 2.x がインストール可能）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-get install libevent-dev
</span></code></pre></td></tr></table></div></figure>


<h3>2. tmux のインストール</h3>

<p>Git でソースを <code>clone</code> して、 <code>configure</code>, <code>make</code>, <code>make install</code> する。<br/>
（但し、<code>configure</code> 実行前に <code>autogen.sh</code> の実行が必要）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ git clone https://github.com/tmux/tmux.git
</span><span class='line'>$ cd tmux
</span><span class='line'>$ autogen.sh
</span><span class='line'>$ ./configure
</span><span class='line'>$ make
</span><span class='line'>$ sudo make install
</span></code></pre></td></tr></table></div></figure>


<h3>3. tmux インストールの確認</h3>

<p>端末から <code>tmux</code> と入力・実行して tmux が起動すればよい。<br/>
また、tmux コンソールが起動後にバージョンも確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ tmux -V
</span><span class='line'>tmux 2.1
</span></code></pre></td></tr></table></div></figure>


<p>もしも、 tmux 起動時に以下のようなメッセージが出力されて起動しない場合は、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>protocol version mismatch (client 8, server 7)
</span></code></pre></td></tr></table></div></figure>


<p>古いバージョンの tmux サーバのセッションが残っているため。<br/>
その場合は、以下のように起動中の tmux プロセスを kill すればよい。（厳密に PID をチェックして <code>kill</code> してもよい）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ killall tmux
</span></code></pre></td></tr></table></div></figure>


<h3>4. その他</h3>

<p>その他、各種設定を行う。</p>

<p>当ブログ過去記事も参照。</p>

<ul>
<li><a href="http://www.mk-mode.com/octopress/tags/tmux/" title="Tag:tmux - mk-mode BLOG">Tag:tmux - mk-mode BLOG</a></li>
</ul>


<p>一つだけ注意するとするなら、マウスモードの指定方法。<br/>
古いバージョンでは &ldquo;~/.tmux.conf&rdquo; で以下のように指定していたが、</p>

<figure class='code'><figcaption><span>~/.tmux.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">set</span>-option -g mode-mouse on
</span><span class='line'><span class="nb">set</span>-option -g mouse-select-pane on
</span><span class='line'><span class="nb">set</span>-option -g mouse-select-window on
</span><span class='line'><span class="nb">set</span>-option -g mouse-resize-pane on
</span></code></pre></td></tr></table></div></figure>


<p>今のバージョンでは以下のように１行のみ指定すればよい。</p>

<figure class='code'><figcaption><span>~/.tmux.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">set</span>-option -g mouse on
</span></code></pre></td></tr></table></div></figure>


<p>但し、これだけではマウスでのスクロールができないので、以下のような記述も追加する。</p>

<figure class='code'><figcaption><span>~/.tmux.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">bind</span>-key -n WheelUpPane <span class="k">if</span>-shell -Ft<span class="o">=</span> <span class="s2">&quot;#{?pane_in_mode,1,#{alternate_on}}&quot;</span> <span class="s2">&quot;send-keys -M&quot;</span> <span class="s2">&quot;copy-mode&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>（<code>set-option</code> = <code>set</code>, <code>bind-key</code> = <code>bind</code>, <code>send-keys</code> = <code>send</code> とエイリアスされているので、置き換えてもよい）</p>

<h3>参考サイト</h3>

<ul>
<li><a href="http://tmux.github.io/" title="tmux">tmux</a></li>
</ul>


<hr />

<p>これで、使用したかった tmux プラグインが使用できるでしょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年07月 - OS・ブラウザ別アクセス状況！【自動集計】]]></title>
    <link href="http://komasaru.github.io/blog/2015/08/01/blog-access/"/>
    <updated>2015-08-01T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/08/01/blog-access</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>08月になりましたので、先月07月分の当ブログアクセス状況を公開します。</p>

<!--more-->


<h4>1. アクセスをOS別に集計</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td class="blog-access-pv">12,261</td>
    <td class="blog-access-rate">56.9035</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td class="blog-access-pv">7,658</td>
    <td class="blog-access-rate">35.5409</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td class="blog-access-pv">906</td>
    <td class="blog-access-rate">4.2048</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td class="blog-access-pv">554</td>
    <td class="blog-access-rate">2.5711</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">60</td>
    <td class="blog-access-rate">0.2785</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td class="blog-access-pv">51</td>
    <td class="blog-access-rate">0.2367</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td class="blog-access-pv">23</td>
    <td class="blog-access-rate">0.1067</td>
  </tr>
  <tr>
    <td>Android</td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0511</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0325</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0232</td>
  </tr>
  <tr>
    <td>Debian GNU/Linux</td>
    <td class="blog-access-pv">3</td>
    <td class="blog-access-rate">0.0139</td>
  </tr>
  <tr>
    <td>NetBSD</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0093</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">21,547</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>2. アクセスをOS・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td>X</td>
    <td class="blog-access-pv">12,259</td>
    <td class="blog-access-rate">56.8942</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>NT</td>
    <td class="blog-access-pv">6,149</td>
    <td class="blog-access-rate">28.5376</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">898</td>
    <td class="blog-access-rate">4.1676</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7</td>
    <td class="blog-access-pv">708</td>
    <td class="blog-access-rate">3.2858</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">547</td>
    <td class="blog-access-rate">2.5386</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7 64 bit</td>
    <td class="blog-access-pv">408</td>
    <td class="blog-access-rate">1.8935</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>XP</td>
    <td class="blog-access-pv">266</td>
    <td class="blog-access-rate">1.2345</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista</td>
    <td class="blog-access-pv">76</td>
    <td class="blog-access-rate">0.3527</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td>unknown</td>
    <td class="blog-access-pv">60</td>
    <td class="blog-access-rate">0.2785</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">50</td>
    <td class="blog-access-rate">0.2321</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8 64 bit</td>
    <td class="blog-access-pv">23</td>
    <td class="blog-access-rate">0.1067</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>unknown</td>
    <td class="blog-access-pv">23</td>
    <td class="blog-access-rate">0.1067</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Server 2003</td>
    <td class="blog-access-pv">14</td>
    <td class="blog-access-rate">0.0650</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>64 bit</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td>unknown</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista 64 bit</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>2000</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0232</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td>3.6.9-2.el6 64 bit</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0232</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>10.04</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0186</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>4.0.1</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0186</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">21,547</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>3. アクセスをブラウザ別に集計</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td class="blog-access-pv">11,842</td>
    <td class="blog-access-rate">54.9589</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td class="blog-access-pv">5,146</td>
    <td class="blog-access-rate">23.8827</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td class="blog-access-pv">2,544</td>
    <td class="blog-access-rate">11.8067</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td class="blog-access-pv">1,654</td>
    <td class="blog-access-rate">7.6762</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td class="blog-access-pv">203</td>
    <td class="blog-access-rate">0.9421</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td class="blog-access-pv">65</td>
    <td class="blog-access-rate">0.3017</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td class="blog-access-pv">60</td>
    <td class="blog-access-rate">0.2785</td>
  </tr>
  <tr>
    <td>Epiphany</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0325</td>
  </tr>
  <tr>
    <td>Konqueror</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0325</td>
  </tr>
  <tr>
    <td>Unknown</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>Chrome</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0278</td>
  </tr>
  <tr>
    <td>Mozilla SeaMonkey</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0232</td>
  </tr>
  <tr>
    <td>Sleipnir</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0093</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">21,547</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>4. アクセスをブラウザ・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.36</td>
    <td class="blog-access-pv">9,053</td>
    <td class="blog-access-rate">42.0151</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>38.0</td>
    <td class="blog-access-pv">2,725</td>
    <td class="blog-access-rate">12.6468</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td>11.0</td>
    <td class="blog-access-pv">2,543</td>
    <td class="blog-access-rate">11.8021</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>39.0</td>
    <td class="blog-access-pv">1,590</td>
    <td class="blog-access-rate">7.3792</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>9537.53</td>
    <td class="blog-access-pv">957</td>
    <td class="blog-access-rate">4.4415</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.1.4</td>
    <td class="blog-access-pv">796</td>
    <td class="blog-access-rate">3.6942</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>8.0</td>
    <td class="blog-access-pv">580</td>
    <td class="blog-access-rate">2.6918</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>9.0</td>
    <td class="blog-access-pv">391</td>
    <td class="blog-access-rate">1.8146</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>10.0</td>
    <td class="blog-access-pv">370</td>
    <td class="blog-access-rate">1.7172</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>7.0</td>
    <td class="blog-access-pv">312</td>
    <td class="blog-access-rate">1.4480</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.7.12</td>
    <td class="blog-access-pv">307</td>
    <td class="blog-access-rate">1.4248</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>31.0</td>
    <td class="blog-access-pv">278</td>
    <td class="blog-access-rate">1.2902</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.6.3</td>
    <td class="blog-access-pv">209</td>
    <td class="blog-access-rate">0.9700</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>534.30</td>
    <td class="blog-access-pv">161</td>
    <td class="blog-access-rate">0.7472</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>31.8.0</td>
    <td class="blog-access-pv">97</td>
    <td class="blog-access-rate">0.4502</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td>9.80</td>
    <td class="blog-access-pv">62</td>
    <td class="blog-access-rate">0.2877</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td>5.0</td>
    <td class="blog-access-pv">60</td>
    <td class="blog-access-rate">0.2785</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>37.0</td>
    <td class="blog-access-pv">60</td>
    <td class="blog-access-rate">0.2785</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>31.7.0</td>
    <td class="blog-access-pv">57</td>
    <td class="blog-access-rate">0.2645</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>24.0</td>
    <td class="blog-access-pv">52</td>
    <td class="blog-access-rate">0.2413</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">21,547</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint - Gnuplot でグラフ描画！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/30/linux-mint-installation-gnuplot/"/>
    <updated>2015-07-30T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/30/linux-mint-installation-gnuplot</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux Mint で、2次元や3次元のグラフを描画するためのコマンドラインツール Gnuplot を使用してみました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.1(64bit) での作業を想定。</li>
<li>Apt パッケージを使用して 4.6.4 をインストールする。</li>
</ul>


<h3>1. Gnuplot のインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-get install gnuplot-x11
</span></code></pre></td></tr></table></div></figure>


<p>注意するのは <code>gnuplot</code> でなく <code>gnuplot-x11</code> をインストールするということ。<br/>
（こうしないと、 Gnuplot を起動してコマンドを入力してもグラフウィンドウが開かない）</p>

<p>ちなみに、最新バージョンの Gnuplot をインストールしたければ、以下のようにしてインストールすればよい。（但し、環境によってはスムーズ（or 綺麗）にインストールできないかもしれない）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ wget http://sourceforge.net/projects/gnuplot/files/gnuplot/5.0.1/gnuplot-5.0.1.tar.gz
</span><span class='line'>$ tar zxvf gnuplot-5.0.1.tar.gz
</span><span class='line'>$ cd gnuplot-5.0.1
</span><span class='line'>$ ./configure
</span><span class='line'>$ make
</span><span class='line'>$ sudo make install
</span></code></pre></td></tr></table></div></figure>


<h3>2. インストールの確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ gnuplot --version
</span><span class='line'>gnuplot 4.6 patchlevel 4
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、以下のように Gnuplot を起動してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ gnuplot
</span><span class='line'>
</span><span class='line'>        G N U P L O T
</span><span class='line'>        Version 4.6 patchlevel 4    last modified 2013-10-02
</span><span class='line'>        Build System: Linux x86_64
</span><span class='line'>
</span><span class='line'>        Copyright (C) 1986-1993, 1998, 2004, 2007-2013
</span><span class='line'>        Thomas Williams, Colin Kelley and many others
</span><span class='line'>
</span><span class='line'>        gnuplot home:     http://www.gnuplot.info
</span><span class='line'>        faq, bugs, etc:   type &quot;help FAQ&quot;
</span><span class='line'>        immediate help:   type &quot;help&quot;  (plot window: hit &#39;h&#39;)
</span><span class='line'>
</span><span class='line'>Terminal type set to &#39;wxt&#39;
</span><span class='line'>gnuplot&gt;
</span></code></pre></td></tr></table></div></figure>


<p>使用するターミナルが <code>wxt</code> or <code>x11</code> であることを確認する。<code>unknown</code> だと、コマンドを入力してもグラフウィンドウが立ち上がらない。<br/>
<code>unknown</code> なら <code>set terminal wxt</code> or <code>set terminal x11</code> で設定する。</p>

<h3>3. 動作確認</h3>

<h3>3-1. 動作確認・その１</h3>

<p>Gnuplot を起動後、テストコマンドを入力してグラフを描画してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>gnuplot&gt; test
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://komasaru.github.io/images/2015/07/30/GNUPLOT_1.png" title="GNUPLOT_1" alt="GNUPLOT_1" /></p>

<h3>3-2. 動作確認・その２</h3>

<p>Gnuplot を起動後、コマンドを順次入力してグラフを描画してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>gnuplot&gt; plot sin(x)
</span><span class='line'>gnuplot&gt; replot cos(x)
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://komasaru.github.io/images/2015/07/30/GNUPLOT_2.png" title="GNUPLOT_2" alt="GNUPLOT_2" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>gnuplot&gt; splot x**2 + y**2
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://komasaru.github.io/images/2015/07/30/GNUPLOT_3.png" title="GNUPLOT_3" alt="GNUPLOT_3" /></p>

<h4>3-3. 動作確認・その３</h4>

<p>予め作成しておいたスクリプトを呼び出してグラフを描画してみる。</p>

<p>まず、例として以下のようなスクリプトを作成する。</p>

<figure class='code'><figcaption><span>gnuplot_sample.plt</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>set dummy u,v
</span><span class='line'>set key bmargin center horizontal Right noreverse enhanced autotitles nobox
</span><span class='line'>set parametric
</span><span class='line'>set view 50, 30, 1, 1
</span><span class='line'>set isosamples 50, 20
</span><span class='line'>set hidden3d back offset 1 trianglepattern 3 undefined 1 altdiagonal bentover
</span><span class='line'>set ticslevel 0
</span><span class='line'>set title &quot;Interlocking Tori&quot;
</span><span class='line'>set urange [ -3.14159 : 3.14159 ] noreverse nowriteback
</span><span class='line'>set vrange [ -3.14159 : 3.14159 ] noreverse nowriteback
</span><span class='line'>splot cos(u)+.5*cos(u)*cos(v),sin(u)+.5*sin(u)*cos(v),.5*sin(v) with lines, \
</span><span class='line'>    1+cos(u)+.5*cos(u)*cos(v),.5*sin(v),sin(u)+.5*sin(u)*cos(v) with lines
</span></code></pre></td></tr></table></div></figure>


<p>そして、Gnuplot を起動後に呼び出してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>gnuplot&gt; load &quot;gnuplot_sample.plt&quot;
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、以下のように呼び出してみる。（<code>call</code> は <code>load</code> と異なり引数も渡せる）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>gnuplot&gt; call &quot;gnuplot_sample.plt&quot;
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://komasaru.github.io/images/2015/07/30/GNUPLOT_4.png" title="GNUPLOT_4" alt="GNUPLOT_4" /></p>

<p>ちなみに、３次元グラフの場合はマウスで視点を移動できる。</p>

<h4>3-4. 動作確認・その４</h4>

<p>前項の Gnuplot スクリプトをそのままシェルスクリプト(Bash)に記述し、それを実行してグラフを描画してみる。</p>

<figure class='code'><figcaption><span>gnuplot_sample.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>gnuplot -p <span class="s">&lt;&lt; EOS</span>
</span><span class='line'><span class="s">set terminal pngcairo enhanced font &quot;arial,10&quot; fontscale 1.0 size 500, 350</span>
</span><span class='line'><span class="s">set output &#39;gnuplot_sample.png&#39;</span>
</span><span class='line'><span class="s">set dummy u,v</span>
</span><span class='line'><span class="s">set key bmargin center horizontal Right noreverse enhanced autotitles nobox</span>
</span><span class='line'><span class="s">set parametric</span>
</span><span class='line'><span class="s">set view 50, 30, 1, 1</span>
</span><span class='line'><span class="s">set isosamples 50, 20</span>
</span><span class='line'><span class="s">set hidden3d back offset 1 trianglepattern 3 undefined 1 altdiagonal bentover</span>
</span><span class='line'><span class="s">set ticslevel 0</span>
</span><span class='line'><span class="s">set title &quot;Interlocking Tori&quot;</span>
</span><span class='line'><span class="s">set urange [ -3.14159 : 3.14159 ] noreverse nowriteback</span>
</span><span class='line'><span class="s">set vrange [ -3.14159 : 3.14159 ] noreverse nowriteback</span>
</span><span class='line'><span class="s">splot cos(u)+.5*cos(u)*cos(v),sin(u)+.5*sin(u)*cos(v),.5*sin(v) with lines, \</span>
</span><span class='line'><span class="s">    1+cos(u)+.5*cos(u)*cos(v),.5*sin(v),sin(u)+.5*sin(u)*cos(v) with lines</span>
</span><span class='line'><span class="s">EOS</span>
</span></code></pre></td></tr></table></div></figure>


<p>この &ldquo;gnuplot_sample.sh&rdquo; は以下のようにしてもよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/gnuplot -p</span>
</span><span class='line'>
</span><span class='line'><span class="nb">set </span>terminal pngcairo enhanced font <span class="s2">&quot;arial,10&quot;</span> fontscale 1.0 size 500, 350
</span><span class='line'><span class="nb">set </span>output <span class="s1">&#39;gnuplot_sample.png&#39;</span>
</span><span class='line'><span class="nb">set </span>dummy u,v
</span><span class='line'><span class="nb">set </span>key bmargin center horizontal Right noreverse enhanced autotitles nobox
</span><span class='line'><span class="nb">set </span>parametric
</span><span class='line'><span class="nb">set </span>view 50, 30, 1, 1
</span><span class='line'><span class="nb">set </span>isosamples 50, 20
</span><span class='line'><span class="nb">set </span>hidden3d back offset <span class="m">1</span> trianglepattern <span class="m">3</span> undefined <span class="m">1</span> altdiagonal bentover
</span><span class='line'><span class="nb">set </span>ticslevel 0
</span><span class='line'><span class="nb">set </span>title <span class="s2">&quot;Interlocking Tori&quot;</span>
</span><span class='line'><span class="nb">set </span>urange <span class="o">[</span> -3.14159 : 3.14159 <span class="o">]</span> noreverse nowriteback
</span><span class='line'><span class="nb">set </span>vrange <span class="o">[</span> -3.14159 : 3.14159 <span class="o">]</span> noreverse nowriteback
</span><span class='line'>splot cos<span class="o">(</span>u<span class="o">)</span>+.5*cos<span class="o">(</span>u<span class="o">)</span>*cos<span class="o">(</span>v<span class="o">)</span>,sin<span class="o">(</span>u<span class="o">)</span>+.5*sin<span class="o">(</span>u<span class="o">)</span>*cos<span class="o">(</span>v<span class="o">)</span>,.5*sin<span class="o">(</span>v<span class="o">)</span> with lines, <span class="se">\</span>
</span><span class='line'>    1+cos<span class="o">(</span>u<span class="o">)</span>+.5*cos<span class="o">(</span>u<span class="o">)</span>*cos<span class="o">(</span>v<span class="o">)</span>,.5*sin<span class="o">(</span>v<span class="o">)</span>,sin<span class="o">(</span>u<span class="o">)</span>+.5*sin<span class="o">(</span>u<span class="o">)</span>*cos<span class="o">(</span>v<span class="o">)</span> with lines
</span></code></pre></td></tr></table></div></figure>


<p>実行権限を付与して、実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ chmod +x gnuplot_sample.sh
</span><span class='line'>$ ./gnuplot_sample.sh
</span></code></pre></td></tr></table></div></figure>


<p>以下のような PNG 画像が作成される。</p>

<p><img src="http://komasaru.github.io/images/2015/07/30/GNUPLOT_SAMPLE.png" title="GNUPLOT_SAMPLE" alt="GNUPLOT_SAMPLE" /></p>

<h3>参考サイト</h3>

<ul>
<li><a href="http://www.gnuplot.info/" title="gnuplot homepage">gnuplot homepage</a></li>
</ul>


<hr />

<p>高機能な上に手軽に使用できるのが良いところでしょうか。</p>

<p>今回紹介した使用例はごく一部の機能に限定していましたが、使いこなすうちになれるでしょう。</p>

<p>また、統計解析用プログラミン言語 R でグラフを描画する場合と使い勝手等を比較してみたいとも思っています。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AMaViS - エラー(on Debian 8 Jessie)！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/27/debian-8-amavis-error/"/>
    <updated>2015-07-27T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/27/debian-8-amavis-error</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Debian GNU/Linux 8 Jessie で Postfix と AMaViS を連携してメールのウイルスチェックを行うようにしているのですが、メールログにエラーメッセージが出力されていたので、調査して対策を施しました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8.1 Jessie での作業を想定。</li>
<li>アンチウィルスソフト ClamAV を「<a href="http://komasaru.github.io/2015/05/29/debian-8-anti-virus-installation/" title="Debian 8 (Jessie) - アンチウィルスソフト導入！">Debian 8 (Jessie) - アンチウィルスソフト導入！</a>」の方法でインストールしていることを想定。</li>
<li>SMTP サーバ Postfix を「<a href="http://komasaru.github.io/2015/06/12/debian-8-postfix-installation/" title="Debian 8 (Jessie) - SMTP サーバ Postfix 構築！">Debian 8 (Jessie) - SMTP サーバ Postfix 構築！</a>」の方法でインストールしていることを想定。</li>
<li>Postfix と ClamAV の連携を「<a href="http://komasaru.github.io/2015/06/15/debian-8-postfix-cooperation-with-clamav/" title="Debian 8 (Jessie) - Postfix と ClamAV の連携！">Debian 8 (Jessie) - Postfix と ClamAV の連携！</a>」の方法で行なっていることを想定。</li>
</ul>


<h3>1. 現象</h3>

<p>メールログに以下のようなエラーメッセージが出力される。</p>

<figure class='code'><figcaption><span>/var/log/mail.log</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!)run_av (ClamAV-clamd) FAILED - unexpected , output=&quot;/var/lib/amavis/tmp/amavis-20150601T105343-28256-JUnFx0XC/parts: lstat() failed: Permission denied. ERROR\n&quot;
</span><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!)ClamAV-clamd av-scanner FAILED: CODE(0x29c09b0) unexpected , output=&quot;/var/lib/amavis/tmp/amavis-20150601T105343-28256-JUnFx0XC/parts: lstat() failed: Permission denied. ERROR\n&quot; at (eval 96) line 905.
</span><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!)WARN: all primary virus scanners failed, considering backups
</span><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!)run_av (ClamAV-clamscan) FAILED - unexpected exit 2, output=&quot;WARNING: Ignoring unsupported option --recursive (-r)\nWARNING: Ignoring unsupported option --tempdir\n/var/lib/amavis/tmp/amavis-20150601T105343-28256-JUnFx0XC/parts: lstat() failed: Permission denied. ERROR&quot;
</span><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!)ClamAV-clamscan av-scanner FAILED: /usr/bin/clamdscan unexpected exit 2, output=&quot;WARNING: Ignoring unsupported option --recursive (-r)\nWARNING: Ignoring unsupported option --tempdir\n/var/lib/amavis/tmp/amavis-20150601T105343-28256-JUnFx0XC/parts: lstat() failed: Permission denied. ERROR&quot; at (eval 96) line 905.
</span><span class='line'>Jun  1 10:57:36 noah amavis[28256]: (28256-04-7) (!!)AV: ALL VIRUS SCANNERS FAILED
</span></code></pre></td></tr></table></div></figure>


<h3>2. 原因</h3>

<p>エラーメッセージに出ているとおり、権限がおかしい。</p>

<h3>3. 対策</h3>

<p>3-1 の方法はよくある方法だが、今回注目したかったのは 3-2 の方法。</p>

<h4>3-1. ユーザ ID, グループ ID の確認</h4>

<p><code>id</code> コマンドで clamav, amavis のユーザ ID, グループ ID を確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># id clamav
</span><span class='line'>uid=108(clamav) gid=113(clamav) groups=113(clamav),123(amavis)
</span><span class='line'>
</span><span class='line'># id amavis
</span><span class='line'>uid=115(amavis) gid=123(amavis) groups=123(amavis)
</span></code></pre></td></tr></table></div></figure>


<p>clamav ユーザが amavis グループに属していれば、それでよい。</p>

<p>clamav ユーザが amavis グループに属していなければ、以下のようにして amavis グループに追加する。（<code>-a</code> オプションは重要。このオプションを付け忘れると clamav ユーザが既に属していたグループから外れてしまう）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># usermod -a -G amavis clamav
</span></code></pre></td></tr></table></div></figure>


<p>clamav ユーザを amavis グループに追加した場合は、 clamav-daemon, amavis, postfix を再起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart clamav-daemon
</span><span class='line'># systemctl restart amavis
</span><span class='line'># systemctl restart postfix
</span></code></pre></td></tr></table></div></figure>


<h4>3-2. clamd.conf の編集</h4>

<p>前項 3-1 の方法でもエラーが解消しない場合は、 ClamAV Daemon 設定ファイル &ldquo;clamd.conf&rdquo; の <code>AllowSupplementaryGroups</code> を確認してみる。</p>

<p><code>false</code> になっていた場合は <code>true</code>（グループ権限も移譲）に変更する。</p>

<figure class='code'><figcaption><span>/etc/clamav/clamd.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>AllowSupplementaryGroups <span class="nb">true</span>  <span class="c"># &lt;= false を true に変更</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、 clamav-daemon, amavis, postfix を再起動する。（起動順に注意すべき旨を紹介しているサイトもあるが、起動順が影響しているか否かは当方未確認）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart clamav-daemon
</span><span class='line'># systemctl restart amavis
</span><span class='line'># systemctl restart postfix
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - Array クラス拡張で配列要素にランク付け（同順位考慮）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/24/ruby-ranking-simultaneous-arrival-by-array-class/"/>
    <updated>2015-07-24T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/24/ruby-ranking-simultaneous-arrival-by-array-class</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Ruby で配列内の数値をランク付け（同順位を考慮）する方法を、 Array クラスを拡張して実装してみました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Ruby 2.2.2-p95 での作業を想定。</li>
<li>配列内の数値が大きい順に順位を付ける。</li>
<li>同順位を考慮する。（例：要素が 3, 1, 3, 2 で、大きい順に順位付ける場合の順位を 1, 4, 1, 3 とする）</li>
</ul>


<h3>1. Ruby スクリプトの作成</h3>

<p>実質、配列の順位付を行なっているのは１行のみで、数値が自分より大きい要素の個数 +1 を順位とするアルゴリズム。</p>

<figure class='code'><figcaption><span>array_rank.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="c1">#**********************************************************</span>
</span><span class='line'><span class="c1"># Ruby script to rank array items, considering same ranks.</span>
</span><span class='line'><span class="c1">#**********************************************************</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Array</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rank</span>
</span><span class='line'>    <span class="c1"># 以下の場合は例外スロー</span>
</span><span class='line'>    <span class="c1"># - 自身配列が空</span>
</span><span class='line'>    <span class="c1"># - 自身配列に数値以外の値を含む</span>
</span><span class='line'>    <span class="k">raise</span> <span class="s2">&quot;Self array is nil!&quot;</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span>
</span><span class='line'>      <span class="k">raise</span> <span class="s2">&quot;Items except numerical values exist!&quot;</span> <span class="k">unless</span> <span class="n">v</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="sr">/[\d\.]+/</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ランク付け</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="nb">self</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">v</span> <span class="p">}</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="o">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="o">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="o">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="o">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="s2">&quot;abc&quot;</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;a = </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--&gt; </span><span class="si">#{</span><span class="n">a</span><span class="o">.</span><span class="n">rank</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;b = </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--&gt; </span><span class="si">#{</span><span class="n">b</span><span class="o">.</span><span class="n">rank</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;c = </span><span class="si">#{</span><span class="n">c</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--&gt; </span><span class="si">#{</span><span class="n">c</span><span class="o">.</span><span class="n">rank</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;d = </span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--&gt; </span><span class="si">#{</span><span class="n">d</span><span class="o">.</span><span class="n">rank</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/0a58f9027edbc148399e" title="Gist - Ruby script to rank array items, considering same ranks.">Gist - Ruby script to rank array items, considering same ranks.</a></li>
</ul>


<h3>2. Ruby スクリプトの実行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./array_rank.rb
</span><span class='line'>a = [9, 3, 2, 7, 1, 6, 8, 5, 10, 4]
</span><span class='line'>--&gt; [2, 8, 9, 4, 10, 5, 3, 6, 1, 7]
</span><span class='line'>
</span><span class='line'>b = [6, 8, 5, 8, 4, 9, 3, 3, 7, 1]
</span><span class='line'>--&gt; [5, 2, 6, 2, 7, 1, 8, 8, 4, 10]
</span><span class='line'>
</span><span class='line'>c = [6, 8.5, 5, 3.2, 7, 1, 8.1, 3.2, 9, 3]
</span><span class='line'>--&gt; [5, 2, 6, 7, 4, 10, 3, 7, 1, 9]
</span><span class='line'>
</span><span class='line'>d = [9, 3, 2, 7, &quot;abc&quot;, 6, 8, 5, 10, 4]
</span><span class='line'>./array_rank.rb:14:in `block in rank&#39;: Exist items except numerical values! (RuntimeError)
</span><span class='line'>        from ./array_rank.rb:13:in `each&#39;
</span><span class='line'>        from ./array_rank.rb:13:in `rank&#39;
</span><span class='line'>        from ./array_rank.rb:33:in `&lt;main&gt;&#39;
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>当方の場合、意外と利用頻度が高いので、単純な処理とは言えど結構重宝しています。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux & Ruby - メール受信時の処理！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/21/linux-ruby-process-when-mail-received/"/>
    <updated>2015-07-21T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/21/linux-ruby-process-when-mail-received</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux 上に構築したメールサーバで、メール受信をトリガにして処理を実行する手順等についての記録です。<br/>
処理は Ruby で行うことを想定しています。（多くのサイト等では Perl や PHP での処理がよく紹介されてます）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8.1 での作業を想定。</li>
<li>Ruby 2.2.2-95 での作業を想定。</li>
<li>SMTP サーバ Postfix 構築済み。

<ul>
<li>参考「<a href="http://komasaru.github.io/2015/06/12/debian-8-postfix-installation/" title="Debian 8 (Jessie) - SMTP サーバ Postfix 構築！">Debian 8 (Jessie) - SMTP サーバ Postfix 構築！</a>」</li>
</ul>
</li>
<li>POP/IMAP サーバ Dovecot 構築済み。

<ul>
<li>参考「<a href="http://komasaru.github.io/2015/06/13/debian-8-dovecot-installation/" title="Debian 8 (Jessie) - POP/IMAP サーバ Dovecot 構築！">Debian 8 (Jessie) - POP/IMAP サーバ Dovecot 構築！</a>」</li>
</ul>
</li>
<li>Postfix の aliases （メール転送機能）と連携をとる方法を想定。</li>
<li>処理対象のユーザ・グループは &ldquo;test&rdquo;, &ldquo;test&rdquo; を想定。</li>
</ul>


<h3>1. Ruby スクリプトの作成</h3>

<p>以下のような Ruby スクリプトを作成する。<br/>
（紹介用に受信したメールを解析してテキストファイルに保存するだけのプログラム）</p>

<figure class='code'><figcaption><span>get_mail.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="c1">#-------------------------------------------------</span>
</span><span class='line'><span class="c1"># Ruby script to get a mail via alias of postfix.</span>
</span><span class='line'><span class="c1">#-------------------------------------------------</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mail&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">GetMail</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="n">dt</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y%m%d_%H%M%S%L&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@out_file</span> <span class="o">=</span> <span class="s2">&quot;/path/to/</span><span class="si">#{</span><span class="n">dt</span><span class="si">}</span><span class="s2">.txt&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="vi">@out_file</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>      <span class="n">mail</span> <span class="o">=</span> <span class="no">Mail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vg">$stdin</span><span class="o">.</span><span class="n">read</span><span class="p">)</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;From:    </span><span class="si">#{</span><span class="n">mail</span><span class="o">.</span><span class="n">from</span><span class="o">.</span><span class="n">first</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;To:      </span><span class="si">#{</span><span class="n">mail</span><span class="o">.</span><span class="n">to</span><span class="o">.</span><span class="n">first</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Date:    </span><span class="si">#{</span><span class="n">mail</span><span class="o">.</span><span class="n">date</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Subject: </span><span class="si">#{</span><span class="n">mail</span><span class="o">.</span><span class="n">subject</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Body:</span><span class="se">\n</span><span class="si">#{</span><span class="n">mail</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">decoded</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s2">&quot;UTF-8&quot;</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">charset</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="vg">$stderr</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;[</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">] </span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">e</span><span class="o">.</span><span class="n">backtrace</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">trace</span><span class="o">|</span> <span class="vg">$stderr</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="se">\t</span><span class="si">#{</span><span class="n">trace</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="nb">exit</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">exit</span> <span class="k">unless</span> <span class="vg">$0</span> <span class="o">==</span> <span class="bp">__FILE__</span>
</span><span class='line'><span class="no">GetMail</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">execute</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/0cbfe02794efa4c1a09e" title="Gist - Ruby script to get a mail via alias of postfix.">Gist - Ruby script to get a mail via alias of postfix.</a></li>
</ul>


<h3>2. Ruby スクリプトの配置</h3>

<p>作成した Ruby スクリプトをサーバ上の適当な位置に配置する。<br/>
（今回、当方は処理を行いたいユーザの home ディレクトリ &ldquo;/home/test&rdquo; 直下に配置した（所有者 &ldquo;test&rdquo; で））</p>

<p>配置後、実行権限を付与する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># chmod +x get_mail.rb
</span></code></pre></td></tr></table></div></figure>


<h3>3. メール保存用ディレクトリの作成</h3>

<p>今回の処理で使用するディレクトリをサーバ上の適当な位置に作成する。<br/>
（今回、当方は処理を行いたいユーザの home ディレクトリ &ldquo;/home/test&rdquo; 配下に &ldquo;get_mail&rdquo; ディレクトリを作成した（所有者 &ldquo;test&rdquo; で））</p>

<h3>4. Postfix の aliases 設定</h3>

<figure class='code'><figcaption><span>/etc/aliases</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">test</span>:  :include:/home/test/alias_inc
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、処理を行う他に転送も行いたい場合は、以下のようにカンマで区切ればよい。</p>

<figure class='code'><figcaption><span>/etc/aliases</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">test</span>:  hoge, :include:/home/test/alias_inc
</span></code></pre></td></tr></table></div></figure>


<h3>5. include ファイル（実行コマンド）の作成</h3>

<figure class='code'><figcaption><span>/home/test/alias_inc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&quot;| /home/test/get_mail.rb&quot;
</span></code></pre></td></tr></table></div></figure>


<p>そして、このファイルの所有者が &ldquo;test&rdquo; でなければ &ldquo;test&rdquo; にする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># chown test. /home/test/alias_inc
</span></code></pre></td></tr></table></div></figure>


<h3>6. Postfix 設定ファイル main.cf の編集</h3>

<p>&ldquo;/etc/aliases&rdquo; ファイル内で <code>:include:</code> を使用する際は、Postfix の設定ファイル &ldquo;main.cf&rdquo; に以下のように追記しなければならない。<br/>
（Postfix は、デフォルトでは <code>:include:</code> での &ldquo;|command&rdquo; への配送を認めていないため）</p>

<figure class='code'><figcaption><span>/etc/postfix/main.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">allow_mail_to_commands</span> <span class="o">=</span> <span class="nb">alias</span>,forward,include
</span></code></pre></td></tr></table></div></figure>


<h3>7. Postfix 設定のリロード</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl reload postfix
</span></code></pre></td></tr></table></div></figure>


<h3>8. aliases の設定反映</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># newaliases
</span></code></pre></td></tr></table></div></figure>


<h3>9. 動作確認</h3>

<p>実際に test ユーザ宛にメールを送信してみて、指定のディレクトリ配下に保存されること、内容が適切であることを確認する。</p>

<h3>10. その他</h3>

<p>上記の 4, 5, 6 でエイリアスを別ファイルに分けてインクルードしている。<br/>
これは、"/etc/aliases" 内で直接コマンドを指定すると作成されるファイルの所有者・グループが &ldquo;nobody:nogroup&rdquo; になってしまうのを防ぐためである。</p>

<h3>11. 参考サイト</h3>

<ul>
<li><a href="http://www.postfix-jp.info/trans-2.3/jhtml/aliases.5.html" title="Postfix manual - aliases(5)">Postfix manual - aliases(5)</a></li>
</ul>


<hr />

<p>当方は、Linux サーバに Twitter ツイート専用のユーザを作成し、そのユーザ宛に配送されたメール本文をツイートするように応用しています。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB - レプリケーション設定（GTID 使用）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/18/mariadb-replication-by-gtid/"/>
    <updated>2015-07-18T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/18/mariadb-replication-by-gtid</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>従来からあるレプリケーションとは異なる GTID(Global Transaction ID) を使用したレプリケーション設定の記録です。</p>

<p>MySQL とは実装自体が異なるため、MySQL と若干設定の異なる部分もあります。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Master 側、Slave 側ともに MariaDB 10.0.20 を想定。</li>
<li>Master 側は既存のサーバ、Slave 側は今回新規に構築したばかりのサーバを想定。<br/>
（Slave 側も既存のサーバの場合は、 &ldquo;ibdata1&rdquo;, &ldquo;ib_logfile0&rdquo;, &ldquo;ib_logfile1&rdquo; ファイルを削除(DISCARD)する作業が必要かも）</li>
<li>レプリケーション用のユーザは &ldquo;repl&rdquo; を想定。</li>
<li>ストレージエンジンは InnoDB を想定。</li>
<li>GTID(Global Transaction ID) がどんなものであるかは、ここでは説明しない。</li>
<li>以下の説明で出現する設定ファイルは、環境によりパスやファイル名が異なるかもしれないので、適宜置き換えること。</li>
</ul>


<h3>1. [Master] 設定ファイルの編集</h3>

<p>MariaDB 設定ファイル &ldquo;/etc/mysql/conf.d/mariadb.cnf&rdquo; を編集する。</p>

<figure class='code'><figcaption><span>/etc/mysql/conf.d/mariadb.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server-id <span class="o">=</span> <span class="m">1</span>           <span class="c"># &lt;= ネットワーク内で重複しないよに設定</span>
</span><span class='line'>log-bin <span class="o">=</span> mariadb-bin   <span class="c"># &lt;= バイナリログを設定（名前は任意）</span>
</span><span class='line'><span class="nb">bind</span>-address <span class="o">=</span> 0.0.0.0  <span class="c"># &lt;= 変更（Slave 側からもアクセスできるようにする）</span>
</span><span class='line'>                        <span class="c">#    もしくは、`::`</span>
</span><span class='line'>                        <span class="c">#    もしくは、コメントアウト</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. [Master] MariaDB サーバの再起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart mysql
</span></code></pre></td></tr></table></div></figure>


<h3>3. [Master] レプリケーション用ユーザの作成</h3>

<p>MariaDB サーバに root でログインし、レプリケーション用（Slave 側から Master 側にログインするための）ユーザを作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; GRANT REPLICATION SLAVE ON *.* TO repl@&#39;Slave 側のホスト名 or IP アドレス&#39; IDENTIFIED BY &#39;repl のパスワード&#39;;
</span><span class='line'>&gt; FLUSH PRIVILEGES;
</span></code></pre></td></tr></table></div></figure>


<h3>4. [Master] DB ダンプファイルの出力</h3>

<p>全データベースのダンプファイルを出力する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysqldump -u root -p --all-databases --single-transaction --master-data=2 &gt; master.sql
</span></code></pre></td></tr></table></div></figure>


<p><code>--master-data=2</code> は、ダンプファイルに <code>-- CHANGE MASTER TO MASTER_LOG_FILE=...</code> を出力するオプション。</p>

<h3>5. [Master] GTID の取得</h3>

<p>前項で取得したダンプファイルの <code>-- CHANGE MASTER TO MASTER_LOG_FILE=...</code> を確認し、バイナリログファイル名とポジションを控える。（ダンプファイルのサイズが大きい場合は、テキストエディタで開くのに注意！）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># head -n 30 master.sql | grep MASTER_LOG_FILE
</span><span class='line'>-- CHANGE MASTER TO MASTER_LOG_FILE=&#39;mariadb-bin.000009&#39;, MASTER_LOG_POS=330;
</span></code></pre></td></tr></table></div></figure>


<p>そして、MariaDB サーバに root でログイン後に以下を実行して GTID ポジションを取得し、控えておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>+--------------------------------------------+
</span><span class='line'>| BINLOG_GTID_POS(&#39;mariadb-bin.000009&#39;, 330) |
</span><span class='line'>+--------------------------------------------+
</span><span class='line'>| 0-2-10521                                  |
</span><span class='line'>+--------------------------------------------+
</span><span class='line'>1 row in set (0.03 sec)
</span></code></pre></td></tr></table></div></figure>


<h3>6. [Slave] DB ダンプファイルのリストア</h3>

<p>Master 側で出力した DB ダンプファイルを何かしらの方法で Slave 側へ移動し、リストアする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u root -p &lt; master.sql
</span></code></pre></td></tr></table></div></figure>


<h3>7. [Slave] 設定ファイルの編集</h3>

<p>MariaDB 設定ファイル &ldquo;/etc/mysql/conf.d/mariadb.cnf&rdquo; を編集する。</p>

<figure class='code'><figcaption><span>/etc/mysql/conf.d/mariadb.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>server-id = 2          # &lt;= ネットワーク内で重複しないように設定
</span><span class='line'>log-bin = mariadb-bin  # &lt;= バイナリログを設定（名前は任意）
</span></code></pre></td></tr></table></div></figure>


<h3>8. [Slave] MariaDB サーバの再起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart mysql
</span></code></pre></td></tr></table></div></figure>


<h3>9. [Slave] レプリケーションの設定</h3>

<p>MariaDB サーバに root でログインし、以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">&gt;</span> <span class="k">SET</span> <span class="k">GLOBAL</span> <span class="n">gtid_slave_pos</span> <span class="o">=</span> <span class="s1">&#39;0-2-10521&#39;</span><span class="p">;</span>  <span class="o">#</span> <span class="o">&lt;=</span> <span class="mi">3</span> <span class="err">で取得した</span> <span class="n">GTID</span> <span class="err">を指定</span>
</span><span class='line'><span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">32</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="n">CHANGE</span> <span class="n">MASTER</span> <span class="k">TO</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">master_host</span> <span class="o">=</span> <span class="s1">&#39;Master 側のホスト名 or IPアドレス&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">master_user</span> <span class="o">=</span> <span class="s1">&#39;repl&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">master_password</span> <span class="o">=</span> <span class="s1">&#39;repl のパスワード&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">master_use_gtid</span> <span class="o">=</span> <span class="n">slave_pos</span><span class="p">;</span>
</span><span class='line'><span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">23</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>10. [Slave] レプリケーションの開始</h3>

<p>続けて、以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; START SLAVE;
</span><span class='line'>Query OK, 0 rows affected (0.18 sec)
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、レプリケーションを停止するには、以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; STOP SLAVE;
</span></code></pre></td></tr></table></div></figure>


<p>ステータスは以下で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW SLAVE STATUS\G
</span></code></pre></td></tr></table></div></figure>


<h3>11. 動作確認</h3>

<p>Master 側への INSERT, UPDATE, DELETE 等が Slave 側にも反映されることを確認する。</p>

<h3>12. レプリケーションの完全停止設定</h3>

<p>レプリケーションの完全に停止（一時的な停止でなく、機能そのものを削除）するには、 Slave 側で以下を実行後に MariaDB サーバを再起動すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; STOP SLAVE;
</span><span class='line'>&gt; RESET SLAVE ALL;
</span></code></pre></td></tr></table></div></figure>


<p>（<code>RESET SLAVE</code> だと HOST, USER, PASSWORD はリセットされない）</p>

<p>ちなみに、MySQL の古いバージョンだと、以下を実行後に MariaDB サーバを再起動すればよい。（当方、未確認）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; STOP SLAVE;
</span><span class='line'>&gt; RESET SLAVE;
</span><span class='line'>&gt; CHANGE MASTER TO MASTER_HOST=&#39;&#39;;
</span></code></pre></td></tr></table></div></figure>


<p>また、このレプリケーション停止設定をしなければ、 <code>STOP SLAVE</code> をしても MariaDB サーバ再起動時に Slave が開始されてしまう。</p>

<h3>13. 参考サイト</h3>

<ul>
<li><a href="https://mariadb.com/kb/en/mariadb/standard-replication/" title="Standard Replication - MariaDB Knowledge Base">Standard Replication - MariaDB Knowledge Base</a></li>
</ul>


<hr />

<p>GTID を使用したレプリケーションにはメリット・デメリットがあります。<br/>
よく理解した上で運用すると、サーバ運用が効率化されるのではないでしょうか。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB(MySQL) - 既存 InnoDB ファイルフォーマットを Antelope から Barracuda に変換！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/15/mariadb-innodb-file-format-changing-to-barracuda/"/>
    <updated>2015-07-15T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/15/mariadb-innodb-file-format-changing-to-barracuda</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MariaDB(MySQL) の既存 InnoDB ファイルフォーマットを Antelope から Barracuda に変換する方法についての記録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>当方は MariaDB 10.0.20 で動作確認を行なったが、別のバージョンや MySQL でも同様。</li>
<li>InnoDB ストレージエンジンを使用する設定にしている。（<strong>必須</strong>）</li>
<li>InnoDB データファイルをテーブルごとに作成するシステム変数 <code>innodb_file_per_table</code> を <code>1</code>（有効） にしている。（<strong>必須</strong>）</li>
<li>不測の事態に備えてデータのバックアップ（ダンプ）をとって作業を行うこと。（<strong>重要</strong>）</li>
</ul>


<h3>1. InnoDB ファイルフォーマットについて</h3>

<p>InnoDB ファイルフォーマットの設定は MariaDB(MySQL) システム変数 <code>innodb_file_format</code> で行うが、設定していなければ <code>Antelope</code> がデフォルトで設定される。</p>

<ul>
<li><strong>Antelope フォーマット</strong><br/>
可変長カラム(VARBINARY, VARCHAR, BLOB, TEXT)の先頭768バイトを B-tree ノードのインデックスレコードに格納し、残りをオーバーフローページに格納する。

<ul>
<li>REDUNDANT &hellip; かつてからの冗長な行フォーマット。</li>
<li>COMPACT &hellip; MySQL 5.0 で追加された行フォーマットで、UTF-8 文字列の最適化などにより REDUNDANT よりもデータサイズが小さくなる。</li>
</ul>
</li>
<li><strong>Barracuda フォーマット</strong><br/>
可変長カラム(VARBINARY, VARCHAR, BLOB, TEXT)の全てを外部のオーバーフローページに格納し、クラスタインデックスレコードにそのページへのポインタ(20B)のみを格納する。

<ul>
<li>COMPRESSED &hellip; データ圧縮（データサイズ縮小、 I/O 減少）を行う行フォーマット。</li>
<li>DYNAMIC &hellip; データ圧縮は行わない行フォーマット。</li>
</ul>
</li>
</ul>


<h3>2. 現状の確認</h3>

<p>まず、現状の InnoDB ファイルフォーマットを確認。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW GLOBAL VARIABLES LIKE &#39;innodb_file_format&#39;;
</span><span class='line'>+--------------------+----------+
</span><span class='line'>| Variable_name      | Value    |
</span><span class='line'>+--------------------+----------+
</span><span class='line'>| innodb_file_format | Antelope |
</span><span class='line'>+--------------------+----------+
</span></code></pre></td></tr></table></div></figure>


<p>テーブルの行フォーマットも確認。（以下の <code>Row_format</code>, <code>Create_options</code> の設定値）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW TABLE STATUS LIKE &#39;table_name&#39;\G
</span><span class='line'>*************************** 1. row ***************************
</span><span class='line'>           Name: table_name
</span><span class='line'>         Engine: InnoDB
</span><span class='line'>        Version: 10
</span><span class='line'>     Row_format: Compact
</span><span class='line'>           Rows: 37070
</span><span class='line'> Avg_row_length: 240
</span><span class='line'>    Data_length: 8929280
</span><span class='line'>Max_data_length: 0
</span><span class='line'>   Index_length: 0
</span><span class='line'>      Data_free: 4194304
</span><span class='line'> Auto_increment: 18703
</span><span class='line'>    Create_time: 2015-05-12 12:10:32
</span><span class='line'>    Update_time: NULL
</span><span class='line'>     Check_time: NULL
</span><span class='line'>      Collation: utf8mb4_general_ci
</span><span class='line'>       Checksum: NULL
</span><span class='line'> Create_options:
</span><span class='line'>        Comment:
</span></code></pre></td></tr></table></div></figure>


<h3>3. 設定の変更</h3>

<p>設定ファイルの <code>mysqld</code> 部を以下のように編集後、 MariaDB(MySQL) サーバを再起動する。（設定ファイルのパスや名称は環境により異なる）<br/>
（<code>innodb_file_format</code> を設定していない場合は、デフォルトの <code>Antelope</code> が適用される）</p>

<figure class='code'><figcaption><span>/etc/mysql/conf.d/mariadb.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[mysqld]
</span><span class='line'>innodb_file_per_table = 1
</span><span class='line'>innodb_file_format = Barracuda
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、MariaDB(MySQL) サーバに root でログイン後以下のように実行してもよい。（ただし、サーバを再起動すると設定が元に戻るので、この場合も設定ファイルを編集しておく必要はある）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SET GLOBAL innodb_file_format = Barracuda;
</span></code></pre></td></tr></table></div></figure>


<h3>4. 行フォーマットの変更</h3>

<p>既存のテーブルの行フォーマット <code>ROW_FORMAT</code> を変更する。（以下は、 <code>DYNAMIC</code> を指定する例）<br/>
（データ圧縮を行いたければ、 <code>COMPRESSED</code> を指定する）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; ALTER TABLE table_name ROW_FORMAT = DYNAMIC;
</span></code></pre></td></tr></table></div></figure>


<p><code>DYNAMIC</code> でなく <code>COMPRESSED</code> に設定する場合は、 <code>KEY_BLOCK_SIZE</code> で圧縮後の InnoDB ページサイズを指定することも可能。（指定可能な値は <code>1</code>, <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>（デフォルト））</p>

<p>また、当然ながらテーブル新規作成時も同様に指定できる。</p>

<h3>5. 変更後の確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW GLOBAL VARIABLES LIKE &#39;innodb_file_format&#39;;
</span><span class='line'>+--------------------+-----------+
</span><span class='line'>| Variable_name      | Value     |
</span><span class='line'>+--------------------+-----------+
</span><span class='line'>| innodb_file_format | Barracuda |
</span><span class='line'>+--------------------+-----------+
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&gt; SHOW TABLE STATUS LIKE &#39;table_name&#39;\G
</span><span class='line'>*************************** 1. row ***************************
</span><span class='line'>           Name: table_name
</span><span class='line'>         Engine: InnoDB
</span><span class='line'>        Version: 10
</span><span class='line'>     Row_format: Dynamic
</span><span class='line'>           Rows: 35152
</span><span class='line'> Avg_row_length: 254
</span><span class='line'>    Data_length: 8929280
</span><span class='line'>Max_data_length: 0
</span><span class='line'>   Index_length: 0
</span><span class='line'>      Data_free: 0
</span><span class='line'> Auto_increment: 18703
</span><span class='line'>    Create_time: 2015-06-04 13:40:09
</span><span class='line'>    Update_time: NULL
</span><span class='line'>     Check_time: NULL
</span><span class='line'>      Collation: utf8mb4_general_ci
</span><span class='line'>       Checksum: NULL
</span><span class='line'> Create_options: row_format=DYNAMIC
</span><span class='line'>        Comment:
</span></code></pre></td></tr></table></div></figure>


<h3>6. その他</h3>

<p>上記 4 方法では、大きなテーブルの場合にメモリをふんだんに使用するせいでマシンが重くなるかもしれない。<br/>
その場合は、以下のような手順で行フォーマットを変更することも可能。</p>

<ol>
<li>対象テーブルのダンプ（データのみ）を取得。（<code>mysqldump</code> コマンド実行時に <code>-t</code> オプションを付加）</li>
<li>対象テーブルを truncate.</li>
<li>上記 4 の方法で行フォーマットを変更。</li>
<li>取得していたダンプ（データのみ）をリストア。</li>
</ol>


<h3>7. 参考サイト</h3>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.6/en/innodb-row-format.html" title="MySQL :: MySQL 5.6 Reference Manual :: 14.8 InnoDB Row Storage and Row Formats">MySQL :: MySQL 5.6 Reference Manual :: 14.8 InnoDB Row Storage and Row Formats</a></li>
</ul>


<hr />

<p>ファイルフォーマット、行フォーマットが変更されたことで、パフォーマンスも良くなることでしょう。（当方、検証は行なっていないが、体感的に若干パフォーマンスが良くなったような気がする）</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - ionice でディスクI/Oによる負荷を調整！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/12/linux-adjust-disk-io-stress-by-ionice/"/>
    <updated>2015-07-12T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/12/linux-adjust-disk-io-stress-by-ionice</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>ご存知のとおり、プロセス実行優先度の管理は <code>nice</code> コマンドで行います。</p>

<p>今回は、ディスク I/O 優先度の管理を行う <code>ionice</code> についての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8 Jessie での作業を想定。</li>
</ul>


<h3>1. 使用方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice --help
</span><span class='line'>
</span><span class='line'>ionice - sets or gets process io scheduling class and priority.
</span><span class='line'>
</span><span class='line'>Usage:
</span><span class='line'>  ionice [OPTION] -p PID [PID...]
</span><span class='line'>  ionice [OPTION] COMMAND
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  -c, --class &lt;class&gt;   scheduling class name or number
</span><span class='line'>                           0: none, 1: realtime, 2: best-effort, 3: idle
</span><span class='line'>  -n, --classdata &lt;num&gt; scheduling class data
</span><span class='line'>                           0-7 for realtime and best-effort classes
</span><span class='line'>  -p, --pid=PID         view or modify already running process
</span><span class='line'>  -t, --ignore          ignore failures
</span><span class='line'>  -V, --version         output version information and exit
</span><span class='line'>  -h, --help            display this help and exit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>スケジューリングクラス(<code>-c</code>)について

<ul>
<li><code>1</code>(RealTime) &hellip; 最も優先度が高い。</li>
<li><code>2</code>(Best-Effort) &hellip; <code>1</code>(RealTime) と <code>3</code>(Idle) の間。</li>
<li><code>3</code>(Idle)  &hellip; 最も優先度が低い。</li>
</ul>
</li>
<li>プライオリティ(<code>-n</code>)について

<ul>
<li>スケジューリングクラス <code>1</code>(RealTime) と <code>2</code>(Best-Effort) にのみ使用可能。</li>
<li><code>0</code> 〜 <code>7</code> &hellip; 値が小さいほど優先度が高い。</li>
</ul>
</li>
</ul>


<h3>2. 使用例</h3>

<p>以下は、コマンド <code>cmd</code> をディスク I/O 優先度を最高にして実行する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice -c 1 cmd
</span></code></pre></td></tr></table></div></figure>


<p>以下は、コマンド <code>cmd</code> をディスク I/O 優先度を最低にして実行する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice -c 3 cmd
</span></code></pre></td></tr></table></div></figure>


<p>以下は、コマンド <code>cmd</code> をディスク I/O 優先度をベストエフォート（優先度最低）にして実行する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice -c 2 -n 7 cmd
</span></code></pre></td></tr></table></div></figure>


<p>以下は、プロセス番号 <code>1234</code> で実行中のプロセスのディスク I/O 優先度を確認する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice -p 1234
</span></code></pre></td></tr></table></div></figure>


<p>以下は、プロセス番号 <code>1234</code> で実行中のプロセスのディスク I/O 優先度を最低に変更する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ionice -c 3 -p 1234
</span></code></pre></td></tr></table></div></figure>


<p>以下は、コマンド <code>cmd</code> をプロセス優先度を最低、ディスク I/O 優先度も最低にして実行する例。（マシンに最も負荷をかけない方法）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ nice -n 19 ionice -c 3 cmd
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>非力なマシンで作業を行うことの多い当方にとっては、非常によく使用するコマンドです。</p>

<p>当然ながら、ディスク I/O の負荷が低く抑えられる代わりに処理に時間がかかります。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - pv コマンドで処理進捗状況表示！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/09/linux-display-progress-of-process-by-pv/"/>
    <updated>2015-07-09T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/09/linux-display-progress-of-process-by-pv</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux で何か時間のかかる処理を実行中に、処理の進行状況や処理終了までの大まなか残り時間を知りたいことがあります。</p>

<p>以下、 pv コマンド使用してプログレバーを表示させる方法についての備忘録です。（"pv" は Pipe Viewer の略）</p>

<p>ちなみに、当方が pv コマンドを導入した主な理由は、 MariaDB(MySQL) の大容量ダンプファイルをインポート（リストア）する際に進捗状況を知りたかったからです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian 8.1 Jessie での作業を想定。<br/>
（他バージョンも同様。他ディストリビューションもインストール方法以外は同様）</li>
</ul>


<h3>1. pv コマンドのインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># apt-get install pv
</span></code></pre></td></tr></table></div></figure>


<h3>2. 使用方法</h3>

<p>（<code>pv</code> コマンドには <code>cat</code> コマンドのような機能があることに留意）</p>

<p>以下は、テキストファイルを gzip 圧縮する例。<br/>
（<code>gzip -c hoge.txt.gz | pv &gt; /dev/null</code> でも gzip 圧縮は可能だが、テキストファイルの容量が取得できないため処理終了までの残り時間は分からない）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># pv hoge.txt | gzip &gt; hoge.txt.gz
</span><span class='line'>5.53MiB 0:00:01 [5.19MiB/s] [=====&gt;                  ] 28% ETA 0:00:02
</span></code></pre></td></tr></table></div></figure>


<p>以下は、テキストファイルの取得と gzip 圧縮の2処理に名前を付けて同時に監視する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># pv -cN source hoge.text | gzip | pv -cN gzip &gt; hoge.txt.gz
</span><span class='line'>   source: 7.41MiB 0:00:02 [1.39MiB/s] [===&gt;         ] 37% ETA 0:00:03
</span><span class='line'>     gzip:  320KiB 0:00:02 [ 153KiB/s] [ &lt;=&gt;                         ]
</span></code></pre></td></tr></table></div></figure>


<p>以下は、 MariaDB や MySQL のダンプファイルをインポート（リストア）する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># pv hoge.dump | mysql -u root -p db_name
</span></code></pre></td></tr></table></div></figure>


<p>また、データ量が分かっているのなら <code>pv -s 1024m</code> のように指定することも可能。<br/>
その他各種オプションについては <code>man pv</code> で確認可能。</p>

<h3>参考サイト</h3>

<ul>
<li><a href="http://www.catonmat.net/blog/unix-utilities-pipe-viewer/" title="A Unix Utility You Should Know About: Pipe Viewer - good coders code, great reuse">A Unix Utility You Should Know About: Pipe Viewer - good coders code, great reuse</a></li>
</ul>


<hr />

<p>これで、時間がかかる処理も終了時間の見当が付くようになります。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debian 8 (Jessie) - Web メールシステム Roundcube Webmail インストール（ソースビルド）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/06/debian-8-roundcube-mail-installation/"/>
    <updated>2015-07-06T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/06/debian-8-roundcube-mail-installation</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Debian GNU/Linux 8 (Jessie) に Web メールソフト RoundcubeMail をソースをビルドしてインストールする方法についての記録です。</p>

<p>以前古いバージョンでの作業時に残していた記録を参考に作業を行い、今回更新した作業記録を貼付する形式の内容となっています。<br/>
（当然ながら、興味がなければスルーしてください）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8 (Jessie) での作業を想定。</li>
<li>送信メールサーバ Postfix, 受信メールサーバ Dovecot インストール済み。</li>
<li>DB サーバ MariaDB(MySQL) インストール済み。（<a href="http://komasaru.github.io/2015/06/18/debian-8-mariadb-installation/" title="Debian 8 (Jessie) - DB サーバ MariaDB 構築！">Debian 8 (Jessie) - DB サーバ MariaDB 構築！</a>）</li>
<li>Web サーバは Apache ではなく Nginx を想定。（<a href="http://komasaru.github.io/2015/06/19/debian-8-nginx-installation-by-official-apt/" title="Debian 8 (Jessie) - Web サーバ Nginx 構築（Nginx 公式リポジトリ使用）！">Debian 8 (Jessie) - Web サーバ Nginx 構築（Nginx 公式リポジトリ使用）！</a>）</li>
<li>PHP インスール済みであること。（<a href="http://komasaru.github.io/2015/06/29/debian-8-php-installation-by-src/" title="Debian 8 (Jessie) - PHP インストール（ソースビルド）！">Debian 8 (Jessie) - PHP インストール（ソースビルド）！</a>）</li>
<li>PHP と Nginx の連携が設定済みであること。（<a href="http://komasaru.github.io/2015/06/30/debian-8-php-cooperation-with-nginx/" title="Debian 8 (Jessie) - PHP と Nginx の連携！">Debian 8 (Jessie) - PHP と Nginx の連携！</a>）</li>
<li>RoundCube Webmail は当記事執筆時点で最新の 1.1.1 をインストールする。（「<a href="http://sourceforge.net/projects/roundcubemail/files/roundcubemail/" title="Roundcube Webmail - Browse /roundcubemail at SourceForge.net">Roundcube Webmail - Browse /roundcubemail at SourceForge.net</a>」で最新版を確認）</li>
<li>http アクセスを https にリダイレクトしない（https アクセスのみを許可する）方法を採用する。</li>
</ul>


<h3>1. Roundcube Webmail のインストール</h3>

<p>アーカイブをダウンロードしてインストールを行う。<br/>
（Roundcube Webmail は apt でもインストール可能だが、依存性の関係で Apache もインストールされてしまうことに留意）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># wget http://downloads.sourceforge.net/project/roundcubemail/roundcubemail/1.1.1/roundcubemail-1.1.1.tar.gz
</span><span class='line'>                                           # &lt;= アーカイブダウンロード
</span><span class='line'># tar zxvf roundcubemail-1.1.1.tar.gz      # &lt;= アーカイブ展開
</span><span class='line'># mv roundcubemail-*/ /var/www/roundcube   # &lt;= 所定の位置へ移動
</span><span class='line'># chown nginx:nginx -R /var/www/roundcube  # &lt;= 所有者変更
</span><span class='line'># chmod o+w -R /var/www/roundcube/temp/    # &lt;= 書き込み権限付与
</span><span class='line'># chmod o+w -R /var/www/roundcube/logs/    # &lt;= 書き込み権限付与
</span><span class='line'># rm -f roundcubemail-1.1.1.tar.gz         # &lt;= 後始末
</span></code></pre></td></tr></table></div></figure>


<h3>2. 文字化けの対応</h3>

<p>機種依存文字が文字化けしないよう文字コード設定ファイル &ldquo;rcube_charset.php&rdquo; を以下のように編集する。</p>

<figure class='code'><figcaption><span>/var/www/roundcube/program/lib/Roundcube/rcube_charset.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    // convert charset using mbstring module
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="nv">$mbstring_list</span> !<span class="o">==</span> <span class="nb">false</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;WINDOWS-1257&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;ISO-8859-13&#39;</span><span class="p">;</span>
</span><span class='line'>        // <span class="o">====[</span> 追加 <span class="o">]===</span>&gt;
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;JIS&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;ISO-2022-JP-MS&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;ISO-2022-JP&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;ISO-2022-JP-MS&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;EUC-JP&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;EUCJP-WIN&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;SJIS&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;SJIS-WIN&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;SHIFT_JIS&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;SJIS-WIN&#39;</span><span class="p">;</span>
</span><span class='line'>        // &lt;<span class="o">===[</span> 追加 <span class="o">]====</span>
</span><span class='line'>        // it happens that mbstring supports ASCII but not US-ASCII
</span><span class='line'>        <span class="k">if</span> <span class="o">((</span><span class="nv">$from</span> <span class="o">==</span> <span class="s1">&#39;US-ASCII&#39;</span> <span class="o">||</span> <span class="nv">$to</span> <span class="o">==</span> <span class="s1">&#39;US-ASCII&#39;</span><span class="o">)</span> <span class="o">&amp;&amp;</span> !in_array<span class="o">(</span><span class="s1">&#39;US-ASCII&#39;</span>, <span class="nv">$mbstring_list</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="nv">$aliases</span><span class="o">[</span><span class="s1">&#39;US-ASCII&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;ASCII&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に、 &ldquo;mime.types&rdquo; を取得する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># wget http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types
</span><span class='line'>                                            # &lt;= ダウンロード
</span><span class='line'># mv mime.types /var/www/roundcube/config/  # &lt;= 所定の位置へ移動
</span></code></pre></td></tr></table></div></figure>


<p>そして、デフォルト設定ファイル &ldquo;defaults.inc.php&rdquo; を以下のように編集する。</p>

<figure class='code'><figcaption><span>/var/www/roundcube/config/defaults.inc.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>// Absolute path to a <span class="nb">local </span>mime.types mapping table file.
</span><span class='line'>// This is used to derive mime-types from the filename extension or vice versa.
</span><span class='line'>// Such a file is usually part of the apache webserver. If you don<span class="s1">&#39;t find a file named mime.types on your system,</span>
</span><span class='line'><span class="s1">// download it from http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types</span>
</span><span class='line'><span class="s1">$config[&#39;</span>mime_types<span class="s1">&#39;] = &#39;</span>/var/www/roundcube/config/mime.types<span class="err">&#39;</span><span class="p">;</span>  // &lt;<span class="o">=</span> 変更（mime.types の位置を指定）
</span></code></pre></td></tr></table></div></figure>


<h3>3. パッケージのインストール</h3>

<p>必要なパッケージをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># apt-get -y install php-pear php5-mysql php5-mcrypt php5-intl
</span></code></pre></td></tr></table></div></figure>


<p>必要な Pear モジュールもインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># pear install Auth_SASL
</span><span class='line'># pear install Net_SMTP
</span><span class='line'># pear install Net_IDNA2
</span><span class='line'># pear install Mail_mime
</span><span class='line'># pear install Mail_mimeDecode
</span></code></pre></td></tr></table></div></figure>


<p>（安定版が存在せずエラーになる場合は <code>-beta</code> や <code>-alpha</code> を付与するようメッセージが出力されるはずなので、それに従う）</p>

<h3>4. データベースの設定</h3>

<p>MariaDB サーバに root でログインして以下のようにデータベース・ユーザの作成を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u root -p
</span><span class='line'>Enter password:                                   # &lt;= root パスワード
</span><span class='line'>Welcome to the MariaDB monitor.  Commands end with ; or \g.
</span><span class='line'>Your MariaDB connection id is 34
</span><span class='line'>Server version: 10.0.16-MariaDB-1-log (Debian)
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2014, Oracle, MariaDB Corporation Ab and others.
</span><span class='line'>
</span><span class='line'>Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
</span><span class='line'>
</span><span class='line'>MariaDB [(none)]&gt; CREATE DATABASE roundcubemail;  # &lt;= roundcubemail データベース作成
</span><span class='line'>Query OK, 1 row affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON roundcubemail.* TO roundcube@localhost IDENTIFIED BY &#39;任意のパスワード&#39;;
</span><span class='line'>                                                  # &lt;= ユーザ roundcube 作成
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>MariaDB [(none)]&gt; FLUSH PRIVILEGES;               # &lt;= 即時反映
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>MariaDB [(none)]&gt; exit                            # &lt;= ログアウト
</span><span class='line'>Bye
</span></code></pre></td></tr></table></div></figure>


<h3>5. データベースの初期化</h3>

<p>用意されている SQL ファイルを使用してデータベース roundcubemail を初期化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u roundcube -p roundcubemail &lt; /var/www/roundcube/SQL/mysql.initial.sql
</span><span class='line'>Enter password:  # &lt;= roundcube ユーザのパスワード
</span></code></pre></td></tr></table></div></figure>


<h3>6. PHP 設定ファイルの編集</h3>

<p>PHP 設定ファイルでタイムゾーンが未設定なら設定する。（日本時間）</p>

<figure class='code'><figcaption><span>/etc/php.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="p">[</span><span class="nx">Date</span><span class="p">]</span>
</span><span class='line'><span class="p">;</span> <span class="nx">Defines</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">timezone</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nb">date</span> <span class="nx">functions</span>
</span><span class='line'><span class="p">;</span> <span class="nx">http</span><span class="o">://</span><span class="nx">php</span><span class="o">.</span><span class="nx">net</span><span class="o">/</span><span class="nb">date</span><span class="o">.</span><span class="nx">timezone</span>
</span><span class='line'><span class="p">;</span><span class="nb">date</span><span class="o">.</span><span class="nx">timezone</span> <span class="o">=</span>
</span><span class='line'><span class="nb">date</span><span class="o">.</span><span class="nx">timezone</span> <span class="o">=</span> <span class="nx">Asia</span><span class="o">/</span><span class="nx">Tokyo</span>  <span class="c1">// &lt;= 追加</span>
</span></code></pre></td></tr></table></div></figure>


<h3>7. RoundCube Webmail デフォルト設定ファイルの編集</h3>

<figure class='code'><figcaption><span>/var/www/roundcube/config/defaults.inc.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// This domain will be used to form e-mail addresses of new users</span>
</span><span class='line'><span class="c1">// Specify an array with &#39;host&#39; =&gt; &#39;domain&#39; values to support multiple hosts</span>
</span><span class='line'><span class="c1">// Supported replacement variables:</span>
</span><span class='line'><span class="c1">// %h - user&#39;s IMAP hostname</span>
</span><span class='line'><span class="c1">// %n - http hostname ($_SERVER[&#39;SERVER_NAME&#39;])</span>
</span><span class='line'><span class="c1">// %d - domain (http hostname without the first part)</span>
</span><span class='line'><span class="c1">// %z - IMAP domain (IMAP hostname without the first part)</span>
</span><span class='line'><span class="c1">// For example %n = mail.domain.tld, %t = domain.tld</span>
</span><span class='line'><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;mail_domain&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;mk-mode.com&#39;</span><span class="p">;</span>     <span class="c1"># &lt;= 変更 （送信元メールアドレスのドメインを指定）</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Use this charset as fallback for message decoding$</span>
</span><span class='line'><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;default_charset&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;ISO-2022-1&#39;</span><span class="p">;</span>  <span class="c1"># &lt;= 変更（日本語対応）</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// enforce connections over https</span>
</span><span class='line'><span class="c1">// with this option enabled, all non-secure connections will be redirected.</span>
</span><span class='line'><span class="c1">// set the port for the ssl connection as value of this option if it differs from the default 443</span>
</span><span class='line'><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;force_https&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>              <span class="c1"># &lt;= 変更（https アクセス(SSL)の強制）</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the way how contact names are displayed in the list</span>
</span><span class='line'><span class="c1">// 0: display name</span>
</span><span class='line'><span class="c1">// 1: (prefix) firstname middlename surname (suffix)</span>
</span><span class='line'><span class="c1">// 2: (prefix) surname firstname middlename (suffix)</span>
</span><span class='line'><span class="c1">// 3: (prefix) surname, firstname middlename (suffix)</span>
</span><span class='line'><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;addressbook_name_listing&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>    <span class="c1"># &lt;= 変更（アドレス帳での表示を姓名形式に）</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set true if deleted messages should not be displayed$</span>
</span><span class='line'><span class="c1">// This will make the application run slower$</span>
</span><span class='line'><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;skip_deleted&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>             <span class="c1"># &lt;= 変更（削除済みメッセージを非表示）</span>
</span></code></pre></td></tr></table></div></figure>


<h3>8. Nginx 設定ファイルの編集</h3>

<p><code>https://サーバー名/roundcube/</code> で Web メールへアクセスできるようにするために、Nginx 設定ファイル server ディレクティブ（SSL 設定側）内に以下のように追記する。</p>

<figure class='code'><figcaption><span>/etc/nginx/conf.d/ssl.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen       <span class="m">443</span> ssl<span class="p">;</span>
</span><span class='line'>    server_name  localhost<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#ssl_certificate      /etc/nginx/cert.pem;</span>
</span><span class='line'>    ssl_certificate      /etc/ssl/private/server.crt<span class="p">;</span>
</span><span class='line'>    <span class="c">#ssl_certificate_key  /etc/nginx/cert.key;</span>
</span><span class='line'>    ssl_certificate_key  /etc/ssl/private/server.key<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    ssl_session_cache shared:SSL:1m<span class="p">;</span>
</span><span class='line'>    ssl_session_timeout  5m<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    ssl_ciphers  HIGH:!aNULL:!MD5<span class="p">;</span>
</span><span class='line'>    ssl_prefer_server_ciphers   on<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    location / <span class="o">{</span>
</span><span class='line'>        <span class="c">#root   /usr/share/nginx/html;</span>
</span><span class='line'>        root   /var/www/html<span class="p">;</span>
</span><span class='line'>        index  index.html index.htm<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># ====[ 追加 ]===&gt;</span>
</span><span class='line'>    <span class="c"># RoundCube Webmail</span>
</span><span class='line'>    location /roundcube <span class="o">{</span>
</span><span class='line'>        <span class="nb">alias</span> /var/www/roundcube<span class="p">;</span>
</span><span class='line'>        allow 127.0.0.1<span class="p">;</span>        <span class="c"># &lt;= 内部からのみアクセス可にする場合</span>
</span><span class='line'>        allow 192.168.11.0/24<span class="p">;</span>  <span class="c"># &lt;= 内部からのみアクセス可にする場合</span>
</span><span class='line'>        deny all<span class="p">;</span>               <span class="c"># &lt;= 内部からのみアクセス可にする場合</span>
</span><span class='line'>        <span class="c"># allow all;            # &lt;= 外部からもアクセス可にする場合</span>
</span><span class='line'>        index  index.php<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    location /roundcube/config <span class="o">{</span>
</span><span class='line'>        deny all<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    location /roundcube/temp <span class="o">{</span>
</span><span class='line'>        deny all<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    location /roundcube/logs <span class="o">{</span>
</span><span class='line'>        deny all<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    location ~ /roundcube/.*<span class="se">\.</span>php<span class="nv">$ </span><span class="o">{</span>
</span><span class='line'>        fastcgi_pass    127.0.0.1:9000<span class="p">;</span>
</span><span class='line'>        fastcgi_index   index.php<span class="p">;</span>
</span><span class='line'>        fastcgi_param   SCRIPT_FILENAME  /var/www/<span class="nv">$uri</span><span class="p">;</span>
</span><span class='line'>        include         fastcgi_params<span class="p">;</span>
</span><span class='line'>        fastcgi_pass_header <span class="s2">&quot;X-Accel-Redirect&quot;</span><span class="p">;</span>
</span><span class='line'>        fastcgi_pass_header <span class="s2">&quot;X-Accel-Buffering&quot;</span><span class="p">;</span>
</span><span class='line'>        fastcgi_pass_header <span class="s2">&quot;X-Accel-Charset&quot;</span><span class="p">;</span>
</span><span class='line'>        fastcgi_pass_header <span class="s2">&quot;X-Accel-Expires&quot;</span><span class="p">;</span>
</span><span class='line'>        fastcgi_pass_header <span class="s2">&quot;X-Accel-Limit-Rate&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c"># &lt;===[ 追加 ]====</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、Web サーバが Nginx ではなく Apache の場合は &ldquo;/etc/httpd/conf.d/roundcubemail.conf&rdquo; を以下の内容で作成すればよい。（詳細なアクセス許可・拒否設定は不明）</p>

<figure class='code'><figcaption><span>/etc/httpd/conf.d/roundcubemail.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo </span>Alias /roundcube /var/www/roundcube
</span></code></pre></td></tr></table></div></figure>


<h3>9. Nginx, PHP-FPM の再起動</h3>

<p>設定反映のため Nginx（Apache なら httpd）, PHP-FPM を再起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart nginx
</span><span class='line'>
</span><span class='line'># systemctl resatrt php-fpm
</span></code></pre></td></tr></table></div></figure>


<h3>10. RoundCube Webmail の設定</h3>

<p>Web ブラウザで <code>https://＜サーバ名 or IP アドレス＞/roundcube/installer/</code> へアクセスする。<br/>
そして、画面上で以下のように設定する。</p>

<ol>
<li>[NEXT] ボタンを押下する。<br/>
（但し、赤字で &ldquo;NOT OK&rdquo; がある場合は [NEXT] が非活性で押下できない。未導入のモジュールを導入するなどし、 &ldquo;NOT OK&rdquo; を無くす）</li>
<li>Logging &amp; Debugging

<ul>
<li>&ldquo;log_driver&rdquo; で &ldquo;syslog” を選択する。（ログを &rdquo;/var/log/messages" に出力）</li>
</ul>
</li>
<li>Database setup

<ul>
<li>&ldquo;Database name&rdquo;, &ldquo;Database user name&rdquo; が正しいか確認する。</li>
<li>&ldquo;Database password&rdquo; に roundcubemail データベースのパスワードを入力する。</li>
</ul>
</li>
<li>IMAP Settings

<ul>
<li>&ldquo;default_host&rdquo; にメールサーバー名（当方の例： &ldquo;mail.mk-mode.com"）を入力する。</li>
<li>&ldquo;junk_mbox&rdquo; に &ldquo;Spam&rdquo; と入力する。</li>
</ul>
</li>
<li>SMTP Settings

<ul>
<li>&ldquo;smtp_server&rdquo; にメールサーバー名（当方の例： &ldquo;mail.mk-mode.com"）を入力する。</li>
<li>&ldquo;Use the current IMAP username and password for SMTP authentication&rdquo; をチェックする。<br/>
（SMTP 認証に IMAP サーバーのユーザー名／パスワードを使用する）</li>
</ul>
</li>
<li>Display settings &amp; user prefs

<ul>
<li>&ldquo;language&rdquo; に &ldquo;ja_JP&rdquo; と入力する。</li>
<li>&ldquo;If preview pane is enabled&rdquo; をチェックする。（メール一覧下部にプレビューを表示）</li>
</ul>
</li>
<li>[CREATE CONFIG] ボタンを押下する。</li>
<li>[CONTINUE] ボタンを押下する。</li>
<li>必要なら、"Test SMTP config", &ldquo;Test IMAP config&rdquo; でメール送信テストをしてみる。</li>
<li>最後に警告メッセージに従い &ldquo;installer&rdquo; ディレクトリを削除する。<br/>
<code>rm -rf /var/www/roundcube/installer</code></li>
</ol>


<h3>11. 動作確認</h3>

<p>Web ブラウザで <code>https://＜サーバ名 or IP アドレス＞/roundcube/</code> へアクセスし、メールのユーザ名・パスワードでログインできること、各種操作が可能なことを確認する。<br/>
また、ログイン後に各種設定も可能である。</p>

<h3>12. 参考サイト</h3>

<ul>
<li><a href="http://roundcube.net/" title="Roundcube - Free and Open Source Webmail Software">Roundcube - Free and Open Source Webmail Software</a></li>
<li><a href="http://centossrv.com/roundcubemail.shtml" title="Webmailシステム構築(RoundCube Webmail) - CentOSで自宅サーバー構築">Webmailシステム構築(RoundCube Webmail) - CentOSで自宅サーバー構築</a></li>
</ul>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debian 8 (Jessie) - munin 各種監視追加！]]></title>
    <link href="http://komasaru.github.io/blog/2015/07/04/debian-8-munin-additional-setting/"/>
    <updated>2015-07-04T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/07/04/debian-8-munin-additional-setting</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Debian GNU/Linux 8 (Jessie) にインストールしたサーバ監視ツール munin に各種監視を追加する方法についての記録です。</p>

<p>以前古いバージョンでの作業時に残していた記録を参考に作業を行い、今回更新した作業記録を貼付する形式の内容となっています。<br/>
（当然ながら、興味がなければスルーしてください）</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8 (Jessie) での作業を想定。</li>
<li>サーバ監視ツール munin がインストール済み。</li>
<li>ハードディスク温度の監視を追加する。</li>
<li>CPU 温度・電圧・ファン回転数の監視を追加する。</li>
<li>MariaDB(MySQL) の監視を追加する。</li>
<li>Nginx の監視を追加する。</li>
</ul>


<h3>1. ハードディスク温度の監視追加</h3>

<p><code>smartctl</code> コマンドを使用するので、以下のようにしてインストールしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># apt-get -y install smartmontools
</span></code></pre></td></tr></table></div></figure>


<p>以下のように設定ファイル &ldquo;hddtemp_smartctl&rdquo; を作成する。（"munin-node" に追記してもよい）</p>

<figure class='code'><figcaption><span>/etc/munin/plugin-conf.d/hddtemp_smartctl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>hddtemp_smartctl<span class="o">]</span>
</span><span class='line'>user root
</span><span class='line'>env.drives sda                 <span class="c"># &lt; = sda は監視するハードディスク</span>
</span><span class='line'>env.smartctl /usr/sbin/smartctl
</span><span class='line'>env.args_sda --all -d ata
</span></code></pre></td></tr></table></div></figure>


<p>以下のようにしてシンボリックリンクを張る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># ln -s /usr/share/munin/plugins/hddtemp_smartctl /etc/munin/plugins/
</span></code></pre></td></tr></table></div></figure>


<h3>2. CPU 温度・電圧・ファン回転数の監視追加</h3>

<p>まず、センサーツール <code>lm-sensors</code>、依存パッケージをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># apt-get -y install lm-sensors libsensors4 libsensors4-dev fancontrol sensord
</span></code></pre></td></tr></table></div></figure>


<p>そして、センサーを検出する。<br/>
全て「エンター」応答で大丈夫だが、最後に &ldquo;/etc/modules&rdquo; へ書き込むかどうか問われたら <code>yes</code> 応答する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># sensors-detect
</span></code></pre></td></tr></table></div></figure>


<p>マシンを再起動して、センサーをチェックしてみる。（当然、表示内容は環境により異なる）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># sensors
</span><span class='line'>coretemp-isa-0000
</span><span class='line'>Adapter: ISA adapter
</span><span class='line'>Core 0:       +21.0°C  (crit = +100.0°C)
</span><span class='line'>
</span><span class='line'>smsc47m192-i2c-0-2d
</span><span class='line'>Adapter: SMBus I801 adapter at 3000
</span><span class='line'>in0:          +2.51 V  (min =  +0.00 V, max =  +3.32 V)
</span><span class='line'>Vcore:        +1.15 V  (min =  +0.00 V, max =  +2.99 V)
</span><span class='line'>+3.3V:        +3.33 V  (min =  +2.97 V, max =  +3.63 V)
</span><span class='line'>+5V:          +5.00 V  (min =  +4.50 V, max =  +5.50 V)
</span><span class='line'>+12V:        +11.81 V  (min = +10.81 V, max = +13.19 V)
</span><span class='line'>VCC:          +3.35 V  (min =  +2.97 V, max =  +3.63 V)
</span><span class='line'>in6:          +1.55 V  (min =  +0.00 V, max =  +1.99 V)
</span><span class='line'>in7:          +1.77 V  (min =  +0.00 V, max =  +2.39 V)
</span><span class='line'>SIO Temp:     +38.0°C  (low  = -127.0°C, high = +127.0°C)
</span><span class='line'>temp2:        +55.0°C  (low  = -127.0°C, high = +127.0°C)
</span><span class='line'>temp3:        +42.0°C  (low  = -127.0°C, high = +127.0°C)
</span><span class='line'>cpu0_vid:    +2.050 V
</span></code></pre></td></tr></table></div></figure>


<p>以下のように設定ファイル &ldquo;sensors&rdquo; を作成する。（"munin-node" に追記してもよい）</p>

<figure class='code'><figcaption><span>/etc/munin/plugin-conf.d/sensors</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sensors_*<span class="o">]</span>
</span><span class='line'>user root
</span></code></pre></td></tr></table></div></figure>


<p>以下のようにしてシンボリックリンクを張る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># ln -s /usr/share/munin/plugins/sensors_ /etc/munin/plugins/sensors_volt
</span><span class='line'># ln -s /usr/share/munin/plugins/sensors_ /etc/munin/plugins/sensors_temp
</span><span class='line'># ln -s /usr/share/munin/plugins/sensors_ /etc/munin/plugins/sensors_fan
</span></code></pre></td></tr></table></div></figure>


<h3>3. MySQL(MariaDB) の監視追加</h3>

<p>以下のように設定ファイル &ldquo;mysql&rdquo; を作成する。（"munin-node" に追記してもよい）</p>

<figure class='code'><figcaption><span>/etc/munin/plugin-conf.d/mysql</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>mysql*<span class="o">]</span>
</span><span class='line'>env.mysqlopts -u root -p＜root パスワード＞
</span><span class='line'>env.mysqladmin /usr/bin/mysqladmin   <span class="c"># &lt; = mysqladmin フルパス指定</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のようにしてシンボリックリンクを張る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># ln -s /usr/share/munin/plugins/mysql_bytes /etc/munin/plugins/mysql_bytes
</span><span class='line'># ln -s /usr/share/munin/plugins/mysql_innodb /etc/munin/plugins/mysql_innodb
</span><span class='line'># ln -s /usr/share/munin/plugins/mysql_isam_space_ /etc/munin/plugins/mysql_isam_space_  # &lt;= MyISAM 不使用なら不要
</span><span class='line'># ln -s /usr/share/munin/plugins/mysql_queries /etc/munin/plugins/mysql_queries
</span><span class='line'># ln -s /usr/share/munin/plugins/mysql_slowqueries /etc/munin/plugins/mysql_slowqueries
</span><span class='line'># ln -s /usr/share/munin/plugins/mysql_threads /etc/munin/plugins/mysql_threads
</span></code></pre></td></tr></table></div></figure>


<h3>4. Nginx の監視追加</h3>

<p>Nginx の設定ファイル &ldquo;nginx.conf&rdquo; に以下のような記述を追加する。（server ディレクティブ内）</p>

<figure class='code'><figcaption><span>/etc/nginx/conf.d/default.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># munin</span>
</span><span class='line'>    location /nginx_status <span class="o">{</span>
</span><span class='line'>        stub_status on<span class="p">;</span>
</span><span class='line'>        access_log off<span class="p">;</span>
</span><span class='line'>        allow 127.0.0.1<span class="p">;</span>
</span><span class='line'>        deny all<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>【注意】Nginx をソースをビルドしてインストールしている場合は、<code>--with-http_stub_status_module</code> の configure オプションを指定していないといけない。</p>

<p>そして、Nginx を再起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart nginx
</span></code></pre></td></tr></table></div></figure>


<p>以下のように設定ファイル &ldquo;nginx&rdquo; を作成する。（"munin-node" に追記してもよい）</p>

<figure class='code'><figcaption><span>/etc/munin/plugin-conf.d/nginx</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nginx*<span class="o">]</span>
</span><span class='line'>env.url http://localhost/nginx_status
</span></code></pre></td></tr></table></div></figure>


<p>以下のようにしてシンボリックリンクを張る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># ln -s /usr/share/munin/plugins/nginx_request /etc/munin/plugins/nginx_request
</span><span class='line'># ln -s /usr/share/munin/plugins/nginx_status /etc/munin/plugins/nginx_status
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、上記以外のプラグインを使用するなら以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cd /usr/local/share
</span><span class='line'># mkdir munin
</span><span class='line'># cd munin
</span><span class='line'># git clone https://github.com/munin-monitoring/contrib.git
</span><span class='line'># ln -s /usr/local/share/munin/contrib/plugins/nginx/nginx_connection_request /etc/munin/plugins/nginx_connection_request
</span><span class='line'># ln -s /usr/local/share/munin/contrib/plugins/nginx/nginx-combined /etc/munin/plugins/nginx-combined
</span><span class='line'># ln -s /usr/local/share/munin/contrib/plugins/nginx/nginx_memory /etc/munin/plugins/nginx_memory
</span><span class='line'># ln -s /usr/local/share/munin/contrib/plugins/nginx/nginx_vhost_traffic /etc/munin/plugins/nginx_vhost_traffic
</span><span class='line'>etc...
</span></code></pre></td></tr></table></div></figure>


<h3>5. munin-node の再起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl restart munin-node
</span></code></pre></td></tr></table></div></figure>


<h3>6. 動作確認</h3>

<p>ブラウザで <code>http://＜Webサーバのホスト名 or IP アドレス＞/munin</code> にアクセスし、表示されることを確認する。</p>

<hr />

<p>以上。</p>
]]></content>
  </entry>
  
</feed>
