<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mk-mode BLOG]]></title>
  <link href="http://komasaru.github.io/atom.xml" rel="self"/>
  <link href="http://komasaru.github.io/"/>
  <updated>2015-12-20T00:07:18+09:00</updated>
  <id>http://komasaru.github.io/</id>
  <author>
    <name><![CDATA[mk-mode.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CentOS - MySQL 5.7 インストール（ソースビルド）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/20/centos-mysql-57-installation-by-src/"/>
    <updated>2015-12-20T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/20/centos-mysql-57-installation-by-src</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MySQL 5.7 系の最新版をソースをビルドして CentOS 6.7 にインストールする方法についてです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 6.7(32bit) での作業を想定。</li>
<li>搭載メモリは 1GB を想定。</li>
</ul>


<h3>1. 必要パッケージの準備</h3>

<p>以下の必要なパッケージが未インストールならインストールしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum install wget cmake gcc-c++ ncurses-devel zlib-devel
</span></code></pre></td></tr></table></div></figure>


<h3>2. MySQL ユーザ・グループの作成</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># groupadd mysql
</span><span class='line'># useradd -r -g mysql -s /bin/false mysql
</span></code></pre></td></tr></table></div></figure>


<h3>3. ソースの取得</h3>

<p>アーカイブファイルを取得、展開後、ディレクトリを移動しておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cd /usr/local/src/
</span><span class='line'># wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.9.tar.gz
</span><span class='line'># tar zxvf mysql-5.7.9.tar.gz
</span><span class='line'># cd mysql-5.7.9
</span></code></pre></td></tr></table></div></figure>


<h3>4. Makefile の生成</h3>

<p><code>cmake</code> コマンドで Makefile を生成する。（よくある <code>configure</code> コマンドと同様の位置付け）</p>

<p>オプションは、デフォルト値とが異なる値を設定したいものだけを指定する。<br/>
（MySQL 5.7 からは C++ Boost ライブラリが必要なので <code>DOWNLOAD_BOOST</code> と <code>WITH_BOOST</code> は必須）<br/>
※デフォルト値は<a href="http://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html" title="MySQL :: MySQL 5.7 Reference Manual :: 2.9.4 MySQL Source-Configuration Options">こちら</a>を参照。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cmake . \
</span><span class='line'> -DMYSQL_UNIX_ADDR=/var/run/mysqld/mysqld.sock \
</span><span class='line'> -DMYSQL_DATADIR=/var/lib/mysql \
</span><span class='line'> -DDEFAULT_CHARSET=utf8 \
</span><span class='line'> -DDEFAULT_COLLATION=utf8_general_ci \
</span><span class='line'> -DDOWNLOAD_BOOST=1 \
</span><span class='line'> -DWITH_BOOST=/usr/local/mysql
</span></code></pre></td></tr></table></div></figure>


<p><code>cmake</code> が途中で失敗した等の理由で <code>cmake</code> を再実行する場合は、キャッシュをクリアしてから再実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># rm CMakeCache.txt
</span></code></pre></td></tr></table></div></figure>


<h3>5. ビルド</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># make
</span></code></pre></td></tr></table></div></figure>


<p>（時間がかかる）</p>

<h3>6. インストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># make install
</span></code></pre></td></tr></table></div></figure>


<h3>7. 環境変数 PATH の設定</h3>

<figure class='code'><figcaption><span>/etc/bashrc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/local/mysql/bin
</span></code></pre></td></tr></table></div></figure>


<p>そして、即時反映。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># source /etc/bashrc
</span></code></pre></td></tr></table></div></figure>


<h3>8. インストールの確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysqld --version
</span><span class='line'>mysqld  Ver 5.7.9 for Linux on i686 (Source distribution)
</span></code></pre></td></tr></table></div></figure>


<h3>9. 所有者・所有グループの設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cd /usr/local/mysql
</span><span class='line'># chown -R mysql. .
</span></code></pre></td></tr></table></div></figure>


<h3>10. 初期設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># bin/mysqld --initialize --user=mysql
</span><span class='line'># bin/mysql_ssl_rsa_setup
</span><span class='line'># chown -R mysql. /var/lib/mysql
</span></code></pre></td></tr></table></div></figure>


<h3>11. 設定ファイルの編集</h3>

<p>環境に合わせて、 &ldquo;/etc/my.cnf&rdquo; を編集する。（サンプルは &ldquo;/usr/local/mysql/support-files&rdquo; ディレクトリ内にある）<br/>
以下は当方の取り急ぎの例。（実際には、熟考して詳細に設定すること）</p>

<figure class='code'><figcaption><span>/etc/my.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># For advice on how to change settings please see</span>
</span><span class='line'><span class="c"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>mysqld<span class="o">]</span>
</span><span class='line'><span class="c"># ==== Basis</span>
</span><span class='line'>server-id <span class="o">=</span> <span class="m">2</span>  <span class="c"># レプリケーション用 (1 〜 2^32 - 1)</span>
</span><span class='line'><span class="nv">user</span>                   <span class="o">=</span> mysql
</span><span class='line'><span class="nv">datadir</span>                <span class="o">=</span> /var/lib/mysql
</span><span class='line'><span class="nv">socket</span>                 <span class="o">=</span> /var/lib/mysql/mysql.sock
</span><span class='line'>pid-file               <span class="o">=</span> /var/run/mysqld/mysqld.pid
</span><span class='line'>skip_external_locking
</span><span class='line'><span class="nv">sql_mode</span>               <span class="o">=</span> NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
</span><span class='line'><span class="nv">character_set_server</span>   <span class="o">=</span> utf8
</span><span class='line'>collation-server       <span class="o">=</span> utf8_general_ci
</span><span class='line'><span class="nv">default_storage_engine</span> <span class="o">=</span> InnoDB           <span class="c"># Default: InnodDB</span>
</span><span class='line'><span class="nv">lc_messages</span>            <span class="o">=</span> en_US            <span class="c"># Default: en_US</span>
</span><span class='line'><span class="nv">lc_messages_dir</span>        <span class="o">=</span> /usr/share/mysql
</span><span class='line'>
</span><span class='line'><span class="c"># ==== Network, Connection</span>
</span><span class='line'><span class="nv">port</span>                 <span class="o">=</span> 3306
</span><span class='line'><span class="nb">bind</span>-address         <span class="o">=</span> 0.0.0.0  <span class="c"># 127.0.0.1</span>
</span><span class='line'><span class="nv">max_connections</span>      <span class="o">=</span> <span class="m">100</span>      <span class="c"># Default: 151</span>
</span><span class='line'><span class="nv">max_connect_errors</span>   <span class="o">=</span> <span class="m">100</span>      <span class="c"># Default: 100</span>
</span><span class='line'><span class="nv">max_user_connections</span> <span class="o">=</span> <span class="m">0</span>        <span class="c"># Default: 0</span>
</span><span class='line'><span class="nv">wait_timeout</span>         <span class="o">=</span> <span class="m">300</span>      <span class="c"># Default: 28800</span>
</span><span class='line'><span class="nv">interactive_timeout</span>  <span class="o">=</span> <span class="m">3600</span>     <span class="c"># Default: 28800</span>
</span><span class='line'><span class="nv">connect_timeout</span>      <span class="o">=</span> <span class="m">30</span>       <span class="c"># Default: 10</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== Buffer</span>
</span><span class='line'><span class="nv">max_allowed_packet</span>      <span class="o">=</span> 32M   <span class="c"># Default: 1M</span>
</span><span class='line'><span class="nv">thread_cache_size</span>       <span class="o">=</span> <span class="m">40</span>    <span class="c"># Default: 0 (max_connections の 1/3 程度?)</span>
</span><span class='line'><span class="nv">table_open_cache</span>        <span class="o">=</span> <span class="m">400</span>   <span class="c"># Default: 400 (同時接続数 * テーブル数?)</span>
</span><span class='line'><span class="nv">tmp_table_size</span>          <span class="o">=</span> 16M   <span class="c"># Default: System 依存 (for Memory, &lt;= max_heap_table_size)</span>
</span><span class='line'><span class="nv">max_heap_table_size</span>     <span class="o">=</span> 32M   <span class="c"># Default: 16M         (for Memory, &gt;= tmp_table_size)</span>
</span><span class='line'><span class="nv">sort_buffer_size</span>        <span class="o">=</span> 4M    <span class="c"># Default: 2M</span>
</span><span class='line'><span class="nv">read_buffer_size</span>        <span class="o">=</span> 4M    <span class="c"># Default: 128K</span>
</span><span class='line'><span class="nv">read_rnd_buffer_size</span>    <span class="o">=</span> 4M    <span class="c"># Default: 256K</span>
</span><span class='line'><span class="nv">join_buffer_size</span>        <span class="o">=</span> 4M    <span class="c"># Default: 128K</span>
</span><span class='line'><span class="nv">query_cache_size</span>        <span class="o">=</span> 32M   <span class="c"># Default: 0</span>
</span><span class='line'><span class="nv">query_cache_limit</span>       <span class="o">=</span> 16M   <span class="c"># Default: 1M</span>
</span><span class='line'><span class="nv">thread_stack</span>            <span class="o">=</span> 192K  <span class="c"># Default: 192K(32bit), 288K(64bit)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== MyISAM</span>
</span><span class='line'><span class="nv">key_buffer_size</span>         <span class="o">=</span> 8M    <span class="c"># Default: 8M (for MyISAM)</span>
</span><span class='line'><span class="nv">myisam_sort_buffer_size</span> <span class="o">=</span> 8M    <span class="c"># Default: 8M (for MyISAM)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== Binary Log</span>
</span><span class='line'><span class="nv">log_bin</span>          <span class="o">=</span> mysql-bin
</span><span class='line'><span class="nv">expire_logs_days</span> <span class="o">=</span> 10
</span><span class='line'><span class="nv">max_binlog_size</span>  <span class="o">=</span> 100M
</span><span class='line'><span class="nv">binlog_format</span>    <span class="o">=</span> MIXED
</span><span class='line'><span class="nv">log_bin_trust_function_creators</span> <span class="o">=</span> <span class="m">1</span>  <span class="c"># Default: 0 (for TRIGGER)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== InnoDB</span>
</span><span class='line'><span class="nv">innodb_data_file_path</span>           <span class="o">=</span> ibdata1:1G  <span class="c">#:autoextend</span>
</span><span class='line'><span class="nv">innodb_autoextend_increment</span>     <span class="o">=</span> <span class="m">64</span>          <span class="c"># Default: 64</span>
</span><span class='line'><span class="nv">innodb_file_per_table</span>           <span class="o">=</span> 1
</span><span class='line'><span class="nv">innodb_file_format</span>              <span class="o">=</span> Barracuda   <span class="c"># Default: Antelope</span>
</span><span class='line'><span class="nv">innodb_file_format_max</span>          <span class="o">=</span> Barracuda   <span class="c"># Default: Antelope</span>
</span><span class='line'><span class="nv">innodb_large_prefix</span>             <span class="o">=</span> <span class="m">1</span>           <span class="c"># Default: 0</span>
</span><span class='line'><span class="nv">innodb_buffer_pool_size</span>         <span class="o">=</span> 768M        <span class="c"># Default: 128M (innodb_log_files_in_group * innodb_log_file_size &lt; innodb_buffer_pool_size)</span>
</span><span class='line'><span class="c">#innodb_buffer_pool_instances    = 8          # Default: autosized(32bit), 8(64bit) (innodb_buffer_pool_size &gt;= 1G の場合にのみ有効)</span>
</span><span class='line'><span class="nv">innodb_sort_buffer_size</span>         <span class="o">=</span> 2M          <span class="c"># Default: 1M</span>
</span><span class='line'><span class="nv">innodb_write_io_threads</span>         <span class="o">=</span> <span class="m">4</span>           <span class="c"># Default: 4 (1 - 64)</span>
</span><span class='line'><span class="nv">innodb_read_io_threads</span>          <span class="o">=</span> <span class="m">4</span>           <span class="c"># Default: 4 (1 - 64)</span>
</span><span class='line'><span class="nv">innodb_log_buffer_size</span>          <span class="o">=</span> 32M         <span class="c"># Default: 8M</span>
</span><span class='line'><span class="nv">innodb_log_group_home_dir</span>       <span class="o">=</span> /var/lib/mysql
</span><span class='line'><span class="nv">innodb_log_files_in_group</span>       <span class="o">=</span> <span class="m">2</span>           <span class="c"># Default: 2</span>
</span><span class='line'><span class="nv">innodb_log_file_size</span>            <span class="o">=</span> 256M        <span class="c"># Default: 48M (innodb_log_files_in_group * innodb_log_file_size &lt; innodb_buffer_pool_size)</span>
</span><span class='line'><span class="nv">innodb_max_dirty_pages_pct</span>      <span class="o">=</span> <span class="m">90</span>          <span class="c"># Default: 75(%)</span>
</span><span class='line'><span class="nv">innodb_io_capacity</span>              <span class="o">=</span> <span class="m">100</span>         <span class="c"># Default: 200 (100 - 2^64-1)</span>
</span><span class='line'><span class="nv">innodb_io_capacity_max</span>          <span class="o">=</span> <span class="m">200</span>         <span class="c"># Default: 200 (100 - 2^64-1)</span>
</span><span class='line'><span class="nv">innodb_lru_scan_depth</span>           <span class="o">=</span> <span class="m">100</span>         <span class="c"># Default: 1024 (100 - 2^32-1(32bit))</span>
</span><span class='line'><span class="nv">innodb_flush_method</span>             <span class="o">=</span> O_DIRECT    <span class="c"># Default: Not set</span>
</span><span class='line'><span class="nv">innodb_flush_log_at_trx_commit</span>  <span class="o">=</span> <span class="m">1</span>           <span class="c"># Default: 1</span>
</span><span class='line'><span class="nv">innodb_doublewrite</span>              <span class="o">=</span> <span class="m">1</span>           <span class="c"># Default: 1</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== Log</span>
</span><span class='line'><span class="nv">log_output</span>          <span class="o">=</span> FILE  <span class="c"># Default: FILE</span>
</span><span class='line'>log-error           <span class="o">=</span> /var/log/mysql/error.log
</span><span class='line'><span class="c">#general_log_file    = /var/log/mysql/mysql.log  # デバッグ時に有効化</span>
</span><span class='line'><span class="c">#general_log         = 1                         # デバッグ時に有効化</span>
</span><span class='line'><span class="c">#slow_query_log_file = /var/log/mysql/slow.log   # デバッグ時に有効化</span>
</span><span class='line'><span class="c">#slow_query_log      = 1                         # デバッグ時に有効化</span>
</span><span class='line'><span class="c">#long_query_time     = 30                        # デバッグ時に有効化</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ==== Event Scheduler</span>
</span><span class='line'><span class="nv">event_scheduler</span> <span class="o">=</span> <span class="m">1</span>  <span class="c"># Default: 0</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>client<span class="o">]</span>
</span><span class='line'><span class="nv">port</span>   <span class="o">=</span> 3306
</span><span class='line'><span class="nv">socket</span> <span class="o">=</span> /var/lib/mysql/mysql.sock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>mysqld_safe<span class="o">]</span>
</span><span class='line'><span class="nv">socket</span> <span class="o">=</span> /var/lib/mysql/mysql.sock
</span><span class='line'><span class="nv">nice</span>   <span class="o">=</span> 0
</span><span class='line'>
</span><span class='line'><span class="o">[</span>mysqldump<span class="o">]</span>
</span><span class='line'>quick
</span><span class='line'>quote-names
</span><span class='line'><span class="nv">max_allowed_packet</span> <span class="o">=</span> 32M
</span><span class='line'>
</span><span class='line'><span class="o">[</span>mysql<span class="o">]</span>
</span><span class='line'><span class="nv">pager</span><span class="o">=</span><span class="s2">&quot;less -n -i -F -X -E&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>isamchk<span class="o">]</span>
</span><span class='line'><span class="nv">key_buffer</span> <span class="o">=</span> 16M
</span><span class='line'>
</span><span class='line'><span class="o">[</span>myisamchk<span class="o">]</span>
</span><span class='line'><span class="nv">key_buffer_size</span>  <span class="o">=</span> 128M
</span><span class='line'><span class="nv">sort_buffer_size</span> <span class="o">=</span> 128M
</span><span class='line'><span class="nv">read_buffer</span>      <span class="o">=</span> 2M
</span><span class='line'><span class="nv">write_buffer</span>     <span class="o">=</span> 2M
</span><span class='line'>
</span><span class='line'><span class="o">[</span>mysqlhotcopy<span class="o">]</span>
</span><span class='line'>interactive-timeout
</span></code></pre></td></tr></table></div></figure>


<h3>12. PID 用ディレクトリの作成</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mkdir /var/run/mysqld
</span><span class='line'># chown -R mysql. /var/run/mysqld
</span></code></pre></td></tr></table></div></figure>


<h3>13. 起動スクリプトの作成</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cp support-files/mysql.server /etc/rc.d/init.d/mysqld
</span><span class='line'># chown root:root /etc/rc.d/init.d/mysqld
</span><span class='line'># chmod 755 /etc/rc.d/init.d/mysqld
</span></code></pre></td></tr></table></div></figure>


<p>そして、編集する。</p>

<figure class='code'><figcaption><span>/etc/rc.d/init.d/mysqld</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">basedir</span><span class="o">=</span>/usr/local/mysql
</span><span class='line'><span class="nv">datadir</span><span class="o">=</span>/var/lib/mysql
</span></code></pre></td></tr></table></div></figure>


<h3>14. 自動起動の設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># chkconfig --add mysqld
</span><span class='line'># chkconfig mysqld on
</span><span class='line'># chkconfig --list mysqld
</span><span class='line'>mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off
</span></code></pre></td></tr></table></div></figure>


<h3>15. MySQL サーバの起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># /etc/rc.d/init.d/mysqld start
</span></code></pre></td></tr></table></div></figure>


<h3>16. root 初期パスワードの確認</h3>

<p>（記録されているログファイルは環境により異なる）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># grep &#39;temporary password&#39; /var/log/mysql/error.log
</span><span class='line'>2015-11-29T06:05:51.282215Z 1 [Note] A temporary password is generated for root@localhost: wH!Y#&gt;(lQ7aQ
</span></code></pre></td></tr></table></div></figure>


<h3>17. MySQL の安全化</h3>

<p>root パスワードの設定等を行う。（説明は後述）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql_secure_installation
</span><span class='line'>
</span><span class='line'>Securing the MySQL server deployment.
</span><span class='line'>
</span><span class='line'>Enter password for user root:
</span><span class='line'>The &#39;validate_password&#39; plugin is installed on the server.
</span><span class='line'>The subsequent steps will run with the existing configuration
</span><span class='line'>of the plugin.
</span><span class='line'>Using existing password for root.
</span><span class='line'>
</span><span class='line'>Estimated strength of the password: 100
</span><span class='line'>Change the password for root ? ((Press y|Y for Yes, any other key for No) : y
</span><span class='line'>
</span><span class='line'>New password:
</span><span class='line'>
</span><span class='line'>Re-enter new password:
</span><span class='line'>
</span><span class='line'>Estimated strength of the password: 100
</span><span class='line'>Change the password for root ? ((Press y|Y for Yes, any other key for No) : n
</span><span class='line'>
</span><span class='line'> ... skipping.
</span><span class='line'>By default, a MySQL installation has an anonymous user,
</span><span class='line'>allowing anyone to log into MySQL without having to have
</span><span class='line'>a user account created for them. This is intended only for
</span><span class='line'>testing, and to make the installation go a bit smoother.
</span><span class='line'>You should remove them before moving into a production
</span><span class='line'>environment.
</span><span class='line'>
</span><span class='line'>Remove anonymous users? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Normally, root should only be allowed to connect from
</span><span class='line'>&#39;localhost&#39;. This ensures that someone cannot guess at
</span><span class='line'>the root password from the network.
</span><span class='line'>
</span><span class='line'>Disallow root login remotely? (Press y|Y for Yes, any other key for No) : n
</span><span class='line'>
</span><span class='line'> ... skipping.
</span><span class='line'>By default, MySQL comes with a database named &#39;test&#39; that
</span><span class='line'>anyone can access. This is also intended only for testing,
</span><span class='line'>and should be removed before moving into a production
</span><span class='line'>environment.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'> - Dropping test database...
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'> - Removing privileges on test database...
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>Reloading the privilege tables will ensure that all changes
</span><span class='line'>made so far will take effect immediately.
</span><span class='line'>
</span><span class='line'>Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>All done!
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>Enter password for user root:</code> で root の初期パスワードを入力する。</li>
<li><code>New password:</code> で root の新しいパスワードを設定する。<br/>
（パスワードに使用する文字は数字・英小文字・英大文字・記号を混在させること。そうしなければポリシー違反でエラーになる）</li>
<li><code>Re-enter new password:</code> で root の新しいパスワードの確認入力をする。</li>
<li><code>Estimated strength of the password: 100 ...</code> でより強固なパスワードに変更するか問われるが、 <code>n</code> で応答する。（当然 <code>y</code> でもよい）</li>
<li><code>Remove anonymous users?</code> で匿名ユーザを削除するために <code>y</code> で応答する。</li>
<li><code>Disallow root login remotely?</code> で root のリモート接続を拒否するか問われるが、リモート接続したいので <code>n</code> で応答する。（当然 <code>y</code> でもよい）</li>
<li><code>Remove test database and access to it?</code> でテストデータベースを削除するか問われるので、 <code>y</code> で応答する。</li>
<li><code>Reload privilege tables now?</code> で権限テーブルを即時リロードするか問われるので、 <code>y</code> で応答する。</li>
</ol>


<h3>18. 動作確認</h3>

<p>MySQL サーバにログインしてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with ; or \g.
</span><span class='line'>Your MySQL connection id is 10
</span><span class='line'>Server version: 5.7.9-log Source distribution
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt;
</span></code></pre></td></tr></table></div></figure>


<p>その他、各種操作を試してみる。</p>

<h3>19. その他</h3>

<ul>
<li>設定ファイルは &ldquo;/etc/my.cnf&rdquo; なので、実際に運用する際には綿密に検討して設定する。</li>
<li>パスワードの有効期限がデフォルトでは「360 日」に設定されている。<br/>
必要なら、システム変数 <code>default_password_lifetime</code> を編集する。</li>
</ul>


<h3>20. 参考サイト</h3>

<ul>
<li><a href="http://dev.mysql.com/doc/refman/5.7/en/source-installation.html" title="MySQL :: MySQL 5.7 Reference Manual :: 2.9 Installing MySQL from Source">MySQL :: MySQL 5.7 Reference Manual :: 2.9 Installing MySQL from Source</a></li>
</ul>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 7.1 - DB サーバ MySQL 5.7 構築（公式リポジトリ使用）！]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/16/centos-mysql-57-installation-by-yum/"/>
    <updated>2015-12-16T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/16/centos-mysql-57-installation-by-yum</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MySQL 5.7 系の最新版を公式リポジトリを使用して CentOS 7.1 にインストールする方法についてです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 7.1-1503(x86_64) での作業を想定。（CentOS 6 系、5系でも同様（起動方法、自動起動設定、ファイアウォール設定以外は））</li>
<li>当記事執筆時点で最新の MySQL 5.7.9 をインストールする。</li>
<li>環境の相違によっては以下のとおりにならないかもしれないので、適宜対応する。</li>
</ul>


<h3>1. Yum リポジトリの追加</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># rpm -Uvh http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
</span></code></pre></td></tr></table></div></figure>


<h3>2. リポジトリ有効・無効の設定</h3>

<p>まず、どんな種類があるのかを確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum repolist all | grep mysql
</span><span class='line'>mysql-connectors-community/x86_64 MySQL Connectors Community     有効:      13+4
</span><span class='line'>mysql-connectors-community-source MySQL Connectors Community - S 無効
</span><span class='line'>mysql-tools-community/x86_64      MySQL Tools Community          有効:        27
</span><span class='line'>mysql-tools-community-source      MySQL Tools Community - Source 無効
</span><span class='line'>mysql55-community/x86_64          MySQL 5.5 Community Server     無効
</span><span class='line'>mysql55-community-source          MySQL 5.5 Community Server - S 無効
</span><span class='line'>mysql56-community/x86_64          MySQL 5.6 Community Server     無効
</span><span class='line'>mysql56-community-source          MySQL 5.6 Community Server - S 無効
</span><span class='line'>mysql57-community/x86_64          MySQL 5.7 Community Server     有効:        20
</span><span class='line'>mysql57-community-source          MySQL 5.7 Community Server - S 無効
</span></code></pre></td></tr></table></div></figure>


<p>今回は MySQL 5.7 Community Server を使用したいので、<code>mysql57-community/x86_64</code> が <code>有効</code> であることを確認する。</p>

<p><code>無効</code> の場合は、 &ldquo;/etc/yum.repos.d/mysql-community.repo&rdquo; 内 <code>[mysql57-community]</code> の <code>enabled</code> の値を <code>0</code> から <code>1</code> に変更する。<br/>
さらに、今回使用したいバージョン以外の MySQL Community Server が <code>有効</code> になっていれば、無効（<code>enabled=0</code>）に変更しておく。</p>

<figure class='code'><figcaption><span>/etc/yum.repos.d/mysql-community.repo</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[mysql57-community]
</span><span class='line'>name=MySQL 5.7 Community Server
</span><span class='line'>baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
</span></code></pre></td></tr></table></div></figure>


<p>そして、有効になったか確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum repolist enabled | grep mysql
</span><span class='line'>mysql-connectors-community/x86_64 MySQL Connectors Community                13+4
</span><span class='line'>mysql-tools-community/x86_64      MySQL Tools Community                       27
</span><span class='line'>mysql57-community/x86_64          MySQL 5.7 Community Server                  20
</span></code></pre></td></tr></table></div></figure>


<h3>3. MySQL のインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum -y install mysql-community-server
</span><span class='line'>
</span><span class='line'># mysqld --version   # &lt;= サーバのバージョン
</span><span class='line'>mysqld  Ver 5.7.9 for Linux on x86_64 (MySQL Community Server (GPL))
</span><span class='line'>
</span><span class='line'># mysql --version    # &lt;= クライアントのバージョン
</span><span class='line'>mysql  Ver 14.14 Distrib 5.7.9, for Linux (x86_64) using  EditLine wrapper
</span></code></pre></td></tr></table></div></figure>


<h3>4. MySQL サーバの起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl start mysqld
</span><span class='line'>
</span><span class='line'># systemctl status mysqld
</span><span class='line'>mysqld.service - MySQL Server
</span><span class='line'>   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled)
</span><span class='line'>   Active: active (running) since 日 2015-11-08 23:03:02 JST; 8s ago
</span><span class='line'>  Process: 1843 ExecStart=/usr/sbin/mysqld --daemonize $MYSQLD_OPTS (code=exited, status=0/SUCCESS)
</span><span class='line'>  Process: 1772 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)
</span><span class='line'> Main PID: 1847 (mysqld)
</span><span class='line'>   CGroup: /system.slice/mysqld.service
</span><span class='line'>           └─1847 /usr/sbin/mysqld --daemonize
</span><span class='line'>
</span><span class='line'>11月 08 23:02:53 vbox.mk-mode.com systemd[1]: Starting MySQL Server...
</span><span class='line'>11月 08 23:03:02 vbox.mk-mode.com systemd[1]: Started MySQL Server.
</span><span class='line'>Hint: Some lines were ellipsized, use -l to show in full.
</span></code></pre></td></tr></table></div></figure>


<h3>5. MySQL 自動起動の設定</h3>

<p>デフォルトでマシン起動時に MySQL サーバが自動で起動するようになっているが、なっていなければ以下のように設定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl enable mysqld
</span><span class='line'>
</span><span class='line'># systemctl list-unit-files -t service | grep mysqld
</span><span class='line'>mysqld.service                            enabled  # &lt;= enabled であることを確認
</span></code></pre></td></tr></table></div></figure>


<h3>6. root 初期パスワードの確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># grep &#39;temporary password&#39; /var/log/mysqld.log
</span><span class='line'>2015-11-08T14:02:55.559389Z 1 [Note] A temporary password is generated for root@localhost: &amp;d-sa*dv/7Ct
</span></code></pre></td></tr></table></div></figure>


<h3>7. MySQL の安全化</h3>

<p>root パスワードの設定等を行う。（説明は後述）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql_secure_installation
</span><span class='line'>
</span><span class='line'>Securing the MySQL server deployment.
</span><span class='line'>
</span><span class='line'>Enter password for user root:
</span><span class='line'>
</span><span class='line'>The existing password for the user account root has expired. Please set a new password.
</span><span class='line'>
</span><span class='line'>New password:
</span><span class='line'>
</span><span class='line'>Re-enter new password:
</span><span class='line'>The &#39;validate_password&#39; plugin is installed on the server.
</span><span class='line'>The subsequent steps will run with the existing configuration
</span><span class='line'>of the plugin.
</span><span class='line'>Using existing password for root.
</span><span class='line'>
</span><span class='line'>Estimated strength of the password: 100
</span><span class='line'>Change the password for root ? ((Press y|Y for Yes, any other key for No) : n
</span><span class='line'>
</span><span class='line'> ... skipping.
</span><span class='line'>By default, a MySQL installation has an anonymous user,
</span><span class='line'>allowing anyone to log into MySQL without having to have
</span><span class='line'>a user account created for them. This is intended only for
</span><span class='line'>testing, and to make the installation go a bit smoother.
</span><span class='line'>You should remove them before moving into a production
</span><span class='line'>environment.
</span><span class='line'>
</span><span class='line'>Remove anonymous users? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Normally, root should only be allowed to connect from
</span><span class='line'>&#39;localhost&#39;. This ensures that someone cannot guess at
</span><span class='line'>the root password from the network.
</span><span class='line'>
</span><span class='line'>Disallow root login remotely? (Press y|Y for Yes, any other key for No) : n
</span><span class='line'>
</span><span class='line'> ... skipping.
</span><span class='line'>By default, MySQL comes with a database named &#39;test&#39; that
</span><span class='line'>anyone can access. This is also intended only for testing,
</span><span class='line'>and should be removed before moving into a production
</span><span class='line'>environment.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'> - Dropping test database...
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'> - Removing privileges on test database...
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>Reloading the privilege tables will ensure that all changes
</span><span class='line'>made so far will take effect immediately.
</span><span class='line'>
</span><span class='line'>Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y
</span><span class='line'>Success.
</span><span class='line'>
</span><span class='line'>All done!
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>Enter password for user root:</code> で root の初期パスワードを入力する。</li>
<li><code>New password:</code> で root の新しいパスワードを設定する。<br/>
（パスワードに使用する文字は数字・英小文字・英大文字・記号を混在させること。そうしなければポリシー違反でエラーになる）</li>
<li><code>Re-enter new password:</code> で root の新しいパスワードの確認入力をする。</li>
<li><code>Estimated strength of the password: 100 ...</code> でより強固なパスワードに変更するか問われるが、 <code>n</code> で応答する。（当然 <code>y</code> でもよい）</li>
<li><code>Remove anonymous users?</code> で匿名ユーザを削除するために <code>y</code> で応答する。</li>
<li><code>Disallow root login remotely?</code> で root のリモート接続を拒否するか問われるが、リモート接続したいので <code>n</code> で応答する。（当然 <code>y</code> でもよい）</li>
<li><code>Remove test database and access to it?</code> でテストデータベースを削除するか問われるので、 <code>y</code> で応答する。</li>
<li><code>Reload privilege tables now?</code> で権限テーブルを即時リロードするか問われるので、 <code>y</code> で応答する。</li>
</ol>


<h3>8. ファイアウォール設定</h3>

<p>ポート TCP:3306 を開放する。（ローカルネット内の別マシンからのアクセスが必要な場合）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># firewall-cmd --add-port=3306/tcp
</span><span class='line'>success
</span><span class='line'># firewall-cmd --list-ports
</span><span class='line'>110/tcp 465/tcp 3306/tcp 4000-4005/tcp
</span></code></pre></td></tr></table></div></figure>


<h3>9. 動作確認</h3>

<p>MariaDB サーバにログインしてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with ; or \g.
</span><span class='line'>Your MySQL connection id is 10
</span><span class='line'>Server version: 5.7.9 MySQL Community Server (GPL)
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>10. その他</h3>

<ul>
<li>設定ファイルは &ldquo;/etc/my.cnf&rdquo; なので、実際に運用する際には綿密に検討して設定する。</li>
<li>パスワードの有効期限がデフォルトでは「360 日」に設定されている。<br/>
必要なら、システム変数 <code>default_password_lifetime</code> を編集する。</li>
</ul>


<h3>参考サイト</h3>

<ul>
<li><a href="http://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/" title="MySQL :: A Quick Guide to Using the MySQL Yum Repository">MySQL :: A Quick Guide to Using the MySQL Yum Repository</a></li>
<li><a href="http://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html" title="MySQL :: MySQL 5.7 Reference Manual :: 5.1.4 Server System Variables">MySQL :: MySQL 5.7 Reference Manual :: 5.1.4 Server System Variables</a></li>
</ul>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS - Web/Proxy サーバ Nginx の最新版を yum インストール！]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/12/centos-nginx-installation-by-yum/"/>
    <updated>2015-12-12T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/12/centos-nginx-installation-by-yum</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Debian GNU/Linux や Linux Mint への公式 Apt を使用した Nginx のインストールは記録として残していましたが、 CentOS への公式 yum を使用したインストールについて記録として残してなかったので、今回記録しておくことにしました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 7.1-1503(x86_64) での作業を想定。（CentOS 6 系、5系でも同様（起動方法、自動起動設定、ファイアウォール設定以外は））</li>
</ul>


<h3>1. yum リポジトリの登録</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
</span></code></pre></td></tr></table></div></figure>


<p>以下のようなリポジトリ設定ファイルが作成される。<br/>
（上記を実行せず、直接以下のようなファイルを作成してもよい）</p>

<figure class='code'><figcaption><span>/etc/yum.repos.d/nginx.repo</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># nginx.repo</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>nginx<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>nginx repo
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://nginx.org/packages/OS/OSRELEASE/<span class="nv">$basearch</span>/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<h3>2. Nginx のインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum -y install nginx
</span></code></pre></td></tr></table></div></figure>


<h3>3. Ngins インストールの確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># nginx -v
</span><span class='line'>nginx version: nginx/1.8.0
</span></code></pre></td></tr></table></div></figure>


<h3>4. Nginx 設定ファイルの編集</h3>

<p>Nginx 設定ファイルが &ldquo;/etc/nginx&rdquo; ディレクトリ内にあるので、必要に応じて編集する。<br/>
（取り急ぎ、今回は編集しない）</p>

<h3>5. Nginx の起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl start nginx
</span></code></pre></td></tr></table></div></figure>


<h3>6. Nginx 自動起動の設定</h3>

<p>マシン起動時に Nginx が自動で起動するようにしたければ以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># systemctl enable nginx
</span><span class='line'>systemctl list-unit-files -t service | grep nginx
</span><span class='line'>
</span><span class='line'># systemctl list-unit-files -t service | grep nginx
</span><span class='line'>nginx.service                             enabled  # &lt;= enabled であることを確認
</span></code></pre></td></tr></table></div></figure>


<h3>7. ファイアウォールの設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># firewall-cmd --add-service=http
</span><span class='line'>success
</span><span class='line'># firewall-cmd --add-service=http --permanent
</span><span class='line'>success
</span><span class='line'># firewall-cmd --list-services
</span><span class='line'>dhcpv6-client dns ftp http nfs pop3s smtp ssh
</span></code></pre></td></tr></table></div></figure>


<h3>8. 動作確認</h3>

<p>ブラウザで <code>http://＜サーバ名＞/</code> にアクセスしてみ &ldquo;Welcome to nginx! &hellip;&rdquo; と表示されればよい。</p>

<h3>9. 参考サイト</h3>

<ul>
<li><a href="http://nginx.org/en/linux_packages.html" title="nginx - Linux packages">nginx - Linux packages</a></li>
</ul>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - マシン起動時にディレクトリ・ファイルを自動作成！]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/08/linux-dir-file-automatic-creation-on-boot/"/>
    <updated>2015-12-08T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/08/linux-dir-file-automatic-creation-on-boot</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux で、マシン起動時に自動でディレクトリやファイルを作成する方法についての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 6.7(i386) での作業を想定。（他の Linux ディストリビューションでも同様のはず）</li>
</ul>


<h3>1. はじめに</h3>

<ul>
<li>今回の作業は、 <code>/etc/tmpfiles.d/*.conf</code> ファイルを作成することで実現する。
（環境によっては、 <code>/run/tmpfiles.d/*.conf</code>, <code>/usr/lib/tmpfiles.d/*.conf</code> ファイル）</li>
<li><code>/etc/tmpfiles.d/*.conf</code> ファイル内の書式は以下のとおり。（詳細は「<a href="http://www.unix.com/man-page/centos/5/tmpfiles.d/" title="CentOS 7.0 - man page for tmpfiles.d (centos section 5) - Unix &amp; Linux Commands">参考サイト</a>」参照<br/>
<code>Type Path Mode UID GID Age Argument</code></li>
</ul>


<h3>2. 作成例</h3>

<p>当方が使用する頻度が高いもののみについて、作成例を挙げる。</p>

<h4>2-1. ディレクトリが存在しなければ作成する例</h4>

<p>「ディレクトリ：/tmp/test_dir, パーミッション：1777, 所有者：root, グループ：root, 有効期限：５日」でディレクトリを作成する例。</p>

<figure class='code'><figcaption><span>/etc/tmpfiles.d/test_1.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>d /tmp/test_dir <span class="m">1777</span> root root 5d
</span></code></pre></td></tr></table></div></figure>


<h4>2-2. ディレクトリが存在しなければ作成し、存在していれば空にする例</h4>

<p>「ディレクトリ：/home/foo/test_dir, パーミッション：0755, 所有者：root, グループ：root, 有効期限：無限」でディレクトリを作成する例。</p>

<figure class='code'><figcaption><span>/etc/tmpfiles.d/test_2.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>D /home/foo/test_dir <span class="m">0755</span> root root -
</span></code></pre></td></tr></table></div></figure>


<h4>2-3. ファイルが存在しなければ作成する例</h4>

<p>「ファイル：/home/foo/test.txt, パーミッション：0777, 所有者：root, グループ：root, 有効期限：無限、ファイル内容：空」でファイルを作成する例。</p>

<figure class='code'><figcaption><span>/etc/tmpfiles.d/test_3.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>f /home/foo/test.txt <span class="m">0777</span> root root -
</span></code></pre></td></tr></table></div></figure>


<h4>2-4. ファイルが存在しなければ作成し、存在していれば空にする例</h4>

<p>「ファイル：/home/foo/test.txt, パーミッション：0777, 所有者：root, グループ：root, 有効期限：無限、ファイル内容："This is a tmpfiles.d test!&ldquo;」でファイルを作成する例。</p>

<figure class='code'><figcaption><span>/etc/tmpfiles.d/test_4.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>F /home/foo/test.txt <span class="m">0777</span> root root - <span class="s2">&quot;This is a tmpfiles.d test!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. 参考サイト</h3>

<ul>
<li><a href="http://www.unix.com/man-page/centos/5/tmpfiles.d/" title="CentOS 7.0 - man page for tmpfiles.d (centos section 5) - Unix &amp; Linux Commands">CentOS 7.0 - man page for tmpfiles.d (centos section 5) - Unix &amp; Linux Commands</a></li>
</ul>


<hr />

<p>意外とよく使用する機能だけど、使用方法について説明しているサイトがあまりないので、備忘録として残しておいた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB(MySQL) - ロールフォワード（ポイント・イン・タイム）リカバリ！]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/03/mariadb-rollforward-recovery/"/>
    <updated>2015-12-03T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/03/mariadb-rollforward-recovery</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MariaDB(MySQL) で障害発生時に、定期的に取得していたダンプファイルでリストアするだけでは、当然タイミングによっては古い状態になってしまいます。</p>

<p>以下は、定期的に取得していたダンプファイルとそれより後のログファイルで障害発生直前の状態までリカバリする方法についての記録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>MySQL 5.6 系、 MariaDB 10.0 系での作業を想定。<br/>
（他のバージョンでもそれほど古くなければ同様）</li>
<li>バイナリロギングが有効になっている。
（設定ファイル &ldquo;my.cnf&rdquo; で <code>log-bin=...</code> の行がコメント化されていない、もしくはサーバ起動時に <code>--log-bin</code> オプションを使用している）</li>
</ul>


<h3>1. はじめに</h3>

<ul>
<li>ロールフォワードリカバリとは、簡単には、

<ul>
<li>バックアップファイルとジャーナルファイルを用いて、障害発生以前の状態に復元すること。（某国家試験で出題される基本的なこと）<br/>
今回の MariaDB(MySQL) での作業では、ダンプファイルとバイナリログファイルがそれにあたる。</li>
</ul>
</li>
<li>ポイント・イン・タイムリカバリ(Point-In-Time Recovery, PITR)とは、簡単には、

<ul>
<li>指定した時間の状態に戻すこと。</li>
<li>障害が発生する直前の状態まで戻すこと。</li>
<li>Oracle の「完全・不完全リカバリ」にあたるもの。</li>
</ul>
</li>
</ul>


<h3>2. 基本的な作業の流れ</h3>

<ol>
<li>ダンプ出力（<code>mysqldump</code> による定期バックアップ）</li>
<li>通常運用</li>
<li>障害発生</li>
<li>ダンプファイルのリストア</li>
<li>バイナリログの適用（ダンプリストア後〜障害発生直前）</li>
<li>復元確認</li>
</ol>


<h3>3. 作業例</h3>

<p>当然ながら、当作業中は整合性を保つためにデータベースサーバへのアクセスが発生しないようにしておくこと。（アプリの停止、Web サーバの停止等）</p>

<h4>3-1. ダンプ出力（<code>mysqldump</code> による定期バックアップ）</h4>

<p>以下のようなコマンドを cron 実行するなどして、定期的にバックアップを取る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>mysqldump -u root -proot_password --single-transaction --master-data --flush-logs db_name &gt; db_name.sql
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>--single-transaction</code> は、データの整合性を保つためにダンプをトランザクションで囲むオプション。</li>
<li><code>--master-data</code> は、<code>CHANGE MASTER TO</code> 句（ポイント・イン・タイムリカバリを開始するバイナリファイル・ポイントの情報）を出力するオプション。</li>
<li><code>--flush-logs</code> は、ダンプ出力後にバイナリログを新しく作成（フラッシュ）するオプション。 <code>-F</code> も同じ。</li>
<li><code>--flush-logs</code> オプションを使用した場合は、ポイント・イン・タイムリカバリを開始するポイントは新しいバイナリファイルの先頭ポイントなので、 <code>--master-data</code> オプションを使用する不要はないかもしれない。</li>
<li><code>--master-logs</code> オプションを使用した場合は、ポイント・イン・タイムリカバリを開始するポイントが明確に分かるので、敢えて <code>--flush-logs</code> オプションを使用する必要はないかもしれない。</li>
<li>場合によっては、 <code>--quote-names</code>（or <code>-Q</code>）, <code>--skip-lock-tables</code> 等のオプションも使用。</li>
<li>場合によっては、 <code>--all-databases</code>（or <code>-A</code>）オプションで全 DB をダンプ出力してもよいだろう。</li>
</ul>


<h4>3-2. 通常運用</h4>

<p>当然ながら、ダンプ出力後も通常どおり運用されている。(INSERT, UPDATE, DELETE etc.)</p>

<h4>3-3. 障害発生</h4>

<p>通常運用時に何らかの障害が発生する。（今回は、人為的なミスで１テーブルを <code>DROP</code> してしまったことを想定）</p>

<h4>3-4. ダンプファイルのリストア</h4>

<p>障害発生時には、まず定期的に取っていたダンプファイルを使用してリストアする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysql -u root -p db_name &lt; db_name.sql
</span></code></pre></td></tr></table></div></figure>


<h4>3-5. バイナリログの適用（ダンプリストア後〜障害発生直前）</h4>

<p>まず、ダンプファイルからポイント・イン・タイムリカバリを開始するバイナリログファイル・ポイントを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># cat /path/to/db_name.sql | CHANGE
</span><span class='line'>CHANGE MASTER TO MASTER_LOG_FILE=&#39;mysql-bin.004962&#39;, MASTER_LOG_POS=365;
</span></code></pre></td></tr></table></div></figure>


<p>この例では、バイナリログファイル &ldquo;mysql-bin.004962&rdquo; の ポイント &ldquo;365&rdquo; より前まではダンプファイルでリストアできているということ。</p>

<p>次に、障害が発生したポイントを最新のバイナリログから検索する。</p>

<p>以下は、誤ってテーブル test_table を DROP してしまった場合にそのポイントを検索する例。<br/>
該当行より３行くらい前にポイントが記載されているので、 <code>grep</code> コマンドに <code>-B 3</code> オプションを使用している。<br/>
また、 &ldquo;my.cnf&rdquo; の <code>[client]</code> に <code>default-character-set</code> が存在すると <code>unknown variable</code> エラーが発生するため、<code>--no-defaults</code> オプションを使用している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysqlbinlog --nodefaults --database=db_name /path/to/mysql-bin.004962 | grep -B 3 DROP
</span><span class='line'># at 10923096
</span><span class='line'>#151029 11:15:17 server id 1  end_log_pos 10923228      Query   thread_id=1124470       exec_time=0     error_code=0
</span><span class='line'>SET TIMESTAMP=1446084917/*!*/;
</span><span class='line'>DROP TABLE test_table
</span></code></pre></td></tr></table></div></figure>


<p>この場合、ポイントは <code>10923096</code> であるということ。</p>

<p>いよいよ、バイナリログを適用する。<br/>
以下は、バイナリログファイル &ldquo;mysql-bin.004962&rdquo; の先頭ポイントからポイント &ldquo;10923096&rdquo; の <code>--database</code> オプションで指定したデータベースのバイナリログを適用する例。
（<code>--disable-log-bin</code>（or <code>-D</code>） オプションはバイナリログの出力を無効にするオプション。バイナリログ適用時にまでバイナリログを出力する必要はないので）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysqlbinlog --database=db_name --disable-log-bin --stop-position=10923096 /path/to/mysql-bin.004962 | mysql -u root -p
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、ダンプ出力後のバイナリログファイルが複数ある場合は以下のように並べて記載する。<br/>
この場合、<code>--stop-position</code> オプションは最後のバイナリログファイルに対してのみ有効。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mysqlbinlog --database=db_name --disable-log-bin --stop-position=10923096 /path/to/mysql-bin.004960 /path/to/mysql-bin.004962 | mysql -u root -proot_password
</span></code></pre></td></tr></table></div></figure>


<p>仮にダンプ出力時に <code>--flush-logs</code> オプションを指定していなかった場合は開始ポイントが明確でないため、明示的に <code>--start-position</code> オプションで指定する必要がある。（バイナリログファイルが複数ある場合は <code>--start-position</code> は最初のバイナリログファイルに対してのみ有効）</p>

<h4>3-6. 復元確認</h4>

<p>後は、正常に復元されたか確認するだけ。</p>

<h3>4. その他＆注意事項</h3>

<ul>
<li>今回はポジションを意識したリカバリを行なったが、状況によっては日付を意識したリカバリも可能。（<code>--start-datatime</code>, <code>--stop-datetim</code> オプションを使用）</li>
<li><code>mysqlbinlog</code> コマンドでバイナリログファイルを複数指定する際は、一度に全て指定すること。（１ファイルずつ複数に分けて実行しない）</li>
<li>バイナリログファイルが複数存在する場合は、１つにマージしてから <code>mysqlbinlog</code> を実行してもよい。</li>
<li><code>mysqlbinlog ... binlog | mysql -u root -p</code> のようにパイプを使用せず、 <code>mysqlbinlog ... binlog &gt; statements.sql</code> 実行後に <code>mysql -u root -p &lt; statements.sql</code> を実行してもよい。</li>
</ul>


<h3>5. 参考サイト</h3>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.6/ja/point-in-time-recovery.html" title="MySQL :: MySQL 5.6 リファレンスマニュアル :: 7.5 バイナリログを使用したポイントインタイム (増分) リカバリ">MySQL :: MySQL 5.6 リファレンスマニュアル :: 7.5 バイナリログを使用したポイントインタイム (増分) リカバリ</a></li>
</ul>


<hr />

<p>有事の際にしか行わない作業なので、記録として残しておいた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年11月 - OS・ブラウザ別アクセス状況！【自動集計】]]></title>
    <link href="http://komasaru.github.io/blog/2015/12/01/blog-access/"/>
    <updated>2015-12-01T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/12/01/blog-access</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>12月になりましたので、先月11月分の当ブログアクセス状況を公開します。</p>

<!--more-->


<h4>1. アクセスをOS別に集計</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td class="blog-access-pv">31,101</td>
    <td class="blog-access-rate">59.6262</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td class="blog-access-pv">17,286</td>
    <td class="blog-access-rate">33.1403</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td class="blog-access-pv">1,930</td>
    <td class="blog-access-rate">3.7002</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td class="blog-access-pv">1,416</td>
    <td class="blog-access-rate">2.7147</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">222</td>
    <td class="blog-access-rate">0.4256</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td class="blog-access-pv">101</td>
    <td class="blog-access-rate">0.1936</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td class="blog-access-pv">39</td>
    <td class="blog-access-rate">0.0748</td>
  </tr>
  <tr>
    <td>Android</td>
    <td class="blog-access-pv">22</td>
    <td class="blog-access-rate">0.0422</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td class="blog-access-pv">19</td>
    <td class="blog-access-rate">0.0364</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0211</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0096</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0096</td>
  </tr>
  <tr>
    <td>Debian GNU/Linux</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0038</td>
  </tr>
  <tr>
    <td>OpenBSD</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0019</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">52,160</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>2. アクセスをOS・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td>X</td>
    <td class="blog-access-pv">31,101</td>
    <td class="blog-access-rate">59.6262</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>NT</td>
    <td class="blog-access-pv">14,839</td>
    <td class="blog-access-rate">28.4490</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">1,905</td>
    <td class="blog-access-rate">3.6522</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">1,408</td>
    <td class="blog-access-rate">2.6994</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7</td>
    <td class="blog-access-pv">1,170</td>
    <td class="blog-access-rate">2.2431</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7 64 bit</td>
    <td class="blog-access-pv">688</td>
    <td class="blog-access-rate">1.3190</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>XP</td>
    <td class="blog-access-pv">334</td>
    <td class="blog-access-rate">0.6403</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td>unknown</td>
    <td class="blog-access-pv">222</td>
    <td class="blog-access-rate">0.4256</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista</td>
    <td class="blog-access-pv">176</td>
    <td class="blog-access-rate">0.3374</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">96</td>
    <td class="blog-access-rate">0.1840</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8 64 bit</td>
    <td class="blog-access-pv">46</td>
    <td class="blog-access-rate">0.0882</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>unknown</td>
    <td class="blog-access-pv">39</td>
    <td class="blog-access-rate">0.0748</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Server 2003</td>
    <td class="blog-access-pv">15</td>
    <td class="blog-access-rate">0.0288</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>64 bit</td>
    <td class="blog-access-pv">14</td>
    <td class="blog-access-rate">0.0268</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8</td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0211</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td></td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0211</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>2.3.4</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0153</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td></td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0134</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td>4_3_2</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0134</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td>3.6.24-3.el6.centos 64 bit</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0134</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">52,160</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>3. アクセスをブラウザ別に集計</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td class="blog-access-pv">30,009</td>
    <td class="blog-access-rate">57.5326</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td class="blog-access-pv">12,257</td>
    <td class="blog-access-rate">23.4988</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td class="blog-access-pv">6,115</td>
    <td class="blog-access-rate">11.7235</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td class="blog-access-pv">2,810</td>
    <td class="blog-access-rate">5.3873</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td class="blog-access-pv">557</td>
    <td class="blog-access-rate">1.0679</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td class="blog-access-pv">182</td>
    <td class="blog-access-rate">0.3489</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td class="blog-access-pv">134</td>
    <td class="blog-access-rate">0.2569</td>
  </tr>
  <tr>
    <td>Chrome</td>
    <td class="blog-access-pv">26</td>
    <td class="blog-access-rate">0.0498</td>
  </tr>
  <tr>
    <td>Mozilla SeaMonkey</td>
    <td class="blog-access-pv">23</td>
    <td class="blog-access-rate">0.0441</td>
  </tr>
  <tr>
    <td>iPhone</td>
    <td class="blog-access-pv">19</td>
    <td class="blog-access-rate">0.0364</td>
  </tr>
  <tr>
    <td>PHP</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0134</td>
  </tr>
  <tr>
    <td>Epiphany</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0134</td>
  </tr>
  <tr>
    <td>Konqueror</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0096</td>
  </tr>
  <tr>
    <td>SRWare Iron</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0077</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0077</td>
  </tr>
  <tr>
    <td>Sleipnir</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0019</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">52,160</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>4. アクセスをブラウザ・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.36</td>
    <td class="blog-access-pv">22,541</td>
    <td class="blog-access-rate">43.2151</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>42.0</td>
    <td class="blog-access-pv">7,269</td>
    <td class="blog-access-rate">13.9360</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td>11.0</td>
    <td class="blog-access-pv">6,111</td>
    <td class="blog-access-rate">11.7159</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>9537.53</td>
    <td class="blog-access-pv">2,724</td>
    <td class="blog-access-rate">5.2224</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>41.0</td>
    <td class="blog-access-pv">2,378</td>
    <td class="blog-access-rate">4.5590</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.1</td>
    <td class="blog-access-pv">1,299</td>
    <td class="blog-access-rate">2.4904</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.2.7</td>
    <td class="blog-access-pv">1,293</td>
    <td class="blog-access-rate">2.4789</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>38.0</td>
    <td class="blog-access-pv">1,151</td>
    <td class="blog-access-rate">2.2067</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>8.0</td>
    <td class="blog-access-pv">1,007</td>
    <td class="blog-access-rate">1.9306</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.1.4</td>
    <td class="blog-access-pv">806</td>
    <td class="blog-access-rate">1.5452</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>10.0</td>
    <td class="blog-access-pv">688</td>
    <td class="blog-access-rate">1.3190</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>9.0</td>
    <td class="blog-access-pv">623</td>
    <td class="blog-access-rate">1.1944</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>7.0</td>
    <td class="blog-access-pv">467</td>
    <td class="blog-access-rate">0.8953</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>534.30</td>
    <td class="blog-access-pv">291</td>
    <td class="blog-access-rate">0.5579</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>38.4.0</td>
    <td class="blog-access-pv">290</td>
    <td class="blog-access-rate">0.5560</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>31.0</td>
    <td class="blog-access-pv">234</td>
    <td class="blog-access-rate">0.4486</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td>9.80</td>
    <td class="blog-access-pv">178</td>
    <td class="blog-access-rate">0.3413</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.86.2</td>
    <td class="blog-access-pv">149</td>
    <td class="blog-access-rate">0.2857</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>40.0</td>
    <td class="blog-access-pv">146</td>
    <td class="blog-access-rate">0.2799</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td>5.0</td>
    <td class="blog-access-pv">134</td>
    <td class="blog-access-rate">0.2569</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">52,160</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - MTU 最適値の導出！]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/26/linux-mtu-best-effort/"/>
    <updated>2015-11-26T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/26/linux-mtu-best-effort</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux で最適な MTU 値を導出する方法についての備忘録です。</p>

<!--more-->


<h3>1. MTU について</h3>

<p>MTU とは Maximum Transmission Unit の略で、ネットワーク上において１フレーム（１回の転送）で送信可能な IP パケットの最大サイズのこと。<br/>
（このサイズは IP ヘッダ ＋ ICMP ヘッダ ＋ データのサイズ）</p>

<h3>2. MTU 現在値の確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ifconfig
</span><span class='line'>ifconfig
</span><span class='line'>eth0      Link encap:イーサネット  ハードウェアアドレス XX:XX:XX:XX:XX:XX
</span><span class='line'>          inetアドレス:192.168.XXX.XXX  ブロードキャスト:192.168.XXX.255  マスク:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  メトリック:1
</span><span class='line'>          RXパケット:49793411 エラー:0 損失:0 オーバラン:0 フレーム:0
</span><span class='line'>          TXパケット:30012458 エラー:0 損失:0 オーバラン:0 キャリア:0
</span><span class='line'>          衝突(Collisions):0 TXキュー長:1000
</span><span class='line'>          RXバイト:23207684202 (23.2 GB)  TXバイト:21221894153 (21.2 GB)
</span><span class='line'>          割り込み:17
</span><span class='line'>
</span><span class='line'>lo        Link encap:ローカルループバック
</span><span class='line'>          inetアドレス:127.0.0.1  マスク:255.0.0.0
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:65536  メトリック:1
</span><span class='line'>          RXパケット:27117491 エラー:0 損失:0 オーバラン:0 フレーム:0
</span><span class='line'>          TXパケット:27117491 エラー:0 損失:0 オーバラン:0 キャリア:0
</span><span class='line'>          衝突(Collisions):0 TXキュー長:0
</span><span class='line'>          RXバイト:32672340989 (32.6 GB)  TXバイト:32672340989 (32.6 GB)
</span></code></pre></td></tr></table></div></figure>


<p>eth0 の MTU 値が <code>1500</code> となっている。</p>

<h3>3. MTU 最適値の導出</h3>

<p>要は、様々なサイズのパケット（データ）を断片化せずに送信してみてロスしない最大値を求めればよい。<br/>
但し、「IP ヘッダ ＋ ICMP ヘッダ」が「28 バイト」あるので、 MTU に設定する値は +28 したものになる。
（送信先は存在する URL ならどこでもよい）</p>

<p>では、実際に導出作業を行なってみる。（大体の目星をつけて作業を行うとよいだろう）</p>

<p>以下では <code>ping</code> コマンドを使用するがオプションは次のとおり。</p>

<ul>
<li><code>-c 1</code> は、リクエスト回数を１回に設定するオプション</li>
<li><code>-s 9999</code> は、送信パケットサイズを 9999 に設定するオプション</li>
<li><code>-M do</code> は、パケットの断片化を行わないオプション</li>
</ul>


<p>まず、パケットサイズ 1400 バイトで送信してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># ping -c 1 -s 1400 -M do www.linuxmint.com
</span><span class='line'>PING www.linuxmint.com (213.175.215.218) 1400(1428) bytes of data.
</span><span class='line'>1408 bytes from forums.linuxmint.com (213.175.215.218): icmp_seq=1 ttl=49 time=308 ms
</span><span class='line'>
</span><span class='line'>--- www.linuxmint.com ping statistics ---
</span><span class='line'>1 packets transmitted, 1 received, 0% packet loss, time 0ms
</span><span class='line'>rtt min/avg/max/mdev = 308.674/308.674/308.674/0.000 ms
</span></code></pre></td></tr></table></div></figure>


<p><code>1 received, 0% packet loss</code> なので、正常に送信できているということ。</p>

<p>次に、パケットサイズ 1500 バイトで送信してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ping -c 1 -s 1500 -M do www.linuxmint.com
</span><span class='line'>PING www.linuxmint.com (213.175.215.218) 1500(1528) bytes of data.
</span><span class='line'>ping: local error: Message too long, mtu=1454
</span><span class='line'>
</span><span class='line'>--- www.linuxmint.com ping statistics ---
</span><span class='line'>1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms
</span></code></pre></td></tr></table></div></figure>


<p><code>0 received, +1 errors, 100% packet loss</code> なので、送信に失敗しているということ。</p>

<p>このように、パケットサイズを変更しながら絞り込んでいく。</p>

<p>今回の当方の環境の場合、パケットサイズ「1426 バイト」が正常に送信できる最大値であった。</p>

<p>よって、 MTU 値は IP ヘッダ ＋ ICMP ヘッダの 28 バイトをプラスした「1454 バイト」となる。<br/>
（ちなみに、この値は今回の当方の環境ではよく知られている最適な MTU 値）</p>

<h3>4. MTU 値の変更</h3>

<p>後は、MTU 値を前項で導出した値に変更すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ifconfig eth0 mtu 1454
</span></code></pre></td></tr></table></div></figure>


<p>但し、この設定は一時的なものなのでマシンを再起動すると元に戻ってしまう。</p>

<p>恒久的に変更するには、ネットワーク接続の編集の画面で MTU 値を「自動（もしくは、何らかの数値）」から変更、もしくは設定ファイル &ldquo;/etc/NetworkManager/system-connections/Wired\ connection\ 1&rdquo; 等を編集し、再起動（ネットワーク再接続）する。（Linux Mint 等の場合）</p>

<p>ちなみに、 CentOS の CUI ベースなら &ldquo;/etc/sysconfig/network-scripts/ifcfg-eth0&rdquo; 等を編集して再起動する。</p>

<hr />

<p>それほどネットワーク周りが改善されたと体感できないかもしれませんが、最適化しないよりはした方がよいでしょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint - Apt パッケージリストアップデートで GPG 公開鍵の期限切れエラー！]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/21/linux-mint-apt-gpg-pubkey-expired-error/"/>
    <updated>2015-11-21T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/21/linux-mint-apt-gpg-pubkey-expired-error</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux Mint で <code>apt-get update</code> すると公開鍵期限切れのエラーが発生するようになりました。</p>

<p>（以前「<a href="http://komasaru.github.io/2015/10/14/linux-mint-apt-gpg-pubkey-error/" title="Linux Mint - apt-get update で GPG 公開鍵エラー！">Linux Mint - apt-get update で GPG 公開鍵エラー！</a>」という記事も公開しています。参考までに）</p>

<p>以下、現象・原因・対策についての記録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
</ul>


<h3>1. 現象</h3>

<p><code>sudo apt-get update</code> を実行すると以下のようなエラーが発生する。（アップデートマネージャでも同様）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>W: GPG エラー: http://cran.ism.ac.jp trusty/ Release: 以下の署名が無効です: KEYEXPIRED 1445181253 KEYEXPIRED 1445181253 KEYEXPIRED 1445181253,
</span></code></pre></td></tr></table></div></figure>


<p>（ちなみに、今回の現象は統計解析用プログラミング言語 R のパッケージにに関するもの）</p>

<h3>2. 原因</h3>

<p>エラーメッセージに記載されているとおり、 <code>1445181253</code> というキーが <code>KEYEXPIRED</code>（期限切れ）になっているため。</p>

<h3>3. 対策</h3>

<p>まず、キーの状態を確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ apt-key list
</span><span class='line'>
</span><span class='line'>pub   2048R/E084DAB9 2010-10-19 [満了: 2015-10-18]
</span><span class='line'>uid                  Michael Rutter &lt;marutter@gmail.com&gt;
</span></code></pre></td></tr></table></div></figure>


<p>確かに期限が切れている。</p>

<p>従って、キーサーバに問い合わせて、公開鍵を再取得すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
</span><span class='line'>Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --homedir /tmp/tmp.UCCHrlWZQw --no-auto-check-trustdb --trust-model always --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
</span><span class='line'>gpg: 鍵E084DAB9をhkpからサーバーkeyserver.ubuntu.comに要求
</span><span class='line'>gpg: 鍵E084DAB9:“Michael Rutter &lt;marutter@gmail.com&gt;”新しい署名を2個
</span><span class='line'>gpg: 処理数の合計: 1
</span><span class='line'>gpg:         新しい署名: 2
</span></code></pre></td></tr></table></div></figure>


<p>再度、キーの状態を確認してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ apt-key list
</span><span class='line'>
</span><span class='line'>pub   2048R/E084DAB9 2010-10-19 [満了: 2020-10-16]
</span><span class='line'>uid                  Michael Rutter &lt;marutter@gmail.com&gt;
</span><span class='line'>sub   2048R/1CFF3E8F 2010-10-19 [満了: 2020-10-16]
</span></code></pre></td></tr></table></div></figure>


<p>満了日が延長された。</p>

<p>これで、正常に <code>sudo apt-get update</code> が実行できるはず。</p>

<hr />

<p>めったに遭遇しない事象なので、後学のために記録として残しておいた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - Disk の IOPS の確認！]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/15/linux-check-disk-iops/"/>
    <updated>2015-11-15T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/15/linux-check-disk-iops</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>今回は、Linux OS でハードディスクが単位時間当たりどれくらい入出力要求をこなしているのか？を確認する方法についての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CPU と入出力装置の負荷を確認するための <code>iostat</code> コマンドを使用する。</li>
<li>Linux Mint や Debian 等はデフォルトではインストールされていないかもしれない。<br/>
その場合は、 <code>apt-get install sysstat</code> 等でインストールする。</li>
</ul>


<h3>1. IOPS について</h3>

<p>まず &ldquo;IOPS&rdquo; とは、記憶装置がある条件下で1秒間で読み込み・書き込みができる回数のことで、 &ldquo;Input/Output Per Second&rdquo; の略である。</p>

<h3>2. コマンドの実行</h3>

<p>以下のようにコマンドを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># iostat -dx
</span><span class='line'>Linux 2.6.32-504.16.2.el6.i686 (hoge.mk-mode.com)     2015年10月06日 _i686_  (1 CPU)
</span><span class='line'>
</span><span class='line'>Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util
</span><span class='line'>sda              51.59    64.81   72.45   15.82    17.47    44.00     0.70     0.31    3.47   0.89   7.82
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>-d</code> はデバイスの利用統計のみを表示するオプション。</li>
<li><code>-x</code> は指定したデバイスの統計を追加表示するオプション。<br/>
（デバイス名を指定しなかった場合は、 &ldquo;/proc/partitions&rdquo; に登録されている全てのデバイスについて表示される）</li>
<li><code>iostat -dx 3 10</code> のように実行すると、3秒間隔で10回表示する。</li>
<li>出力項目について

<ul>
<li><code>rrqm/s</code> &hellip; 結合したデバイスの入力要求の数</li>
<li><code>wrqm/s</code> &hellip; 結合したデバイスの出力要求の数</li>
<li><code>r/s</code> &hellip; 1秒間にデバイスに出力された入力要求の数</li>
<li><code>w/s</code> &hellip; 1秒間にデバイスに出力された出力要求の数</li>
<li><code>rsec/s</code> &hellip; 1秒間にデバイスから読み込んだセクタ数</li>
<li><code>wsec/s</code> &hellip; 1秒間にデバイスへ書き込んだセクタ数</li>
<li><code>avgrq-sz</code> &hellip; デバイスに出された入出力要求の平均サイズ</li>
<li><code>avgqu-sz</code> &hellip; デバイスに出された入出力要求のキューの長さの平均</li>
<li><code>await</code> &hellip; デバイスに出された入出力要求が受け取られるまでの平均時間</li>
<li><code>svctm</code> &hellip; デバイスに出された入出力要求の平均処理時間</li>
<li><code>%util</code> &hellip; デバイスの入出力要求を出す間に使用したCPUの平均時間</li>
</ul>
</li>
</ul>


<p>ちなみに、 <code>-x</code> オプションを使用しない場合は以下のように出力される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># iostat -d
</span><span class='line'>Linux 2.6.32-504.16.2.el6.i686 (hoge.mk-mode.com)     2015年10月06日 _i686_  (1 CPU)
</span><span class='line'>
</span><span class='line'>Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
</span><span class='line'>sda              88.28        17.98        44.05  249632216  611679582
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>出力項目について

<ul>
<li><code>tps</code> &hellip; デバイスへの入出力要求の数</li>
<li><code>Blk_read/s</code> &hellip; デバイスから読み込んだブロック数の平均</li>
<li><code>Blk_wrtn/s</code> &hellip; デバイスへ書き込んだブロック数の平均</li>
<li><code>Blk_read</code> &hellip; 読み込んだブロック数</li>
<li><code>Blk_wrtn</code> &hellip; 書き込んだブロック数</li>
</ul>
</li>
</ul>


<p>更には、 <code>-c</code> オプションで CPU の利用統計が確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># iostat -c
</span><span class='line'>Linux 2.6.32-504.16.2.el6.i686 (hoge.mk-mode.com)     2015年10月06日 _i686_  (1 CPU)
</span><span class='line'>
</span><span class='line'>avg-cpu:  %user   %nice %system %iowait  %steal   %idle
</span><span class='line'>          11.57    2.39    2.35   31.88    0.00   51.81
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>出力項目について

<ul>
<li><code>%user</code> &hellip; ユーザレベルでのCPU使用率(%)</li>
<li><code>%nice</code> &hellip; ユーザレベルで、優先的にCPUを使用したときのCPU使用率(%)</li>
<li><code>%system</code> &hellip; システムレベルでのCPU使用率(%)</li>
<li><code>%iowait</code> &hellip; CPU総時間当たりのI/O待ち時間率(%)</li>
<li><code>%steal</code> &hellip; ゲストOSがリソース要求を行ったにもかかわらずCPUリソースを割り当ててもらえなかった時間の割合(%)</li>
<li><code>%idle</code> &hellip; CPUのアイドル率(%)</li>
</ul>
</li>
</ul>


<p>そして、<code>iostat</code> をオプションを全く指定しないで実行するのは <code>-cd</code> オプションを指定して実行するのと同じ。（おそらく）</p>

<h3>3. IOPS の確認</h3>

<p>前項のようにコマンドを実行した後に表示された値のうち、 <code>r/s</code> と <code>w/s</code> の値を加算したものが IOPS の値となる。</p>

<p>前項の場合、 <code>72.45</code> と <code>15.82</code> を加算した <code>88.27</code> が IOPS 値となる。</p>

<h3>4. 注意</h3>

<ul>
<li>実際には、マシン稼働中は時々刻々と値は変化しているので、何回も実行して平均を取るのがよいだろう。</li>
</ul>


<hr />

<p>当方の場合、 HDD の IOPS を確認することは、データベースの入出力に関する設定値を決定するのに必要でした。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB(MySQL) - シャットダウン時間の短縮！]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/10/mariadb-speedup-shutdown/"/>
    <updated>2015-11-10T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/10/mariadb-speedup-shutdown</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MariaDB や MySQL をシャットダウン（or 再起動）する際に時間がかかりすぎることがあります。</p>

<p>バッファの内容をディスクに書き込むのに時間がかかっているからです。</p>

<p>今回は、そのイライラを軽減するための対処についての記録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>MariaDB 10.0.21 での作業を想定（MySQL でも同様）</li>
<li>ハード環境により成果は異なる、ということに留意。</li>
</ul>


<h3>1. シャットダウン時に行われる時間のかかる処理</h3>

<ul>
<li>InnoDB Buffer Pool 全領域のチェックポイント。</li>
<li>チェックポイントとは、ダーティページ（変更されたが、まだデータベースファイルに書き込まれていないページ）をテーブルスペースへ書き込むこと。</li>
</ul>


<h3>2. innodb_max_dirty_pages_pct について</h3>

<ul>
<li>InnoDB は、ダーティページの割合（単位：%）が <code>innodb_max_dirty_pages_pct</code> の値を超えないように、バッファープールからデータをフラッシュしようとする。</li>
<li><code>innodb_max_dirty_pages_pct</code> のデフォルト値は <code>75</code></li>
<li><code>innodb_max_dirty_pages_pct</code> の設定可能値は <code>0</code> 〜 <code>99.999</code> (MariaDB 10.0.15 以上), <code>0</code> 〜 <code>99</code> (MariaDB 10.0.15 未満).</li>
<li>書き込み回数を減らす（書き込みを遅らせる）ためにはこの値を大きくする。</li>
<li>この値を小さくし過ぎると書き込みが頻発し、<code>innodb_buffer_pool_size</code> を大きく設定していても効果が小さくなる。</li>
</ul>


<h3>3. シャットダウン時間の短縮方法</h3>

<ol>
<li>MariaDB(MySQL) サーバにログインし以下の SQLを実行する。<br/>
<code>SET GLOBAL innodb_max_dirty_pages_pct = 0;</code><br/>
（但し、環境によっては <code>0</code> を指定できないかもしれない。その場合は <code>1</code> や <code>0.001</code> 等でもよい）</li>
<li><code>Value</code> 値が十分小さくなる（<code>0</code> に近付く）まで以下の SQL を断続的に実行して待つ。<br/>
<code>SHOW GLOBAL STATUS like 'innodb_buffer_pool_pages_dirty';</code></li>
<li>サーバのシャットダウン（or 再起動）

<ul>
<li>シャットダウン（or 再起動）すると、 <code>innodb_max_dirty_pages_pct</code> の値が設定値に戻る。</li>
<li>シャットダウン（or 再起動）し忘れると <code>innodb_max_dirty_pages_pct</code> の値が <code>0</code> のままで、頻繁にダーティページのテーブルスペースへの書き込みが発生してレスポンスが悪くなるので注意。</li>
</ul>
</li>
</ol>


<h3>4. 所感</h3>

<p>シャットダウンに時間がかかりすぎて不安に感じる際には、シャットダウン前にチェックポイントを実行してダーティページの書込状況を確認できるのでよいかもしれません。</p>

<h3>5. 参考サイト</h3>

<p>シャットダウンプロセスについては以下のサイトを参照。（但し、チェックポイントやダーティページについての記載はない）</p>

<ul>
<li><a href="http://dev.mysql.com/doc/refman/5.6/ja/server-shutdown.html" title="MySQL :: MySQL 5.6 リファレンスマニュアル :: 5.1.12 シャットダウンプロセス">MySQL :: MySQL 5.6 リファレンスマニュアル :: 5.1.12 シャットダウンプロセス</a></li>
</ul>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 6.7 - Postfix ウィルス対策(ClamAV + ClamSMTP)！]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/05/centos-clamsmtp-installation/"/>
    <updated>2015-11-05T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/05/centos-clamsmtp-installation</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>送信メールサーバ Postfix と Clam AntiVirus を ClamSMTP で連携してメールのウィルスチェックを行う方法についての記録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 6.7(32bit) での作業を想定。</li>
<li>EPEL リポジトリ導入済み。（参考「<a href="http://komasaru.github.io/2013/12/13/centos-6-5-first-setting/" title="CentOS 6.5 - 初期設定！">CentOS 6.5 - 初期設定！</a>」）</li>
<li>SMTP サーバ Postfix 構築済み。</li>
<li>アンチウィルスソフト ClamAV(<code>clamd</code>) 導入済み。</li>
</ul>


<h3>1. ClamSMTP のインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># yum --enablerepo=epel -y install clamsmtp
</span></code></pre></td></tr></table></div></figure>


<h3>2. ClamSMTP 設定ファイルの編集</h3>

<figure class='code'><figcaption><span>/etc/clamsmtpd.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Listen: 0.0.0.0:10025                           <span class="c"># &lt;= コメント解除</span>
</span><span class='line'>
</span><span class='line'>Header: X-Virus-Scanned: ClamAV using ClamSMTP  <span class="c"># &lt;= コメント解除</span>
</span><span class='line'>
</span><span class='line'>Action: drop                                    <span class="c"># &lt;= コメント解除</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. ClamSMTP の起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># /etc/rc.d/init.d/clamsmtpd start
</span><span class='line'>Starting ClamSmtpd:                                        [  OK  ]
</span><span class='line'>
</span><span class='line'># /etc/rc.d/init.d/clamsmtp-clamd start
</span></code></pre></td></tr></table></div></figure>


<h3>4. ClamSMTP 自動起動の設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># chkconfig clamsmtpd on
</span><span class='line'># chkconfig clamsmtp-clamd on
</span><span class='line'># chkconfig --list clamsmtpd
</span><span class='line'>clamsmtpd       0:off   1:off   2:on    3:on    4:on    5:on    6:off
</span><span class='line'># chkconfig --list clamsmtp-clamd
</span><span class='line'>clamsmtp-clamd  0:off   1:Off   2:on    3:on    4:on    5:on    6:off
</span></code></pre></td></tr></table></div></figure>


<h3>5. Postfix 設定ファイルの編集</h3>

<figure class='code'><figcaption><span>/etc/postfix/main.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 以下を最終行へ追記</span>
</span><span class='line'><span class="nv">content_filter</span> <span class="o">=</span> scan:127.0.0.1:10025
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/postfix/master.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 以下を最終行へ追記</span>
</span><span class='line'>scan unix -       -       n       -       <span class="m">16</span>       smtp
</span><span class='line'>   -o <span class="nv">smtp_data_done_timeout</span><span class="o">=</span>1200
</span><span class='line'>   -o <span class="nv">smtp_send_xforward_command</span><span class="o">=</span>yes
</span><span class='line'>   -o <span class="nv">disable_dns_lookups</span><span class="o">=</span>yes
</span><span class='line'>127.0.0.1:10026 inet n       -       n       -       <span class="m">16</span>       smtpd
</span><span class='line'>   -o <span class="nv">content_filter</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">local_recipient_maps</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">relay_recipient_maps</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">smtpd_restriction_classes</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">smtpd_client_restrictions</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">smtpd_helo_restrictions</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">smtpd_sender_restrictions</span><span class="o">=</span>
</span><span class='line'>   -o <span class="nv">smtpd_recipient_restrictions</span><span class="o">=</span>permit_mynetworks,reject
</span><span class='line'>   -o <span class="nv">mynetworks_style</span><span class="o">=</span>host
</span><span class='line'>   -o <span class="nv">smtpd_authorized_xforward_hosts</span><span class="o">=</span>127.0.0.0/8
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>上記の <code>10026</code> は &ldquo;/etc/clamsmtpd.conf&rdquo; の <code>OutAddress</code> の値に合わせる。</li>
</ul>


<h3>6. Postfix の再起動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># /etc/rc.d/init.d/postfix restart
</span><span class='line'>Shutting down postfix:                  [  OK  ]
</span><span class='line'>Starting postfix:                       [  OK  ]
</span></code></pre></td></tr></table></div></figure>


<h3>7. 動作確認</h3>

<p>メールを自分宛に送信してみて受信したメールのヘッダに以下のような記述があるか確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>X-Virus-Scanned: ClamAV using ClamSMTP
</span></code></pre></td></tr></table></div></figure>


<p>また、ウィルスメールを送信してみて受信しないことも確認する。（例えば、本文に以下（テストウィルス）を記載したメールを送信）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*
</span></code></pre></td></tr></table></div></figure>


<h3>参考サイト</h3>

<ul>
<li><a href="http://www.server-world.info/query?os=CentOS_6&amp;p=mail&amp;f=6" title="CentOS 6 - MAILサーバー - Clamav との連携 - ClamSMTP ： Server World">CentOS 6 - MAILサーバー - Clamav との連携 - ClamSMTP ： Server World</a></li>
</ul>


<hr />

<p>送信メールサーバ Postfix と Clam AntiVirus を AMaVisd-new で連携する場合と比べてどうなのか？ということを体感してみたかった故の今回の試行でした。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年10月 - OS・ブラウザ別アクセス状況！【自動集計】]]></title>
    <link href="http://komasaru.github.io/blog/2015/11/01/blog-access/"/>
    <updated>2015-11-01T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/11/01/blog-access</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>11月になりましたので、先月10月分の当ブログアクセス状況を公開します。</p>

<!--more-->


<h4>1. アクセスをOS別に集計</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td class="blog-access-pv">30,161</td>
    <td class="blog-access-rate">59.5021</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td class="blog-access-pv">16,941</td>
    <td class="blog-access-rate">33.4215</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td class="blog-access-pv">1,758</td>
    <td class="blog-access-rate">3.4682</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td class="blog-access-pv">1,289</td>
    <td class="blog-access-rate">2.5430</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">342</td>
    <td class="blog-access-rate">0.6747</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td class="blog-access-pv">81</td>
    <td class="blog-access-rate">0.1598</td>
  </tr>
  <tr>
    <td>Android</td>
    <td class="blog-access-pv">50</td>
    <td class="blog-access-rate">0.0986</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td class="blog-access-pv">42</td>
    <td class="blog-access-rate">0.0829</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0138</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0099</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td class="blog-access-pv">5</td>
    <td class="blog-access-rate">0.0099</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0079</td>
  </tr>
  <tr>
    <td>Debian GNU/Linux</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0039</td>
  </tr>
  <tr>
    <td>OpenBSD</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0039</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">50,689</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>2. アクセスをOS・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td>X</td>
    <td class="blog-access-pv">30,158</td>
    <td class="blog-access-rate">59.4961</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>NT</td>
    <td class="blog-access-pv">14,314</td>
    <td class="blog-access-rate">28.2389</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">1,735</td>
    <td class="blog-access-rate">3.4228</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">1,269</td>
    <td class="blog-access-rate">2.5035</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7</td>
    <td class="blog-access-pv">1,232</td>
    <td class="blog-access-rate">2.4305</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7 64 bit</td>
    <td class="blog-access-pv">788</td>
    <td class="blog-access-rate">1.5546</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td>unknown</td>
    <td class="blog-access-pv">342</td>
    <td class="blog-access-rate">0.6747</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>XP</td>
    <td class="blog-access-pv">324</td>
    <td class="blog-access-rate">0.6392</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista</td>
    <td class="blog-access-pv">194</td>
    <td class="blog-access-rate">0.3827</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">77</td>
    <td class="blog-access-rate">0.1519</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8 64 bit</td>
    <td class="blog-access-pv">55</td>
    <td class="blog-access-rate">0.1085</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>unknown</td>
    <td class="blog-access-pv">42</td>
    <td class="blog-access-rate">0.0829</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Server 2003</td>
    <td class="blog-access-pv">18</td>
    <td class="blog-access-rate">0.0355</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td></td>
    <td class="blog-access-pv">13</td>
    <td class="blog-access-rate">0.0256</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>4.0.4</td>
    <td class="blog-access-pv">12</td>
    <td class="blog-access-rate">0.0237</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td></td>
    <td class="blog-access-pv">12</td>
    <td class="blog-access-rate">0.0237</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>64 bit</td>
    <td class="blog-access-pv">10</td>
    <td class="blog-access-rate">0.0197</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>4.0.1</td>
    <td class="blog-access-pv">10</td>
    <td class="blog-access-rate">0.0197</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>2000</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0158</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>2.3.4</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0138</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">50,689</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>3. アクセスをブラウザ別に集計</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td class="blog-access-pv">29,168</td>
    <td class="blog-access-rate">57.5431</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td class="blog-access-pv">12,131</td>
    <td class="blog-access-rate">23.9322</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td class="blog-access-pv">5,428</td>
    <td class="blog-access-rate">10.7084</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td class="blog-access-pv">2,945</td>
    <td class="blog-access-rate">5.8099</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td class="blog-access-pv">446</td>
    <td class="blog-access-rate">0.8799</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td class="blog-access-pv">404</td>
    <td class="blog-access-rate">0.7970</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td class="blog-access-pv">74</td>
    <td class="blog-access-rate">0.1460</td>
  </tr>
  <tr>
    <td>Chrome</td>
    <td class="blog-access-pv">51</td>
    <td class="blog-access-rate">0.1006</td>
  </tr>
  <tr>
    <td>Epiphany</td>
    <td class="blog-access-pv">13</td>
    <td class="blog-access-rate">0.0256</td>
  </tr>
  <tr>
    <td>Mozilla SeaMonkey</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0158</td>
  </tr>
  <tr>
    <td>Konqueror</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0138</td>
  </tr>
  <tr>
    <td>iPhone</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0138</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">3</td>
    <td class="blog-access-rate">0.0059</td>
  </tr>
  <tr>
    <td>PHP</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0039</td>
  </tr>
  <tr>
    <td>Namoroka</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0020</td>
  </tr>
  <tr>
    <td>SRWare Iron</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0020</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">50,689</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>4. アクセスをブラウザ・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.36</td>
    <td class="blog-access-pv">21,898</td>
    <td class="blog-access-rate">43.2007</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>41.0</td>
    <td class="blog-access-pv">8,646</td>
    <td class="blog-access-rate">17.0570</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td>11.0</td>
    <td class="blog-access-pv">5,428</td>
    <td class="blog-access-rate">10.7084</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>9537.53</td>
    <td class="blog-access-pv">3,172</td>
    <td class="blog-access-rate">6.2578</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>38.0</td>
    <td class="blog-access-pv">1,166</td>
    <td class="blog-access-rate">2.3003</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>8.0</td>
    <td class="blog-access-pv">1,047</td>
    <td class="blog-access-rate">2.0655</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>40.0</td>
    <td class="blog-access-pv">976</td>
    <td class="blog-access-rate">1.9255</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.1.4</td>
    <td class="blog-access-pv">931</td>
    <td class="blog-access-rate">1.8367</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.1</td>
    <td class="blog-access-pv">919</td>
    <td class="blog-access-rate">1.8130</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.1.56</td>
    <td class="blog-access-pv">779</td>
    <td class="blog-access-rate">1.5368</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>10.0</td>
    <td class="blog-access-pv">718</td>
    <td class="blog-access-rate">1.4165</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>9.0</td>
    <td class="blog-access-pv">656</td>
    <td class="blog-access-rate">1.2942</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>7.0</td>
    <td class="blog-access-pv">497</td>
    <td class="blog-access-rate">0.9805</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td>9.80</td>
    <td class="blog-access-pv">398</td>
    <td class="blog-access-rate">0.7852</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>534.30</td>
    <td class="blog-access-pv">321</td>
    <td class="blog-access-rate">0.6333</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.2.7</td>
    <td class="blog-access-pv">285</td>
    <td class="blog-access-rate">0.5623</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>38.3.0</td>
    <td class="blog-access-pv">284</td>
    <td class="blog-access-rate">0.5603</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.8.9</td>
    <td class="blog-access-pv">215</td>
    <td class="blog-access-rate">0.4242</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>31.0</td>
    <td class="blog-access-pv">196</td>
    <td class="blog-access-rate">0.3867</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>39.0</td>
    <td class="blog-access-pv">148</td>
    <td class="blog-access-rate">0.2920</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">50,689</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB(MySQL) - データのみを指定件数ずつ分割ダンプ出力！]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/26/mariadb-dump-only-data-by-split/"/>
    <updated>2015-10-26T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/26/mariadb-dump-only-data-by-split</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>MariaDB(MySQL) の指定したデータベースを、テーブル別にデータのみを指定件数ずつ分割してダンプ出力する方法についてです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>MariaDB 10.0.21 サーバでの作業を想定。（MySQL や他のバージョンでも同様（のはず））</li>
<li>Bash スクリプトを作成して実現させる。</li>
<li>出力されたダンプファイルはまとめて圧縮保存する。</li>
<li>必要であれば、「<a href="http://komasaru.github.io/2014/06/15/mysql-dump-only-schema-data-stored/" title="MySQL(MariaDB) - スキーマのみ、データのみ、ストアド・トリガーのみのダンプ！">MySQL(MariaDB) - スキーマのみ、データのみ、ストアド・トリガーのみのダンプ！</a>」も参考にしてください。</li>
<li>以下で紹介する Bash スクリプトでは、トランザクションの単位がテーブル・ループ単位となるため、<strong>データの整合性に注意</strong>。<br/>
（<strong>ダンプ出力時やリストア時に DB への挿入・更新・削除がないことが前提</strong>）</li>
</ul>


<h3>1. Bash スクリプトの作成</h3>

<p>以下は、当方がデータのみを分割ダンプ出力する際に使用している Bash スクリプトである。（解説はスクリプト内のコメントにて。 <code>(*)</code> はさらなる説明を後述）</p>

<figure class='code'><figcaption><span>db_dump_only_data_by_split.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 定数定義</span>
</span><span class='line'><span class="nv">DB</span><span class="o">=</span>db_name                      <span class="c"># データベース・スキーマ名</span>
</span><span class='line'><span class="nv">USER</span><span class="o">=</span>user_name                  <span class="c"># ダンプ出力するユーザ名</span>
</span><span class='line'><span class="nv">PW</span><span class="o">=</span>user_password                <span class="c">#       〃      ユーザ名のパスワード</span>
</span><span class='line'><span class="nv">CMD</span><span class="o">=</span>/usr/bin/mysqldump          <span class="c"># mysqldump コマンドのフルパス</span>
</span><span class='line'><span class="nv">WK_DIR</span><span class="o">=</span>/path/to/backup_mysql    <span class="c"># 作業ディレクトリ</span>
</span><span class='line'><span class="nv">DMP_DIR</span><span class="o">=</span><span class="nv">$WK_DIR</span>/tabledatas_<span class="nv">$DB</span>  <span class="c"># ダンプファイル格納ディレクトリ</span>
</span><span class='line'><span class="nv">OPTS</span><span class="o">=</span><span class="s2">&quot;-t -Q -F --skip-lock-tables --skip-triggers --skip-dump-date --single-transaction&quot;</span>
</span><span class='line'>                                <span class="c"># mysqldump オプション(*)</span>
</span><span class='line'><span class="nv">DCNT</span><span class="o">=</span><span class="m">100000</span>                     <span class="c"># 分割するレコード件数</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ダンプファイルクリア</span>
</span><span class='line'>rm -f <span class="nv">$DMP_DIR</span>/*
</span><span class='line'>
</span><span class='line'><span class="c"># DB 内に存在するテーブル毎にループ処理</span>
</span><span class='line'><span class="k">for</span> tbl in <span class="sb">`</span>mysql -u <span class="nv">$USER</span> -p<span class="nv">$PW</span> -N -s -e <span class="s2">&quot;show tables in $DB;&quot;</span><span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c"># テーブル内に存在するレコード件数(*)</span>
</span><span class='line'>  <span class="nv">rows</span><span class="o">=</span><span class="sb">`</span>mysql -u <span class="nv">$USER</span> -p<span class="nv">$PW</span> <span class="nv">$DB</span> -N -B -e <span class="s2">&quot;SELECT COUNT(*) FROM $tbl;&quot;</span><span class="sb">`</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;* $tbl [$rows records]&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># レコード件数から分割数を算出してループ処理</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0<span class="p">;</span> i &lt;<span class="o">=</span> <span class="k">$((</span><span class="nv">$rows</span> <span class="o">/</span> <span class="nv">$DCNT</span><span class="k">))</span><span class="p">;</span> i++<span class="o">))</span>
</span><span class='line'>  <span class="k">do</span>
</span><span class='line'>    <span class="c"># 出力ダンプファイル名</span>
</span><span class='line'>    <span class="nv">fname</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="k">${</span><span class="nv">tbl</span><span class="k">}</span>_%02d <span class="nv">$i</span><span class="k">)</span>
</span><span class='line'>    <span class="c"># オフセット算出</span>
</span><span class='line'>    <span class="nv">offset</span><span class="o">=</span><span class="k">$((</span>i <span class="o">*</span> <span class="nv">$DCNT</span><span class="k">))</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;  $fname [OFFSET: $offset]&quot;</span>
</span><span class='line'>    <span class="c"># ダンプ出力(*)</span>
</span><span class='line'>    <span class="nv">$CMD</span> -u <span class="nv">$USER</span> -p<span class="nv">$PW</span> <span class="nv">$DB</span> <span class="nv">$tbl</span> <span class="nv">$OPTS</span> -w <span class="s2">&quot;true LIMIT $offset, $DCNT&quot;</span>&gt; <span class="nv">$DMP_DIR</span>/<span class="nv">$fname</span>.sql
</span><span class='line'>  <span class="k">done</span><span class="p">;</span>
</span><span class='line'><span class="k">done</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># タイムスタンプ付ファイル名で圧縮保存</span>
</span><span class='line'><span class="nb">cd</span> <span class="nv">$WK_DIR</span>
</span><span class='line'><span class="nv">dt</span><span class="o">=</span><span class="sb">`</span>date <span class="s1">&#39;+%Y%m%d_%H%M%S&#39;</span><span class="sb">`</span>
</span><span class='line'>tar zcvf <span class="k">${</span><span class="nv">DB</span><span class="k">}</span>_tabledata_<span class="nv">$dt</span>.tar.gz tabledatas_<span class="nv">$DB</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/d9cae95bf4d30da5545b" title="Gist - Bash script to dump only records of MariaDB(MySQL) tables by split.">Gist - Bash script to dump only records of MariaDB(MySQL) tables by split.</a></li>
</ul>


<p>mysqldump オプション（上記の<code>OPTS</code>）について。（mysqldump のデフォルトで有効のオプション <code>--opt</code> とは別のもの）</p>

<ul>
<li><code>-t</code>(or <code>--no-create-info</code>) &hellip; テーブル作成（CREATE TABLE）文を出力しないオプション。</li>
<li><code>-Q</code>(or <code>--quote-names</code>) &hellip; データベース名、テーブル名、カラム名を <code>`</code> で囲むオプション（デフォルトで有効）。</li>
<li><code>-F</code>(or <code>--flush-logs</code>) &hellip; ダンプ開始前にログファイルをフラッシュするオプション。</li>
<li><code>--skip-lock-tables</code> &hellip; デフォルトで有効になる全テーブルをロックするオプション <code>--lock-tables</code> を無効にするオプション。</li>
<li><code>--skip-triggers</code> &hellip; trigger のダンプ出力を無効にするオプション。</li>
<li><code>--skip-dump-date</code> &hellip; ダンプ日時の出力を無効にするオプション。</li>
<li><code>--single-transaction</code> &hellip; データの整合性を保つためにダンプ処理をトランザクションで囲むオプション。</li>
<li>ちなみに、主キーでソートせずに LIMIT(OFFSET) 句を使用するとフルスキャンになってしまうからと、 <code>--order-by-primary</code> という主キーでソートするオプションを使用すると、 Syntax error が発生しまう。従って、今回は使用していない。<br/>
主キーでソートしたければ、 <code>-w</code> オプションの <code>LIMIT</code> 句の前に <code>ORDER BY primary_key_col</code> のように追加する。（但し、今回紹介のケースでは DB 内全テーブルの主キーが同じカラムである必要がある）</li>
</ul>


<p>レコード件数取得について。</p>

<ul>
<li>上記では <code>SELECT COUNT(*) ...</code> としているが、データベース内の全テーブルに同じカラム名で主キーが設定してあるのなら <code>SELECT COUNT(col_name) ...</code> とした方がよい。</li>
</ul>


<p><code>OPTS</code> 以外に追加している <code>-w</code>(or <code>--where</code>) オプションについて。（<strong>今回のポイント</strong>）</p>

<ul>
<li>本来 <code>-w</code> は抽出条件を指定するオプションだが、 WHERE 条件は <code>true</code>（もしくは <code>1</code>） でスルーして <code>LIMIT</code> 句を指定している。<br/>
（mysqldump に LIMIT(OFFSET) 句を指定するオプションが存在しないため）</li>
<li><code>-w "true LIMIT $offset, $DCNT"</code> は <code>-w "true LIMIT $DCNT OFFSET $offset"</code> としてもよい。</li>
<li>主キーやユニークインデックスが歯抜けでなく件数が正確に取得できるのであれば、 <code>-w</code> オプションで LIMIT 句や OFFSET 句を指定せずに普通に条件指定するようにしてもよいだろう。</li>
</ul>


<h3>2. Bash スクリプトの実行</h3>

<p>作業用ディレクトリやダンプファイル格納用サブディレクトリが存在することを確認し、実行権限を付与後に実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ chmod +x db_dump_only_data_by_split.sh
</span><span class='line'>$ ./db_dump_only_data_by_split.sh
</span></code></pre></td></tr></table></div></figure>


<p>作業ディレクトリ内のダンプファイル格納用サブディレクトリにダンプファイルが出力され、作業ディレクトリ内にタイムスタンプ付圧縮ファイルが作成されるのを確認する。</p>

<p>また、 LIMIT 句を使用しているのでダンプ出力完了まで時間がかかることを覚悟すること。</p>

<h3>3. その他</h3>

<ul>
<li>データ量が多すぎるとダンプ出力に時間がかかる、ということに留意する。<br/>
<code>-w</code> オプションで LIMIT 句を使用するからと、フルスキャンを避けるために <code>--order-by-primary</code> オプションを使用したり、もしくは <code>-w</code> オプションで <code>ORDER BY</code> 句を指定しても、ダンプ出力が徐々に遅くなる。<br/>
<code>mysqldump</code> の <code>-w</code>(or <code>--where</code>) での LIMIT(OFFSET) 句指定はフルスキャンになってしまうのだろうか？（<code>mysqldump</code> を EXPLAIN で確認できればいいのですが。。。）</li>
<li>データ量が多すぎるとダンプ出力に時間がかかるため、結局当方は、データ量が多すぎる場合は、エクスポートは <code>SELECT INTO ... OUTFILE</code> で CSV 出力、インポートは <code>LOAD DATA INFILE</code> で CSV 取り込み、とすることにした。以下の過去記事を参照。

<ul>
<li><a href="http://komasaru.github.io/2011/08/31/31002049/" title="MySQL - SELECT結果をCSV出力！">MySQL - SELECT結果をCSV出力！</a></li>
<li><a href="http://komasaru.github.io/2013/06/08/mysql-import-from-csv/" title="MySQL - CSV データインポート！">MySQL - CSV データインポート！</a></li>
</ul>
</li>
</ul>


<h3>4. 参考サイト</h3>

<p>mysqldump の各種オプションや LIMIT 句の指定方法については以下のサイトを参照。</p>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.6/en/mysqldump.html" title="MySQL :: MySQL 5.6 Reference Manual :: 4.5.4 mysqldump — A Database Backup Program">MySQL :: MySQL 5.6 Reference Manual :: 4.5.4 mysqldump — A Database Backup Program</a></li>
</ul>


<hr />

<p>結局、当方は今回紹介した方法を積極的には使用していませんが、こういうやり方もあるということを覚えておくと何かの際に役立つかもしれません。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - スワップ領域の作成！]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/20/linux-create-swap-area/"/>
    <updated>2015-10-20T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/20/linux-create-swap-area</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>スワップ領域の容量が不足した際に追加で作成する方法についてです。</p>

<p>本来なら物理メモリを増設すべきでしょうが、それまでの緊急的な措置としてスワップファイルを作成してそれをスワップ領域に割り当てるのです。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>CentOS 6.6(32bit) での作業を想定。（他のディストリビューションでも同じ）</li>
</ul>


<h3>1. スワップファイルの作成</h3>

<p>以下は、ブロックサイズ 1KB で 2GB(1024 x 1024 x 2ブロック) のスワップ領域用のファイルを作成する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># dd if=/dev/zero of=/var/tmp/swap bs=1024 count=2097152
</span><span class='line'>2097152+0 records in
</span><span class='line'>2097152+0 records out
</span><span class='line'>2147483648 bytes (2.1 GB) copied, 74.8475 s, 28.7 MB/s
</span></code></pre></td></tr></table></div></figure>


<h3>2. スワップ領域の作成</h3>

<p>先ほど作成したスワップファイルをスワップ領域に割り当てる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># mkswap /var/tmp/swap
</span><span class='line'>mkswap: /var/tmp/swap: warning: don&#39;t erase bootbits sectors
</span><span class='line'>        on whole disk. Use -f to force.
</span><span class='line'>スワップ空間バージョン1を設定します、サイズ = 2097148 KiB
</span><span class='line'>ラベルはありません, UUID=1a802279-4f23-4466-8579-fa38a2cc4d5a
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>スワップ領域を作成する前にデバイスの不良ブロックのチェックを行いたい場合は、 <code>-c</code> オプションを使用する。<br/>
（不良ブロックを検出した場合は、その件数が出力される）</li>
<li>スワップファイルにラベルを指定する（ラベル指定でスワップ領域の有効化したい）場合は、 <code>-L</code> オプションで指定する。</li>
</ul>


<h3>3. スワップ領域の有効化</h3>

<p>先ほど作成したスワップ領域を有効化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># swapon /var/tmp/swap
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>当然ながら、スワップファイルではなくパーティションを指定することも可能。</li>
<li>スワップファイル名でなくラベルで指定することも可能。</li>
<li>優先度を指定したければ、 <code>-p priority</code> で指定する。 <code>priority</code> は 0 〜 32767 の数値で、大きいほど優先度が高い。</li>
<li>同じ優先度のスワップ領域が複数ある場合、ページがラウンド・ロビン方式で配分される。</li>
</ul>


<h3>4. スワップ領域の確認</h3>

<p>スワップ領域の一覧を確認するには以下のようにする。（以下は一例）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># swapon -s
</span><span class='line'>Filename                                Type            Size    Used    Priority
</span><span class='line'>/dev/sda2                               partition       2097148 766580  -1
</span><span class='line'>/var/tmp/swap                           file            2097148 0       -2
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>優先度を指定しない場合、自動で既存スワップ領域で最低の優先度に続く優先度になるのではなかろうか。</li>
</ul>


<h3>5. スワップ領域の削除</h3>

<p>スワップが不要になった場合は以下のようにして削除する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># swapoff /var/tmp/swap
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>当然ながら、スワップファイルではなくパーティションを指定することも可能。</li>
<li>スワップファイル名でなくラベルで指定することも可能。</li>
</ul>


<h3>6. スワップファイルの削除</h3>

<p>完全にスワップ領域が不要なら、スワップファイルも削除する。（単純なファイル削除）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># rm -f /var/tmp/swap
</span></code></pre></td></tr></table></div></figure>


<h3>7. 自動マウント</h3>

<p>マシン起動時に自動でスワップ領域を有効化したい場合は、 &ldquo;/etc/fstab&rdquo; に以下のように追記する。</p>

<figure class='code'><figcaption><span>/etc/fstab</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/var/tmp/swap         swap    swap    sw    0 0
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>1列目 &hellip; デバイス名・スワップファイル名</li>
<li>2列目 &hellip; マウントポイント（スワップ領域にはマウントポイントがないので <code>none</code> でもよい）</li>
<li>3列目 &hellip; ファイルシステム</li>
<li>4列目 &hellip; マウント時のオプション（<code>defaults</code> でもよい。優先度を指定するなら <code>sw,pri=X</code>（<code>X</code> は <code>0</code> 〜 <code>32767</code> の数値））</li>
<li>5列目 &hellip; ファイルシステムを dump する必要があるか否かの指定（<code>0</code> は dump の必要なし）</li>
<li>6列目 &hellip; システム起動時に fsck チェックを行うか否かの指定（<code>0</code> は fsck チェックを行わない）</li>
</ul>


<hr />

<p>これで取り急ぎのスワップ領域拡大ができますが、この間に物理メモリ増設について検討しましょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint - apt-get update で GPG 公開鍵エラー！]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/14/linux-mint-apt-gpg-pubkey-error/"/>
    <updated>2015-10-14T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/14/linux-mint-apt-gpg-pubkey-error</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux Mint で、いつしか Apt パッケージの一覧を更新しようとすると GPG 公開鍵エラーが発生するようになりました。</p>

<p>以下、現象・原因・対策についての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) を想定。</li>
</ul>


<h3>1. 現象</h3>

<p>Apt パッケージ一覧をアップデートした際に以下のようなエラーが発生する。（<code>W</code> なので分類としては「警告」でしょうが）<br/>
（以下は QGIS というパッケージの部分で発生した例で、実際のメッセージは１行）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-get update
</span><span class='line'>
</span><span class='line'>====&lt; 途中省略 &gt;====
</span><span class='line'>
</span><span class='line'>W: GPG エラー: http://qgis.org trusty InRelease:
</span><span class='line'>公開鍵を利用できないため、以下の署名は検証できませんでした: NO_PUBKEY 3FF5FFCAD71472C4
</span><span class='line'>
</span><span class='line'>====&lt; 以下省略 &gt;====
</span></code></pre></td></tr></table></div></figure>


<p>当然ながら、アップデートマネージャでも同じエラーが発生する。</p>

<h3>2. 原因</h3>

<p>メッセージのとおり、GPG 署名の検証に必要な公開鍵が存在しないため。</p>

<h3>3. 対策</h3>

<p>キーサーバに問い合わせればよい。（<code>--recv-keys</code> の値は、エラーメッセージ中 <code>NO_PUBKEY</code> の後ろの値）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FF5FFCAD71472C4
</span><span class='line'>Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --homedir /tmp/tmp.Wv6W1dQY2n --no-auto-check-trustdb --trust-model always --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv-keys 3FF5FFCAD71472C4
</span><span class='line'>gpg: 鍵D71472C4をhkpからサーバーkeyserver.ubuntu.comに要求
</span><span class='line'>gpg: 鍵D71472C4: 公開鍵“QGIS Archive Automatic Signing Key (2015) &lt;qgis-developer@lists.osgeo.org&gt;”を読み込みました
</span><span class='line'>gpg: 処理数の合計: 1
</span><span class='line'>gpg:               読込み: 1  (RSA: 1)
</span></code></pre></td></tr></table></div></figure>


<p>再度 <code>apt-get update</code> でエラーが発生しないことを確認する。</p>

<hr />

<p>稀に遭遇するエラーなので備忘録として残しておいた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - メモリキャッシュのクリア！]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/09/linux-release-memory-caches/"/>
    <updated>2015-10-09T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/09/linux-release-memory-caches</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Linux でメモリキャッシュをクリアすることについての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Linux Kernel 2.6.16 以降であること。</li>
<li>当方は Linux Mint 17.2(64bit), 搭載メモリ:4GB の環境で動作確認。</li>
</ul>


<h3>1. キャッシュの削除方法</h3>

<p>以下のコマンドは、 root になって実行するか <code>sudo</code> を使用して実行する。</p>

<h4>1-1. ページキャッシュの解放</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># sysctl -w vm.drop_caches=1
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># echo 1 &gt; /proc/sys/vm/drop_caches
</span></code></pre></td></tr></table></div></figure>


<h4>1-2. Slab キャッシュの解放</h4>

<p>（Slab キャッシュとは、ディレクトリやファイルのメタデータ情報を格納する dentry や inode のこと）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># sysctl -w vm.drop_caches=2
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># echo 2 &gt; /proc/sys/vm/drop_caches
</span></code></pre></td></tr></table></div></figure>


<h4>1-3. ページキャッシュと Slab キャッシュの解放</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># sysctl -w vm.drop_caches=3
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># echo 3 &gt; /proc/sys/vm/drop_caches
</span></code></pre></td></tr></table></div></figure>


<h4>1-4. 初期状態について</h4>

<p>あらゆる Web サイト等で「初期状態に戻すには <code>0</code> を設定する」旨の紹介がされている。<br/>
しかし、 RedHat 系では機能するが Debian 系では機能しない。（<code>sysctl</code> も <code>echo</code> も）</p>

<p><code>vm.drop_caches</code> についての説明は <code>man proc</code> で確認できるが、 Debian 系も RedHat 系も <code>0</code> についての説明がされていない。</p>

<p>従って、初期状態には戻す必要はないという結論に至った。（あくまで、個人の判断）<br/>
（とは言え、 <code>cat /proc/sys/vm/drop_caches</code> の値が、マシンを再起動するまでずっと <code>0</code> 以外の状態でいることに疑問を感じる）</p>

<h3>2. 作業の実際</h3>

<p>実際の作業手順は以下のようになる。</p>

<ol>
<li>キャッシュクリア前のメモリ状態を確認。</li>
<li>バッファの内容をディスクに書き込む。</li>
<li>キャッシュをクリア。</li>
<li>キャッシュクリア後のメモリ状態を確認。</li>
</ol>


<p>以下は、ページキャッシュと Slab キャッシュを解放する例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># free
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       4047488    3887116     160372     155764     247452    1104336
</span><span class='line'>-/+ buffers/cache:    2535328    1512160
</span><span class='line'>Swap:      8000508     557132    7443376
</span><span class='line'>
</span><span class='line'># sync
</span><span class='line'>
</span><span class='line'># sysctl -w vm.drop_caches=3
</span><span class='line'>vm.drop_caches = 3
</span><span class='line'>
</span><span class='line'># free
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       4047488    2415508    1631980     155764       9856     324056
</span><span class='line'>-/+ buffers/cache:    2081596    1965892
</span><span class='line'>Swap:      8000508     557124    7443384
</span></code></pre></td></tr></table></div></figure>


<p>物理メモリの空き容量(Mem - free の値）が増えたことを確認する。</p>

<h3>3. 参考サイト</h3>

<ul>
<li><a href="http://linuxjm.osdn.jp/html/LDP_man-pages/man5/proc.5.html" title="Man page of PROC">Man page of PROC</a></li>
</ul>


<hr />

<p>物理メモリの空き容量の減りが気になったら試してみるといいでしょう。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux - マルチコア CPU で高速圧縮！]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/03/linux-archive-speed-up-on-multi-core-cpu/"/>
    <updated>2015-10-03T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/03/linux-archive-speed-up-on-multi-core-cpu</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>通常、 Linux の <code>tar</code> コマンドでファイル等の圧縮を行う場合、 CPU コアを１つしか使用しません。</p>

<p>２つ以上 CPU コアを搭載していることの多い昨今、 CPU コアを全て使用して圧縮を行うと時間の節約になります。</p>

<p>今回、圧縮・解凍をマルチコアで並列に処理してくれる <code>pigz</code> を使用してみました。</p>

<!--more-->


<h3>0.前提条件</h3>

<ul>
<li>Linux Mint 17.2(64bit) での作業を想定。</li>
<li>Intel Core2Duo CPU E8500 (3.16GHz x 2) での作業を想定。</li>
</ul>


<h3>1. pigz のインストール</h3>

<p>Apt パッケージを使用する（但し、最新版ではない可能性が高い）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo apt-get install pigz
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、最新版アーカイブを取得＆展開後、 <code>make</code> して適当な位置に配置してもよい。（但し、当方の環境ではビルドエラーになった）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ wget http://zlib.net/pigz/pigz-2.3.3.tar.gz
</span><span class='line'>$ tar zxvf pigz-2.3.3.tar.gz
</span><span class='line'>$ cd pigz-2.3.3
</span><span class='line'>$ make
</span><span class='line'>$ sudo mv ./pigz /usr/local/bin/pigz
</span><span class='line'>$ sudo mv ./unpigz /usr/local/bin/unpigz
</span></code></pre></td></tr></table></div></figure>


<h3>2. pigz インストールの確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ pigz --version
</span><span class='line'>pigz 2.3
</span></code></pre></td></tr></table></div></figure>


<h3>3. 圧縮</h3>

<p>比較のため、まず <code>tar</code> コマンドで圧縮してみる。<br/>
（圧縮対象は、サブディレクトリ：2層、ファイル数：121,653個、容量：約100MB の &ldquo;test&rdquo; という名称のディレクトリ）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ time tar zcf test.tar.gz test
</span><span class='line'>
</span><span class='line'>real    0m4.711s
</span><span class='line'>user    0m4.402s
</span><span class='line'>sys     0m0.938s
</span></code></pre></td></tr></table></div></figure>


<p>次に、 pigz 圧縮してみる。<br/>
ディレクトリを再帰的に圧縮できる <code>-r</code> もあるが、これはファイルそれぞれが圧縮されてしまうので、 <code>tar</code> コマンドで一旦ファイルをまとめてから <code>pigz</code> コマンドで圧縮する。また、デフォルトでは全てのプロセッサを使用するが、同時実行スレッド数を指定する <code>-p</code> オプション等もある。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ time tar c test | pigz &gt; test.tar.gz
</span><span class='line'>
</span><span class='line'>real    0m2.987s
</span><span class='line'>user    0m4.624s
</span><span class='line'>sys     0m0.682s
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、単純に１つのファイルを圧縮するだけなら <code>pigz -k test.tar.gz</code> でよい（<code>-k</code> は元のファイルを残すオプション）。</p>

<p>さらに、 <code>pigz</code> コマンドを <code>tar</code> コマンドのオプションで使用して圧縮してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ time tar cf test.tar.gz test --use-compress-program=pigz
</span><span class='line'>
</span><span class='line'>real    0m2.970s
</span><span class='line'>user    0m4.542s
</span><span class='line'>sys     0m0.632s
</span></code></pre></td></tr></table></div></figure>


<h3>4. 解凍</h3>

<p>まず、単純に <code>tar</code> コマンドで圧縮したファイルを解凍してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ time tar zxf test.tar.gz
</span><span class='line'>
</span><span class='line'>real    0m18.441s
</span><span class='line'>user    0m1.813s
</span><span class='line'>sys     0m3.022s
</span></code></pre></td></tr></table></div></figure>


<p>次に、 <code>pigz</code> で圧縮したファイルを <code>tar</code> コマンドで解凍してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ time tar xf test.tar.gz --use-compress-program=pigz
</span><span class='line'>
</span><span class='line'>real    0m17.526s
</span><span class='line'>user    0m1.193s
</span><span class='line'>sys     0m3.310s
</span></code></pre></td></tr></table></div></figure>


<h3>5. 所感</h3>

<ul>
<li>コア数 2 の非力な環境でも約 2/3 の速度で圧縮することができたのだが、場合によっては pigz を使用する方が遅くなることもある。</li>
<li>今回、解凍についてはそれほど差が認められなかった。</li>
<li>当然、環境によって結果は異なるだろう。</li>
</ul>


<p>従って、当方は明らかに圧縮の高速化が見込める場合のみ pigz を使用することとした。</p>

<h3>6. 参考サイト</h3>

<ul>
<li><a href="http://zlib.net/pigz/" title="pigz - Parallel gzip">pigz - Parallel gzip</a></li>
</ul>


<hr />

<p>非力な環境では、それほど積極的に使用したいと思うようなコマンドでもありませんでした。</p>

<p>しかし、コアを複数使用して圧縮・解凍ができる、といういことを認識できたことに若干の喜びを感じた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年09月 - OS・ブラウザ別アクセス状況！【自動集計】]]></title>
    <link href="http://komasaru.github.io/blog/2015/10/01/blog-access/"/>
    <updated>2015-10-01T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/10/01/blog-access</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>10月になりましたので、先月09月分の当ブログアクセス状況を公開します。</p>

<!--more-->


<h4>1. アクセスをOS別に集計</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td class="blog-access-pv">20,655</td>
    <td class="blog-access-rate">60.0838</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td class="blog-access-pv">11,463</td>
    <td class="blog-access-rate">33.3450</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td class="blog-access-pv">1,063</td>
    <td class="blog-access-rate">3.0922</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td class="blog-access-pv">887</td>
    <td class="blog-access-rate">2.5802</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">198</td>
    <td class="blog-access-rate">0.5760</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td class="blog-access-pv">43</td>
    <td class="blog-access-rate">0.1251</td>
  </tr>
  <tr>
    <td>Android</td>
    <td class="blog-access-pv">26</td>
    <td class="blog-access-rate">0.0756</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td class="blog-access-pv">17</td>
    <td class="blog-access-rate">0.0495</td>
  </tr>
  <tr>
    <td>RedHat Linux</td>
    <td class="blog-access-pv">12</td>
    <td class="blog-access-rate">0.0349</td>
  </tr>
  <tr>
    <td>iPhone OS</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0233</td>
  </tr>
  <tr>
    <td>Solaris</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0058</td>
  </tr>
  <tr>
    <td>Debian GNU/Linux</td>
    <td class="blog-access-pv">2</td>
    <td class="blog-access-rate">0.0058</td>
  </tr>
  <tr>
    <td>CentOS Linux</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0029</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">34,377</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>2. アクセスをOS・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>OS</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Mac OS</td>
    <td>X</td>
    <td class="blog-access-pv">20,650</td>
    <td class="blog-access-rate">60.0692</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>NT</td>
    <td class="blog-access-pv">9,477</td>
    <td class="blog-access-rate">27.5679</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">1,039</td>
    <td class="blog-access-rate">3.0224</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7</td>
    <td class="blog-access-pv">951</td>
    <td class="blog-access-rate">2.7664</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">869</td>
    <td class="blog-access-rate">2.5279</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>7 64 bit</td>
    <td class="blog-access-pv">598</td>
    <td class="blog-access-rate">1.7395</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>XP</td>
    <td class="blog-access-pv">255</td>
    <td class="blog-access-rate">0.7418</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td>unknown</td>
    <td class="blog-access-pv">197</td>
    <td class="blog-access-rate">0.5731</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista</td>
    <td class="blog-access-pv">138</td>
    <td class="blog-access-rate">0.4014</td>
  </tr>
  <tr>
    <td>Fedora Linux</td>
    <td>unknown</td>
    <td class="blog-access-pv">41</td>
    <td class="blog-access-rate">0.1193</td>
  </tr>
  <tr>
    <td>FreeBSD</td>
    <td>unknown</td>
    <td class="blog-access-pv">17</td>
    <td class="blog-access-rate">0.0495</td>
  </tr>
  <tr>
    <td>Ubuntu Linux</td>
    <td></td>
    <td class="blog-access-pv">14</td>
    <td class="blog-access-rate">0.0407</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Server 2003</td>
    <td class="blog-access-pv">14</td>
    <td class="blog-access-rate">0.0407</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td>64 bit</td>
    <td class="blog-access-pv">13</td>
    <td class="blog-access-rate">0.0378</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>2.3.4</td>
    <td class="blog-access-pv">12</td>
    <td class="blog-access-rate">0.0349</td>
  </tr>
  <tr>
    <td>Linux</td>
    <td></td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0320</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>8 64 bit</td>
    <td class="blog-access-pv">11</td>
    <td class="blog-access-rate">0.0320</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>2000</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0233</td>
  </tr>
  <tr>
    <td>Windows</td>
    <td>Vista 64 bit</td>
    <td class="blog-access-pv">8</td>
    <td class="blog-access-rate">0.0233</td>
  </tr>
  <tr>
    <td>Android</td>
    <td>4.0.1</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0175</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">34,377</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>3. アクセスをブラウザ別に集計</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td class="blog-access-pv">20,022</td>
    <td class="blog-access-rate">58.2424</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td class="blog-access-pv">7,979</td>
    <td class="blog-access-rate">23.2103</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td class="blog-access-pv">3,470</td>
    <td class="blog-access-rate">10.0940</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td class="blog-access-pv">2,233</td>
    <td class="blog-access-rate">6.4956</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td class="blog-access-pv">322</td>
    <td class="blog-access-rate">0.9367</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td class="blog-access-pv">226</td>
    <td class="blog-access-rate">0.6574</td>
  </tr>
  <tr>
    <td>Netscape Navigator</td>
    <td class="blog-access-pv">45</td>
    <td class="blog-access-rate">0.1309</td>
  </tr>
  <tr>
    <td>Chrome</td>
    <td class="blog-access-pv">24</td>
    <td class="blog-access-rate">0.0698</td>
  </tr>
  <tr>
    <td>Konqueror</td>
    <td class="blog-access-pv">21</td>
    <td class="blog-access-rate">0.0611</td>
  </tr>
  <tr>
    <td>iPhone</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0204</td>
  </tr>
  <tr>
    <td>Epiphany</td>
    <td class="blog-access-pv">7</td>
    <td class="blog-access-rate">0.0204</td>
  </tr>
  <tr>
    <td>unknown</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0175</td>
  </tr>
  <tr>
    <td>Mozilla SeaMonkey</td>
    <td class="blog-access-pv">6</td>
    <td class="blog-access-rate">0.0175</td>
  </tr>
  <tr>
    <td>PHP</td>
    <td class="blog-access-pv">4</td>
    <td class="blog-access-rate">0.0116</td>
  </tr>
  <tr>
    <td>Chromium</td>
    <td class="blog-access-pv">3</td>
    <td class="blog-access-rate">0.0087</td>
  </tr>
  <tr>
    <td>iPod</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0029</td>
  </tr>
  <tr>
    <td>SRWare Iron</td>
    <td class="blog-access-pv">1</td>
    <td class="blog-access-rate">0.0029</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td class="blog-access-pv">34,377</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<h4>4. アクセスをブラウザ・バージョン別に集計（上位20件）</h4>

<table class="blog-access">
  <tr>
    <th>ブラウザ</th>
    <th>Version</th>
    <th>PageViews</th>
    <th>比率(%)</th>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.36</td>
    <td class="blog-access-pv">15,193</td>
    <td class="blog-access-rate">44.1952</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>40.0</td>
    <td class="blog-access-pv">5,757</td>
    <td class="blog-access-rate">16.7467</td>
  </tr>
  <tr>
    <td>Mozilla</td>
    <td>11.0</td>
    <td class="blog-access-pv">3,465</td>
    <td class="blog-access-rate">10.0794</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>9537.53</td>
    <td class="blog-access-pv">2,367</td>
    <td class="blog-access-rate">6.8854</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>8.0</td>
    <td class="blog-access-pv">898</td>
    <td class="blog-access-rate">2.6122</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.1.4</td>
    <td class="blog-access-pv">860</td>
    <td class="blog-access-rate">2.5017</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.8.9</td>
    <td class="blog-access-pv">705</td>
    <td class="blog-access-rate">2.0508</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>38.0</td>
    <td class="blog-access-pv">686</td>
    <td class="blog-access-rate">1.9955</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>41.0</td>
    <td class="blog-access-pv">665</td>
    <td class="blog-access-rate">1.9344</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>9.0</td>
    <td class="blog-access-pv">585</td>
    <td class="blog-access-rate">1.7017</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>10.0</td>
    <td class="blog-access-pv">465</td>
    <td class="blog-access-rate">1.3526</td>
  </tr>
  <tr>
    <td>Internet Explorer</td>
    <td>7.0</td>
    <td class="blog-access-pv">282</td>
    <td class="blog-access-rate">0.8203</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>39.0</td>
    <td class="blog-access-pv">230</td>
    <td class="blog-access-rate">0.6691</td>
  </tr>
  <tr>
    <td>Opera</td>
    <td>9.80</td>
    <td class="blog-access-pv">218</td>
    <td class="blog-access-rate">0.6341</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>534.30</td>
    <td class="blog-access-pv">188</td>
    <td class="blog-access-rate">0.5469</td>
  </tr>
  <tr>
    <td>Debian IceWeasel</td>
    <td>38.2.1</td>
    <td class="blog-access-pv">182</td>
    <td class="blog-access-rate">0.5294</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>601.1</td>
    <td class="blog-access-pv">165</td>
    <td class="blog-access-rate">0.4800</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>537.85.17</td>
    <td class="blog-access-pv">111</td>
    <td class="blog-access-rate">0.3229</td>
  </tr>
  <tr>
    <td>Mozilla Firefox</td>
    <td>42.0</td>
    <td class="blog-access-pv">89</td>
    <td class="blog-access-rate">0.2589</td>
  </tr>
  <tr>
    <td>Safari</td>
    <td>600.7.12</td>
    <td class="blog-access-pv">88</td>
    <td class="blog-access-rate">0.2560</td>
  </tr>
  <tr>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
    <td class="blog-access-dot">:</td>
  </tr>
  <tr>
    <td class="blog-access-total-label">合　計</td>
    <td> </td>
    <td class="blog-access-pv">34,377</td>
    <td class="blog-access-rate">100.0000</td>
  </tr>
</table>


<hr />

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - Nokogiri による XML 解析の速度検証！]]></title>
    <link href="http://komasaru.github.io/blog/2015/09/22/ruby-verify-xml-parsing-by-nokogiri/"/>
    <updated>2015-09-22T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/09/22/ruby-verify-xml-parsing-by-nokogiri</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>Ruby で HTML/XML パーサの Nokogiri を使用して XML を解析する際、名前空間(Namespace)が宣言されている場合は厳密に指定する必要があるものだと考えております。</p>

<p>しかし、実際は名前空間を指定せずに解析することも可能です。<br/>
（実際、 XML 内の名前空間を削除するメソッドも用意されています。しかし、そのメソッドは名前空間について理解していない人のためのものであり、一般的には使用すべきではありません）</p>

<p>今回は、各種方法で解析し、どの方法が高速であるかを検証してみました。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Ruby 2.2.3-p173 での作業を想定。</li>
<li>以下で紹介する検証結果は、使用する XML の構造等により若干異なることもあるかもしれない、ということに留意。</li>
</ul>


<h3>1. 検証に使用する XML ファイル</h3>

<p>以下のような XML を使用する。（実際の「気象庁防災情報 XML」通知用 Atom フィードを流用。情報の内容は24時間以内に <code>link</code> タグ内の URL にアクセスして得ることになっている）</p>

<figure class='code'><figcaption><span>test_nokogiri.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;feed</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2005/Atom&quot;</span> <span class="na">xml:lang=</span><span class="s">&quot;ja&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>JMAXML publishing feed<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;subtitle&gt;</span>this feed is published by JMA<span class="nt">&lt;/subtitle&gt;</span>
</span><span class='line'><span class="nt">&lt;updated&gt;</span>2015-08-27T17:28:02+09:00<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'><span class="nt">&lt;id&gt;</span>urn:uuid:d38e0e80-12ba-3236-b10f-256b78a08995<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://www.jma.go.jp/&quot;</span> <span class="na">rel=</span><span class="s">&quot;related&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://xml.kishou.go.jp/feed/other.xml&quot;</span> <span class="na">rel=</span><span class="s">&quot;self&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;rights&gt;</span>Published by Japan Meteorological Agency<span class="nt">&lt;/rights&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;entry&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>地方海上警報<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;id&gt;</span>urn:uuid:ac97395c-e388-33a9-922f-ab2a32e61bb1<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;updated&gt;</span>2015-08-27T08:27:18Z<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'><span class="nt">&lt;author&gt;&lt;name&gt;</span>新潟地方気象台<span class="nt">&lt;/name&gt;&lt;/author&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://xml.kishou.go.jp/data/ac97395c-e388-33a9-922f-ab2a32e61bb1.xml&quot;</span> <span class="na">type=</span><span class="s">&quot;application/xml&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;content</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>【新潟海上気象】<span class="nt">&lt;/content&gt;</span>
</span><span class='line'><span class="nt">&lt;/entry&gt;</span>
</span><span class='line'><span class="nt">&lt;entry&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>地方海上警報<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;id&gt;</span>urn:uuid:b42a06f2-a6f0-351a-a8c4-3619a847f66d<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;updated&gt;</span>2015-08-27T08:27:02Z<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'><span class="nt">&lt;author&gt;&lt;name&gt;</span>仙台管区気象台<span class="nt">&lt;/name&gt;&lt;/author&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://xml.kishou.go.jp/data/b42a06f2-a6f0-351a-a8c4-3619a847f66d.xml&quot;</span> <span class="na">type=</span><span class="s">&quot;application/xml&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;content</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>【仙台海上気象】<span class="nt">&lt;/content&gt;</span>
</span><span class='line'><span class="nt">&lt;/entry&gt;</span>
</span><span class='line'><span class="nt">&lt;entry&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>紫外線観測データ<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;id&gt;</span>urn:uuid:f27e93c8-ff97-376d-b3b0-5307d07e4a24<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;updated&gt;</span>2015-08-27T08:27:10Z<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'><span class="nt">&lt;author&gt;&lt;name&gt;</span>気象庁地球環境・海洋部<span class="nt">&lt;/name&gt;&lt;/author&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://xml.kishou.go.jp/data/f27e93c8-ff97-376d-b3b0-5307d07e4a24.xml&quot;</span> <span class="na">type=</span><span class="s">&quot;application/xml&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;content</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>【紫外線観測データ】<span class="nt">&lt;/content&gt;</span>
</span><span class='line'><span class="nt">&lt;/entry&gt;</span>
</span><span class='line'><span class="nt">&lt;/feed&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. 検証用 Ruby スクリプトの作成</h3>

<ul>
<li>以下のスクリプト内で指定する名前空間は、 &ldquo;text_nokogiri.xml&rdquo; 内で宣言されているものと同じ。</li>
<li><code>entry</code> ノードをループし、各 <code>title</code> ノードのテキストを取得するだけの簡単な処理を 10,000 回繰り返す。</li>
<li>今回は７種類（スクリプト内コメント参照）の解析方法で検証する。</li>
<li>以下のスクリプト内の XPath での「Namespace 指定なし」とは、 Nokogiri での厳密な指定をしないという意味。</li>
</ul>


<figure class='code'><figcaption><span>test_nokogiri_xml.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Ruby script to verify the speed of xml parsing by Nokogiri.</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#++</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TestNokogiriXml</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@xml</span>  <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">XML</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;test_nokogiri.xml&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="vi">@secs</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'>    <span class="vi">@ns</span>   <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;a&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://www.w3.org/2005/Atom&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">exec</span>
</span><span class='line'>    <span class="c1"># 1. css メソッド(CSS セレクタ)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-1: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 2. search メソッド(CSS セレクタ)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-2: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 3. search メソッド(XPath, Namespace 指定なし)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-3: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 4. / メソッド(CSS セレクタ)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-4: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_4</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 5. / メソッド(XPath, Namespace 指定なし)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-5: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_5</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 6. xpath メソッド(XPath, Namespace 指定なし)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-6: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_6</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 7. xpath メソッド(XPath, Namespace 指定あり)による解析</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;CASE-7: %.4f secs.</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">case_7</span><span class="p">)</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="vg">$stderr</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;[</span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">__method__</span><span class="si">}</span><span class="s2">] </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">e</span><span class="o">.</span><span class="n">backtrace</span><span class="o">.</span><span class="n">each</span><span class="p">{</span> <span class="o">|</span><span class="n">tr</span><span class="o">|</span> <span class="vg">$stderr</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="se">\t</span><span class="si">#{</span><span class="n">tr</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="nb">exit</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_1</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@xml</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_2</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@xml</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_3</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@xml</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;//xmlns:entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;./xmlns:title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_4</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="p">(</span><span class="vi">@xml</span><span class="o">/</span><span class="s2">&quot;entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="p">(</span><span class="n">e</span><span class="o">/</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="c1"># 以下でも同様。しかし、ごく少し遅い。</span>
</span><span class='line'>        <span class="c1">#(@xml/:entry).each do |e|</span>
</span><span class='line'>        <span class="c1">#  title = (e/:title).first.text</span>
</span><span class='line'>        <span class="c1">#end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_5</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="p">(</span><span class="vi">@xml</span><span class="o">/</span><span class="s2">&quot;//xmlns:entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="p">(</span><span class="n">e</span><span class="o">/</span><span class="s2">&quot;./xmlns:title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_6</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@xml</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s2">&quot;//xmlns:entry&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s2">&quot;xmlns:title&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">case_7</span>
</span><span class='line'>    <span class="k">return</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">realtime</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@secs</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@xml</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s2">&quot;//a:entry&quot;</span><span class="p">,</span> <span class="vi">@ns</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>          <span class="n">title</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s2">&quot;a:title&quot;</span><span class="p">,</span> <span class="vi">@ns</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">TestNokogiriXml</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">exec</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/komasaru/1f737b67baba38213570" title="Gist - Ruby script to verify the speed of xml parsing by Nokogiri. ">Gist - Ruby script to verify the speed of xml parsing by Nokogiri. </a></li>
</ul>


<h3>3. Ruby スクリプトの実行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ ./test.rb
</span><span class='line'>CASE-1: 2.3432 secs.
</span><span class='line'>CASE-2: 2.4821 secs.
</span><span class='line'>CASE-3: 2.0588 secs.
</span><span class='line'>CASE-4: 2.4949 secs.
</span><span class='line'>CASE-5: 2.0672 secs.
</span><span class='line'>CASE-6: 1.7549 secs.
</span><span class='line'>CASE-7: 1.5359 secs.
</span></code></pre></td></tr></table></div></figure>


<h3>4. 検証結果について</h3>

<ul>
<li>何回か実行してみたが、全て同じような結果となった。</li>
<li><code>xpath</code> メソッドは <code>css</code>, <code>search</code>, <code>/</code> メソッドより高速に解析することができる。</li>
<li><code>xpath</code> メソッドで厳密に名前空間を指定した方が、指定せずに解析するより高速である。</li>
<li>要は、XML を解析する際は <code>xpath</code> メソッドで名前空間を指定しましょう、ということ。</li>
<li>今回の検証結果が全てという訳ではない（場合によっては「一概には言えない」ということがあるかもしれない）</li>
</ul>


<hr />

<p>当方、以前は CSS セレクタを使用して XML 解析を行なっていた時期もありましたが、現在は XPath で厳密に名前空間を指定して解析を行うようにしています。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postfix - メールキューの管理！]]></title>
    <link href="http://komasaru.github.io/blog/2015/09/17/postfix-management-of-mail-queue/"/>
    <updated>2015-09-17T00:20:00+09:00</updated>
    <id>http://komasaru.github.io/blog/2015/09/17/postfix-management-of-mail-queue</id>
    <content type="html"><![CDATA[<p>こんばんは。</p>

<p>SMTP サーバ Postfix でのメールキュー管理についての備忘録です。</p>

<!--more-->


<h3>0. 前提条件</h3>

<ul>
<li>Debian GNU/Linux 8.0(64bit) 上の Postfix 2.11.3-1,<br/>
CentOS 6.7(32bit) 上の Postfix 2.6.6.-2<br/>
での作業を想定。</li>
</ul>


<h3>1. 各種コマンド</h3>

<h4>1-1. メールキューの確認</h4>

<p>配送されずに溜まっているメールキューは &ldquo;/var/spool/postfix/deferred&rdquo; ディレクトリ内にある。<br/>
それらを確認するには以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postqueue -p
</span><span class='line'>-Queue ID- --Size-- ----Arrival Time---- -Sender/Recipient-------
</span><span class='line'>AF70A2C009D*    1504 Sat Aug 22 23:57:39 hoge@xxxxxxxxxx.com
</span><span class='line'>                                         fuga@yyyyyyyyyy.com
</span><span class='line'>
</span><span class='line'>-- 2 Kbytes in 1 Request.
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ mailq
</span></code></pre></td></tr></table></div></figure>


<h4>1-2. メール内容の確認</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postcat -q &lt;QueueID&gt;
</span></code></pre></td></tr></table></div></figure>


<h4>1-3. メールキュー配送の停止</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postsuper -h &lt;QueueID&gt;|ALL
</span></code></pre></td></tr></table></div></figure>


<h4>1-4. メールキューの削除</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postsuper -d &lt;QueueID&gt;|ALL
</span></code></pre></td></tr></table></div></figure>


<p>配送が遅れいているキュー全てを削除する場合は、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postsuper -d ALL deferred
</span></code></pre></td></tr></table></div></figure>


<h4>1-5. メールキューの再送</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postsuper -r &lt;QueueID&gt;|ALL
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ postfix flush
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>postqueue -f
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>sendmail -q
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>時々使用するコマンドなので、忘れたときのために記録しておいた次第です。</p>

<p>以上。</p>
]]></content>
  </entry>
  
</feed>
